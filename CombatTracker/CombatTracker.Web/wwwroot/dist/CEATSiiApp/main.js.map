{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_helpers/ApiPath.interceptor.ts","./src/app/_helpers/DateEx.ts","./src/app/_helpers/EnumEx.ts","./src/app/_helpers/LinqToJs.ts","./src/app/_helpers/Lock.ts","./src/app/_helpers/SafeHtml.ts","./src/app/_helpers/Tasks.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/api-authorization/api-authorization.constants.ts","./src/app/api-authorization/api-authorization.module.ts","./src/app/api-authorization/authorize.guard.ts","./src/app/api-authorization/authorize.interceptor.ts","./src/app/api-authorization/login-menu/login-menu.component.ts","./src/app/api-authorization/login-menu/login-menu.component.html","./src/app/api-authorization/login/login.component.ts","./src/app/api-authorization/login/login.component.html","./src/app/api-authorization/logout/logout.component.ts","./src/app/api-authorization/profile/profile.component.ts","./src/app/api-authorization/profile/profile.component.html","./src/app/api-authorization/register/register.component.ts","./src/app/api-authorization/register/register.component.html","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/approot/app.component.ts","./src/app/approot/app.component.html","./src/app/approot/index.ts","./src/app/components/actor/actor-list.component.ts","./src/app/components/actor/actor-list.component.html","./src/app/components/actor/actor.component.ts","./src/app/components/actor/actor.component.html","./src/app/components/actor/index.ts","./src/app/components/armor/armor-edit.component.ts","./src/app/components/armor/armor-edit.component.html","./src/app/components/armor/armor-list.component.ts","./src/app/components/armor/armor-list.component.html","./src/app/components/armor/index.ts","./src/app/components/attack/attack-edit.component.ts","./src/app/components/attack/attack-edit.component.html","./src/app/components/attack/attack-list.component.ts","./src/app/components/attack/attack-list.component.html","./src/app/components/attack/index.ts","./src/app/components/character/character-edit.component.ts","./src/app/components/character/character-edit.component.html","./src/app/components/character/character-list.component.ts","./src/app/components/character/character-list.component.html","./src/app/components/character/index.ts","./src/app/components/creature/creature-edit.component.ts","./src/app/components/creature/creature-edit.component.html","./src/app/components/creature/creature-list.component.ts","./src/app/components/creature/creature-list.component.html","./src/app/components/creature/index.ts","./src/app/components/encounter/action-edit.component.ts","./src/app/components/encounter/action-edit.component.html","./src/app/components/encounter/action.component.ts","./src/app/components/encounter/action.component.html","./src/app/components/encounter/actions-list.component.ts","./src/app/components/encounter/actions-list.component.html","./src/app/components/encounter/index.ts","./src/app/components/game/game-edit.component.ts","./src/app/components/game/game-edit.component.html","./src/app/components/game/game-list.component.html","./src/app/components/game/game-list.component.ts","./src/app/components/game/index.ts","./src/app/components/messages/index.ts","./src/app/components/messages/message-list.component.ts","./src/app/components/messages/message-list.component.html","./src/app/components/weapon/index.ts","./src/app/components/weapon/weapon-edit.component.ts","./src/app/components/weapon/weapon-edit.component.html","./src/app/components/weapon/weapon-list.component.ts","./src/app/components/weapon/weapon-list.component.html","./src/app/elements/alert/alert.component.ts","./src/app/elements/alert/alert.component.html","./src/app/elements/alert/index.ts","./src/app/elements/index.ts","./src/app/elements/modal/index.ts","./src/app/elements/modal/modal.component.ts","./src/app/elements/modal/modal.component.html","./src/app/elements/modal/modal.service.ts","./src/app/elements/tooltip/index.ts","./src/app/elements/tooltip/tooltip.directive.ts","./src/app/elements/treeview/index.ts","./src/app/elements/treeview/treemodel.ts","./src/app/elements/treeview/treeview.component.ts","./src/app/elements/treeview/treeview.component.html","./src/app/entities/ActionDefinition.ts","./src/app/entities/ActionGroup.ts","./src/app/entities/Actor.ts","./src/app/entities/ApplicationUser.ts","./src/app/entities/Armor.ts","./src/app/entities/Attack.ts","./src/app/entities/AttackType.ts","./src/app/entities/AuthenticateModel.ts","./src/app/entities/BaseAction.ts","./src/app/entities/Book.ts","./src/app/entities/Character.ts","./src/app/entities/ConstitutionBonusChart.ts","./src/app/entities/ConstitutionBonusChartValues.ts","./src/app/entities/Creature.ts","./src/app/entities/CriticalCode.ts","./src/app/entities/CriticalEffect.ts","./src/app/entities/CriticalIgnore.ts","./src/app/entities/CriticalType.ts","./src/app/entities/Dice.ts","./src/app/entities/EnumDefinitions.ts","./src/app/entities/Game.ts","./src/app/entities/IQ.ts","./src/app/entities/LevelChart.ts","./src/app/entities/LevelChartValue.ts","./src/app/entities/Message.ts","./src/app/entities/MoveNextResult.ts","./src/app/entities/MySettings.ts","./src/app/entities/Outlook.ts","./src/app/entities/Pace.ts","./src/app/entities/PsychicRefractoryPeriodEntry.ts","./src/app/entities/ReferenceEntry.ts","./src/app/entities/RegisterModel.ts","./src/app/entities/SizeRating.ts","./src/app/entities/SpeedChart.ts","./src/app/entities/UpdateModel.ts","./src/app/entities/UserModel.ts","./src/app/entities/Weapon.ts","./src/app/entities/WeaponType.ts","./src/app/entities/index.ts","./src/app/navigation/index.ts","./src/app/navigation/main-nav-menu/index.ts","./src/app/navigation/main-nav-menu/main-nav-menu.component.ts","./src/app/navigation/main-nav-menu/main-nav-menu.component.html","./src/app/navigation/side-nav-menu/index.ts","./src/app/navigation/side-nav-menu/side-nav-menu.component.ts","./src/app/navigation/side-nav-menu/side-nav-menu.component.html","./src/app/repositories/Actions.repository.ts","./src/app/repositories/Actors.repository.ts","./src/app/repositories/Characters.repository.ts","./src/app/repositories/Combat.repository.ts","./src/app/repositories/Creatures.repository.ts","./src/app/repositories/CriticalEffects.repository.ts","./src/app/repositories/Encounter.repository.ts","./src/app/repositories/Games.repository.ts","./src/app/repositories/Reference.repository.ts","./src/app/repositories/Settings.repository.ts","./src/app/repositories/Users.repository.ts","./src/app/repositories/index.ts","./src/app/services/Alert.service.ts","./src/app/services/Authentication.service.ts","./src/app/services/Encounter.service.ts","./src/app/services/EncounterHub.service.ts","./src/app/services/References.service.ts","./src/app/services/index.ts","./src/app/top/character/character.component.ts","./src/app/top/character/character.component.html","./src/app/top/character/index.ts","./src/app/top/creature/creature.component.ts","./src/app/top/creature/creature.component.html","./src/app/top/creature/index.ts","./src/app/top/encounter/encounter.component.ts","./src/app/top/encounter/encounter.component.html","./src/app/top/encounter/index.ts","./src/app/top/home/home.component.ts","./src/app/top/home/home.component.html","./src/app/top/home/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root' } )\r\nexport class ApiPathInterceptor implements HttpInterceptor {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var bUrl = this.getBaseUrl();\r\n        if (bUrl == \"/\") {\r\n            bUrl = \"\";\r\n        }\r\n        var rUrl = req.url;\r\n\r\n       //debugger;\r\n      const apiReq = req.clone({ url: bUrl + `/${rUrl}` });\r\n        return next.handle(apiReq);\r\n    }\r\n\r\n    getBaseUrl() {\r\n        return (<any>document.getElementsByTagName('baseapi')[0]).attributes[0].nodeValue;\r\n    }\r\n    //getBaseUrl() {\r\n    //    var str = (<any>document.getElementsByTagName('baseapi')[0]).attributes[0].nodeValue;\r\n    //    //alert(str);\r\n    //    return str;\r\n    //}\r\n\r\n\r\n}\r\n","export { }\r\n\r\n\r\ndeclare global {\r\n\r\n    interface Date {\r\n        formatDate: () => string;\r\n        formatTime: (hideMs?: boolean) => string;\r\n        addDays(days: number): Date;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function formatTimeSpan(ts: number) {\r\n    if (ts <= 0) {\r\n        return \"\";\r\n    }\r\n\r\n    var ms = ts - Math.floor(ts);\r\n    ts = ts - ms;\r\n    var second = ts % 60;\r\n    ts = ts - second;\r\n    second = second + ms;\r\n    ts = ts / 60;\r\n    var minute = ts % 60;\r\n    ts = ts - minute;\r\n    ts = ts / 60;\r\n    var hour = Math.floor(ts);\r\n\r\n    var shour: string = \"\" + hour;\r\n    var sminute: string = \"\" + minute;\r\n    var ssecond: string = \"\" + Math.round(second * 1000) / 1000;\r\n\r\n\r\n    if (hour < 10) {\r\n        shour = \"0\" + shour;\r\n    }\r\n    if (minute < 10) {\r\n        sminute = \"0\" + sminute;\r\n    }\r\n    if (second < 10) {\r\n        ssecond = \"0\" + ssecond;\r\n    }\r\n\r\n\r\n    return shour + \":\" + sminute + \":\" + ssecond;\r\n}\r\n\r\nexport function formatDate(dt: Date) {\r\n    var curr_date = dt.getDate();\r\n    var curr_month = dt.getMonth() + 1; //Months are zero based\r\n    var curr_year = dt.getFullYear();\r\n    return '' + curr_month + \"/\" + curr_date + \"/\" + curr_year;\r\n};\r\n\r\nexport function formatTime(dt: Date, hideMs?: boolean) {\r\n    hideMs = !!hideMs;\r\n    var hour = dt.getHours();\r\n    var minute = dt.getMinutes();\r\n    var second = dt.getSeconds();\r\n    var ms = dt.getMilliseconds();\r\n    var ampm = \"AM\";\r\n    if (hour > 11) {\r\n        hour = hour - 12;\r\n        ampm = \"PM\";\r\n    }\r\n    if (hour == 0) {\r\n        hour = 12;\r\n\r\n    }\r\n\r\n    var sminute: string = \"\" + minute;\r\n    var ssecond: string = \"\" + second;\r\n\r\n    if (minute < 10) {\r\n        sminute = \"0\" + sminute;\r\n    }\r\n    if (second < 10) {\r\n        ssecond = \"0\" + ssecond;\r\n    }\r\n\r\n    return hour + \":\" + sminute + (hideMs ? \"\" : \":\" + ssecond) + \" \" + ampm + (hideMs ? \"\" : \":\" + ms);\r\n};\r\n\r\n\r\n\r\nexport function getTimeCount() {\r\n    var Now = new Date();\r\n    var Cnt = Math.round(Now.getTime());\r\n    return Cnt;\r\n};\r\n\r\n\r\nDate.prototype.formatDate = function (): string {\r\n    return formatDate(this);\r\n}\r\nDate.prototype.formatTime = function (hideMs?: boolean): string  {\r\n    return formatTime(this, hideMs);\r\n}\r\n\r\nDate.prototype.addDays = function (days: number): Date {\r\n    var dat = new Date(this.valueOf());\r\n    dat.setDate(dat.getDate() + days);\r\n    return dat;\r\n}","\r\nexport class EnumEx {\r\n    static getNamesAndValues<T extends number>(e: any) {\r\n        var nms = EnumEx.getNames(e);\r\n        var mpped = nms.map(n => ({ name: n, value: e[n] as T }));\r\n\r\n        var a = 1;\r\n\r\n        return mpped;\r\n    }\r\n\r\n  static getNames(e: any): string[] {\r\n        return EnumEx.getObjValues(e).filter(v => typeof v === \"string\") as string[];\r\n    }\r\n\r\n    static getValues<T extends number>(e: any):T[] {\r\n        return EnumEx.getObjValues(e).filter(v => typeof v === \"number\") as T[];\r\n    }\r\n\r\n    private static getObjValues(e: any): (number | string)[] {\r\n        return Object.keys(e).map(k => e[k]);\r\n    }\r\n}\r\n","\r\ndeclare global {\r\n    interface Array<T> {\r\n        asQueryable(): Queryable<T>;\r\n        remove(item: T): void;\r\n\r\n\r\n        where: (func: (obj: T) => boolean) => Array<T>;\r\n        any: (func: (obj: T) => boolean) => boolean;\r\n        //ForEach: (func: (obj: T) => void) => void;\r\n        sum: (func: (obj: T) => number) => number;\r\n        select: (func: (obj: T) => any) => Array<any>;\r\n        orderBy: (func: (obj: T) => number | string, isDescending?: boolean) => Array<T>;\r\n        sortBy: (func: (obj: T) => number | string, isDescending?: boolean) => void;\r\n        skip: (count: number) => Array<T>;\r\n        take: (count: number) => Array<T>;\r\n        first: () => T;\r\n        last: () => T;\r\n        //FindItem: (func: (obj: T) => boolean) => T;\r\n        //Find: (func: (obj: T) => boolean) => T;\r\n        contains: (item: T, func: (obj: T, obj2: T) => boolean) => T;\r\n        union: (arr: Array<T>) => Array<T>;\r\n        intersect: (arr: Array<T>, func: (obj: T, obj2: T) => boolean) => Array<T>;\r\n        difference: (arr: Array<T>, func: (obj: T, obj2: T) => boolean) => Array<T>;\r\n        insert: (item: T, index?: number) => void;\r\n    }\r\n}\r\n\r\n\r\nexport interface IEnumerable<T> extends Array<T> {\r\n\r\n}\r\n\r\nexport interface IList<T> extends Array<T> {\r\n\r\n}\r\nexport interface List<T> extends Array<T> {\r\n\r\n}\r\nexport interface Dictionary<T1, T2> extends Object {\r\n\r\n}\r\n\r\n//module Linq {\r\n export class Queryable<T> {\r\n\r\n        constructor(private array?: Array<T>) {\r\n            if (this.array == null) {\r\n                this.array = new Array<T>();\r\n            }\r\n        }\r\n\r\n        private equals(x: any, y: any): boolean {\r\n            if (x === y) return true;\r\n            // if both x and y are null or undefined and exactly the same\r\n\r\n            if (!(x instanceof Object) || !(y instanceof Object)) return false;\r\n            // if they are not strictly equal, they both need to be Objects\r\n\r\n            if (x.constructor !== y.constructor) return false;\r\n            // they must have the exact same prototype chain, the closest we can do is\r\n            // test there constructor.\r\n\r\n            for (var p in x) {\r\n                if (!x.hasOwnProperty(p)) continue;\r\n                // other properties were tested using x.constructor === y.constructor\r\n\r\n                if (!y.hasOwnProperty(p)) return false;\r\n                // allows to compare x[ p ] and y[ p ] when set to undefined\r\n\r\n                if (x[p] === y[p]) continue;\r\n                // if they have the same strict value or identity then they are equal\r\n\r\n                if (typeof (x[p]) !== \"object\") return false;\r\n                // Numbers, Strings, Functions, Booleans must be strictly equal\r\n\r\n                if (!this.equals(x[p], y[p])) return false;\r\n                // Objects and Arrays must be tested recursively\r\n            }\r\n\r\n            for (p in y) {\r\n                if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false;\r\n                // allows x[ p ] to be set to undefined\r\n            }\r\n            return true;\r\n        }\r\n\r\n        add = (item: T): void => {\r\n            this.array.push(item);\r\n        }\r\n\r\n        remove = (item: T): void => {\r\n            this.array.remove(item);\r\n        }\r\n\r\n        push = (item: T): void => {\r\n            this.array.push(item);\r\n        }\r\n\r\n\r\n        toArray = (): Array<T> => {\r\n            return this.array.slice(0);\r\n        }\r\n\r\n        get length(): number {\r\n            return this.array.length;\r\n        }\r\n        get count(): number {\r\n            return this.array.length;\r\n        }\r\n        \r\n        distinct = (compareFunction?: (obj1: T, obj2: T) => boolean): Queryable<T> => {\r\n            var lst = new Queryable<T>();\r\n            this.forEach((t) => {\r\n                if (!lst.contains(t, compareFunction)) {\r\n                    lst.add(t);\r\n                }\r\n            });\r\n\r\n            return lst;\r\n        }\r\n\r\n        where = (whereClause: (obj: T) => boolean): Queryable<T> => {\r\n            if (!whereClause) {\r\n                return new Queryable<T>(this.array.slice(0));\r\n            }\r\n            var lst2: any[] = [];\r\n            this.array.forEach(item => {\r\n                if (whereClause(item)) {\r\n                    lst2.push(item);\r\n                }\r\n            });\r\n            return new Queryable<T>(lst2);\r\n        }\r\n\r\n        any = (whereClause?: (obj: T) => boolean): boolean => {\r\n            if (!whereClause) {\r\n                return this.array.length > 0;\r\n            }\r\n            return this.where(whereClause).any();\r\n        }\r\n\r\n        forEach = (func: (obj: T) => any): boolean => {\r\n            var list = this.array;\r\n            if (func == null) {\r\n                return false;\r\n            }\r\n            $.each(list, (i: number, item: T) => {\r\n                func(item);\r\n            });\r\n            return true;\r\n        }\r\n\r\n        sum = (func?: (obj: T) => number): number => {\r\n            if (!func) {\r\n                func = (obj: T): number => {\r\n                    return <number><any>obj;\r\n                }\r\n            }\r\n            var cnt: number = 0;\r\n            this.forEach(item => { cnt = cnt + func(item); });\r\n            return cnt;\r\n        }\r\n        max = (func?: (obj: T) => number): number => {\r\n            if (!func) {\r\n                func = (obj: T): number => {\r\n                    return <number><any>obj;\r\n                }\r\n            }\r\n            var mx: number = func(this.first());\r\n            this.forEach(item => {\r\n                var v: number = func(item);\r\n                if (mx < v) {\r\n                    mx = v;\r\n                }\r\n            });\r\n            return mx;\r\n        }\r\n        min = (func?: (obj: T) => number): number => {\r\n            if (!func) {\r\n                func = (obj: T): number => {\r\n                    return <number><any>obj;\r\n                }\r\n            }\r\n            var mx: number = func(this.first());\r\n            this.forEach(item => {\r\n                var v: number = func(item);\r\n                if (mx > v) {\r\n                    mx = v;\r\n                }\r\n            });\r\n            return mx;\r\n        }\r\n\r\n        select = <T2>(selectItem: (obj: T) => T2): Queryable<T2> => {\r\n            if (selectItem == null) {\r\n                return new Queryable<T2>(<Array<T2>><any>this.array.slice(0));\r\n            }\r\n            return new Queryable<T2>(this.array.map(selectItem));\r\n        }\r\n\r\n     sortBy = (orderBy: (obj: T) => number | string, isDescending = false): void => {\r\n\r\n         this.sortByFunction((ob1, ob2) => {\r\n             var v1 = orderBy(ob1);\r\n             var v2 = orderBy(ob2);\r\n             if (v1 > v2) {\r\n                 return 1;\r\n             }\r\n             if (v1 < v2) {\r\n                 return -1;\r\n             }\r\n             return 0;\r\n         }, isDescending);\r\n     }\r\n\r\n     sortByFunction = (orderBy?: (obj1: T, obj2: T) => any, isDescending = false): void => {\r\n         isDescending = !!isDescending;\r\n         if (orderBy == null) {\r\n             return;// new Queryable<T>(this.array.slice(0));\r\n         }\r\n         //var clone = this.array.slice(0);\r\n         this.array.sort(orderBy);\r\n         if (isDescending) {\r\n             this.array = this.array.reverse();\r\n         }\r\n         return;// (new Queryable<T>(clone));\r\n     }\r\n        orderBy = (orderBy: (obj: T) => number | string, isDescending = false): Queryable<T> => {\r\n\r\n            return this.orderByFunction((ob1, ob2) => {\r\n                var v1 = orderBy(ob1);\r\n                var v2 = orderBy(ob2);\r\n                if (v1 > v2) {\r\n                    return 1;\r\n                }\r\n                if (v1 < v2) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }, isDescending);\r\n        }\r\n\r\n     orderByFunction = (orderBy?: (obj1: T, obj2: T) => any, isDescending = false): Queryable<T> => {\r\n            isDescending = !!isDescending;\r\n            if (orderBy == null) {\r\n                return new Queryable<T>(this.array.slice(0));\r\n            }\r\n            var clone = this.array.slice(0);\r\n            clone.sort(orderBy);\r\n            if (isDescending) {\r\n                clone = clone.reverse();\r\n            }\r\n            return (new Queryable<T>(clone));\r\n        }\r\n\r\n        reverse = (): Queryable<T> => {\r\n            return new Queryable<T>(this.array.reverse());\r\n        }\r\n\r\n        skip = (count: number): Queryable<T> => {\r\n            if (this.length < count) {\r\n                return new Queryable<T>([]);\r\n            }\r\n            this.array.splice(0, count);\r\n            return new Queryable<T>(this.array.slice(0));\r\n        }\r\n\r\n        take = (count: number): Queryable<T> => {\r\n            if (this.length == 0) {\r\n                return new Queryable<T>([]);\r\n            }\r\n            if (count > this.length) {\r\n                count = this.length;\r\n            }\r\n            this.array.splice(count - 1, this.length - count)\r\n            return new Queryable<T>(this.array.slice(0));\r\n        }\r\n\r\n        first = (): T => {\r\n            if (this.length == 0) {\r\n                return null;\r\n            }\r\n            return this.array[0];\r\n        }\r\n        last = (): T => {\r\n            if (this.length == 0) {\r\n                return null;\r\n            }\r\n            return this.array[this.length - 1];\r\n        }\r\n\r\n\r\n        findItem = (selectItem: (obj: T) => boolean): T => {\r\n            return this.where(selectItem).first();\r\n        }\r\n\r\n        find = (selectItem: (obj: T) => boolean): T => {\r\n            return this.where(selectItem).first();\r\n        }\r\n\r\n        contains = (item: T, compareFunction?: (obj1: T, obj2: T) => boolean): boolean => {\r\n            if (!compareFunction) {\r\n                compareFunction = this.equals;\r\n            }\r\n            return this.where((item2: any) => compareFunction(item, item2)).any();\r\n        };\r\n\r\n        union = (arr: Array<T> | Queryable<T>): Queryable<T> => {\r\n            if (arr instanceof Queryable) {\r\n                return new Queryable<T>(this.array.concat((<Queryable<T>>arr).toArray()));\r\n            } else {\r\n\r\n                return new Queryable<T>(this.array.concat(arr));\r\n            }\r\n        }\r\n\r\n        intersect = (arr: Array<T> | Queryable<T>, compareFunction?: (obj1: T, obj2: T) => boolean): Queryable<T> => {\r\n            if (!compareFunction) {\r\n                compareFunction = this.equals;\r\n            }\r\n            var q: Queryable<T> = null;\r\n            if (arr instanceof Queryable) {\r\n                q = <Queryable<T>>arr;\r\n            } else {\r\n                q = new Queryable<T>(this.array.concat(arr));\r\n            }\r\n            var lst2: any[] = [];\r\n            this.forEach((item: any) => {\r\n                if (q.contains(item, compareFunction)) {\r\n                    lst2.push(item);\r\n                }\r\n            });\r\n            return new Queryable<T>(lst2);\r\n\r\n        }\r\n\r\n        difference = (arr: Array<T> | Queryable<T>, compareFunction?: (obj1: T, obj2: T) => boolean): Queryable<T> => {\r\n            if (!compareFunction) {\r\n                compareFunction = this.equals;\r\n            }\r\n            var q: Queryable<T> = null;\r\n            if (arr instanceof Queryable) {\r\n                q = <Queryable<T>>arr;\r\n            } else {\r\n                q = new Queryable<T>(this.array.concat(arr));\r\n            }\r\n            var lst2: any[] = [];\r\n            this.forEach((item: any) => {\r\n                if (!q.contains(item, compareFunction)) {\r\n                    lst2.push(item);\r\n                }\r\n            });\r\n            return new Queryable<T>(lst2);\r\n        }\r\n\r\n        copy = (): Queryable<T> => {\r\n            return new Queryable<T>(this.array.slice(0));\r\n        }\r\n        asQueryable = (): Queryable<T> => {\r\n            return new Queryable<T>(this.array.slice(0));\r\n        }\r\n    }\r\n//}\r\n\r\nArray.prototype.asQueryable = function (): Queryable<any> {\r\n    return new Queryable<any>(this);\r\n};\r\nArray.prototype.remove = function (item: any): void {\r\n    var index = this.indexOf(item);\r\n    if (index > -1) {\r\n        this.splice(index, 1);\r\n    }\r\n};\r\n\r\n//where: (func: (obj: T) => boolean) => Array<T>;\r\n//any: (func: (obj: T) => boolean) => boolean;\r\n////ForEach: (func: (obj: T) => void) => void;\r\n//sum: (func: (obj: T) => number) => number;\r\n//select: (func: (obj: T) => any) => Array<any>;\r\n//orderBy: (func: (obj: T) => number, isDescending: boolean) => Array<T>;\r\n//skip: (count: number) => Array<T>;\r\n//take: (count: number) => Array<T>;\r\n//first: () => T;\r\n//last: () => T;\r\n////FindItem: (func: (obj: T) => boolean) => T;\r\n////Find: (func: (obj: T) => boolean) => T;\r\n//contains: (item: T, func: (obj: T, obj2: T) => boolean) => T;\r\n//union: (arr: Array<T>) => Array<T>;\r\n//intersect: (arr: Array<T>, func: (obj: T, obj2: T) => boolean) => Array<T>;\r\n//difference: (arr: Array<T>, func: (obj: T, obj2: T) => boolean) => Array<T>;\r\n\r\nArray.prototype.sortBy = function (orderBy, isDescending) {\r\n    var arr = <Array<any>>this;\r\n    arr.asQueryable().sortBy(orderBy, isDescending);\r\n\r\n};\r\n\r\nArray.prototype.where = function (where) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().where(where).toArray();\r\n};\r\nArray.prototype.any = function (where) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().any(where);\r\n};\r\n//Array.prototype.ForEach = function (func) {\r\n//    var arr = <Array<any>>this;\r\n//    arr.asQueryable().forEach(func);\r\n//};\r\nArray.prototype.sum = function (func) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().sum(func);\r\n};\r\nArray.prototype.select = function (func) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().select(func).toArray();\r\n};\r\nArray.prototype.orderBy = function (orderBy, isDescending) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().orderBy(orderBy, isDescending).toArray();\r\n};\r\nArray.prototype.skip = function (count) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().skip(count).toArray();\r\n};\r\nArray.prototype.take = function (count) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().take(count).toArray();\r\n};\r\nArray.prototype.first = function () {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().first();\r\n};\r\nArray.prototype.last = function () {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().last();\r\n};\r\n//Array.prototype.FindItem = function (select) {\r\n//    var arr = <Array<any>>this;\r\n//    return arr.asQueryable().findItem(select);\r\n//};\r\n//Array.prototype.Find = function (select) {\r\n//    var arr = <Array<any>>this;\r\n//    return arr.asQueryable().findItem(select);\r\n//};\r\nArray.prototype.contains = function (item, compareFunction) {\r\n    var arr = <Array<any>>this;\r\n    return arr.asQueryable().contains(item, compareFunction);\r\n};\r\nArray.prototype.union = function (arr) {\r\n    var arr2 = <Array<any>>this;\r\n    return arr2.asQueryable().union(arr).toArray();\r\n};\r\nArray.prototype.intersect = function (arr, compareFunction) {\r\n    var arr2 = <Array<any>>this;\r\n    return arr2.asQueryable().intersect(arr, compareFunction).toArray();\r\n};\r\nArray.prototype.difference = function (arr, compareFunction) {\r\n    var arr2 = <Array<any>>this;\r\n    return arr2.asQueryable().difference(arr, compareFunction).toArray();\r\n};\r\n//insert: (item: T, index?: number) => void\r\nArray.prototype.insert = function (item, index) {\r\n    var arr2 = <Array<any>>this;\r\n    index = index || 0;\r\n    arr2.splice(index, 0, item);\r\n\r\n};\r\n\r\n","\r\n\r\nexport async function WhenTrueAsync(func: () => boolean, maxLockTime: number = 60000): Promise<void> {\r\n\r\n    var p = new Promise<void>((resolve, reject) => {\r\n        var startTime = new Date();\r\n        var check = () => {\r\n            if (func) {\r\n                var t = func();\r\n                if (t) {\r\n                    resolve();\r\n                    return;\r\n                }\r\n            }\r\n            var seconds = ((new Date()).getTime() - startTime.getTime()) / 1000;\r\n\r\n            if (seconds >= maxLockTime) {\r\n                reject(\"Max Wait Time for lock hit\");\r\n                return;\r\n            }\r\n\r\n            setTimeout(check, 100);\r\n        };\r\n\r\n\r\n        setTimeout(check, 100);\r\n    });\r\n    return p;\r\n}\r\n\r\n\r\nexport class MutexLock {\r\n\r\n    private locked = false;\r\n    private lastCalled: Date = null;\r\n    //private refreshLock:Lock.Locker = null;\r\n\r\n    constructor(private maxLockTime?: number) {\r\n        //this.refreshLock = new Lock.Locker(maxLockTime);\r\n    }\r\n\r\n    get isLocked(): boolean {\r\n        var seconds = 0;\r\n        if (this.lastCalled) {\r\n            seconds = ((new Date()).getTime() - this.lastCalled.getTime()) / 1000;\r\n        }\r\n        return this.locked && seconds < this.maxLockTime;\r\n    }\r\n\r\n\r\n    async WhenTrueAsync(func: () => boolean): Promise<void> {\r\n        return WhenTrueAsync(func, this.maxLockTime);\r\n    }\r\n\r\n    async WaitTillUnlocked(): Promise<void> {\r\n        await this.WhenTrueAsync(() => {\r\n            return !this.isLocked;\r\n        });\r\n        return;\r\n    }\r\n\r\n    async LockAreaAsync(func: () => Promise<void>): Promise<void> {\r\n        await this.BeginLock();\r\n\r\n        await func();\r\n\r\n        await this.EndLock();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async BeginLock(): Promise<void> {\r\n        await this.WaitTillUnlocked();\r\n        //await this.WhenTrueAsync(() => {\r\n        //    return !this.isLocked;\r\n        //});\r\n\r\n        if (this.isLocked) {\r\n            this.lastCalled = new Date();\r\n            return;\r\n        }\r\n\r\n        this.locked = true;\r\n        this.lastCalled = new Date();\r\n\r\n\r\n    }\r\n\r\n    async EndLock(): Promise<void> {\r\n        this.locked = false;\r\n    }\r\n\r\n}\r\n\r\n","import { Pipe } from '@angular/core'\r\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser'\r\n\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class Safe {\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n\r\n    transform(style:string) {\r\n        return this.sanitizer.bypassSecurityTrustHtml(style);\r\n        //return this.sanitizer.bypassSecurityTrustStyle(style);\r\n        // return this.sanitizer.bypassSecurityTrustXxx(style); - see docs\r\n    }\r\n}\r\n","\r\nimport * as Locking from './Lock'\r\n\r\n//module Tasks {\r\n\r\n\r\nexport interface IException {\r\n    message: string\r\n}\r\n\r\n\r\nexport class Task<TT> {\r\n\r\n    public promise: Promise<TT> = null;\r\n\r\n    private resolveFunc: (value?: TT | PromiseLike<TT>) => void;\r\n\r\n    constructor(private func: (cback?: (val?: TT) => void) => void) {\r\n        //super((resolve, reject) => {\r\n        //        resolveFunc = resolve;\r\n        //});\r\n\r\n        this.promise = new Promise<TT>((resolve) => {\r\n            this.resolveFunc = resolve;\r\n        });\r\n\r\n        if (!this.func) {\r\n            this.func = (rFunc: (val?: TT) => void): void => {\r\n                return rFunc();\r\n            };\r\n        }\r\n        else if (func.length === 0) {\r\n            var bfunc = this.func;\r\n            this.func = (rFunc: (val?: TT) => void) => {\r\n                bfunc();\r\n                rFunc();\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    public then = (onFulfilled: (value?: TT) => TT | PromiseLike<TT>): Promise<TT> => {\r\n        return this.promise.then(onFulfilled);\r\n    }\r\n\r\n    public start = (): void => {\r\n        this.func((val?: TT) => {\r\n            this.resolveFunc(val);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface IDebouncedTask<TT> extends Task<TT> {\r\n    trigger: () => void;\r\n    call: () => void;\r\n}\r\n\r\nexport class RecurringTask {\r\n\r\n    private _isRunning: boolean = false;\r\n\r\n    private refreshLock: Locking.MutexLock = null; // = new Lock.MutexLock(30000);\r\n    //private locker = new Lock.Locker();\r\n    private async timedCall(): Promise<void> {\r\n\r\n        if (this.callback) {\r\n            if (!this.refreshLock.isLocked) {\r\n                await this.refreshLock.LockAreaAsync(async () => {\r\n                    await this.callback();\r\n                });\r\n            }\r\n            //await this.refreshLock.BeginLock();\r\n            //this.callback();\r\n            //await this.refreshLock.EndLock();\r\n        }\r\n        if (this.isRunning) {\r\n            setTimeout(() => { this.timedCall(); }, this.timeout);\r\n        }\r\n    }\r\n\r\n\r\n    constructor(private callback: () => Promise<void>, private timeout: number, private maxLockTime: number = 30000) {\r\n        this.refreshLock = new Locking.MutexLock(this.maxLockTime);\r\n    }\r\n\r\n\r\n    get isRunning(): boolean {\r\n        return this._isRunning;\r\n    }\r\n    //private set isRunning(value: boolean) {\r\n    //    this._isRunning = value;\r\n    //}\r\n\r\n    setTimeOut = (time: number): void => {\r\n        this.timeout = time;\r\n    }\r\n    //lock = (): void => {\r\n    //    this.locker.lock();\r\n    //}\r\n    //unLock = (): void => {\r\n    //    this.locker.unLock();\r\n    //}\r\n    //isLocked = (): boolean => {\r\n    //    return this.locker.isLocked();\r\n    //}\r\n    start = (): void => {\r\n        if (!this.isRunning) {\r\n            this._isRunning = true;\r\n            this.timedCall();\r\n        }\r\n    }\r\n    stop = (): void => {\r\n        this._isRunning = false;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport function runAfterWait(waitTimeMilliSeconds: number): IDebouncedTask<void> {\r\n\r\n    var t = new Task<void>((cback) => {\r\n        cback();\r\n    }) as IDebouncedTask<void>;\r\n\r\n    var timer:number = null;\r\n\r\n    var throttle = (): void => {\r\n        clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            t.start();\r\n        },\r\n            waitTimeMilliSeconds || 500);\r\n    }\r\n\r\n    t.trigger = (): void => {\r\n        throttle();\r\n    }\r\n    t.call = (): void => {\r\n        clearTimeout(timer);\r\n        t.start();\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function debounced(): IDebouncedTask<void> {\r\n    var t = new Task<void>((cback) => {\r\n        cback();\r\n    }) as IDebouncedTask<void>;\r\n\r\n    t.trigger = (): void => {\r\n        t.start();\r\n    }\r\n    t.call = (): void => {\r\n        t.start();\r\n    }\r\n    return t;\r\n}\r\n//export function debouncedAtEnd(waitTimeMilliSeconds: number): IDebouncedTask<void> {\r\n//    var t = new Task<void>((cback) => {\r\n//        setTimeout(cback, waitTimeMilliSeconds);\r\n//    }) as IDebouncedTask<void>;\r\n\r\n\r\n//    t.trigger = (): void => {\r\n//        t.start();\r\n//    }\r\n//    t.call = (): void => {\r\n//        t.start();\r\n//    }\r\n\r\n//    return t;\r\n//}\r\n\r\nexport function delay(msec: number): Promise<void> {\r\n    return new Promise<void>((resolve) => {\r\n        setTimeout(resolve, msec);\r\n    });\r\n}\r\n\r\nexport function whenReady(): Promise<void> {\r\n    return new Promise<void>((resolve) => {\r\n        $(() => {\r\n            resolve();\r\n        });\r\n    });\r\n}\r\n\r\nexport function whenTrue(trueFunc: () => boolean, maxLockTime: number = 60 * 60 * 1000): Promise<void> {\r\n    return Locking.WhenTrueAsync(trueFunc, maxLockTime);\r\n}\r\n\r\n\r\nexport async function WhenAll<tRet>(list: Array<Promise<tRet>>, progressCB?: ((numFinished: number, total: number) => void)): Promise<Array<tRet>> {\r\n    var tot = list.length;\r\n    var fin = 0;\r\n    list.forEach((p) => {\r\n        p.then(() => {\r\n            fin++;\r\n            if (progressCB) {\r\n                progressCB(fin, tot);\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n\r\n    return await Promise.all(list);\r\n}\r\n\r\n//}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '@/services';\r\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '@/services';\r\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(this.handleError));\n  }\n  private handleError(error: HttpErrorResponse) {\r\n    ////debugger;\r\n    console.error(error);\r\n    let customError: string = \"\";\r\n    if (error.error) {\r\n      customError = error.status === 400 ? error.error : error.statusText\r\n    }\r\n    return throwError(customError || 'Server error');\r\n  }\n}\n","\nexport * from './ApiPath.interceptor';\nexport * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './EnumEx';\nexport * from './Lock';\nexport * from './Tasks';\nexport * from './DateEx';\nexport * from './LinqToJs';\nexport * from './SafeHtml';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\nimport { AuthenticationService } from '@/services';\r\n\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    ////debugger;\n    let currentUser = this.authenticationService.currentUserValue;\n    //if (currentUser) {\n    //  return this.authenticationService.getAccessToken().pipe(mergeMap(token => this.processRequestWithToken(token, request, next)));\n    //}\n\n\n    return next.handle(request);\n  }\n  // Checks if there is an access_token available in the authorize service\r\n  // and adds it to the request in case it's targeted at the same origin as the\r\n  // single page application.\r\n  private processRequestWithToken(token: string, req: HttpRequest<any>, next: HttpHandler) {\r\n    if (!!token && this.isSameOriginUrl(req)) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\n\r\n  private isSameOriginUrl(req: any) {\r\n    // It's an absolute url with the same origin.\r\n    if (req.url.startsWith(`${window.location.origin}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a protocol relative url with the same origin.\r\n    // For example: //www.example.com/api/Products\r\n    if (req.url.startsWith(`//${window.location.host}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a relative url like /api/Products\r\n    if (/^\\/[^\\/].*/.test(req.url)) {\r\n      return true;\r\n    }\r\n\r\n    // It's an absolute or protocol relative url that\r\n    // doesn't have the same origin.\r\n    return false;\r\n  }\n}\n","export const ApplicationName = 'CEATSiiApp';\r\n\r\nexport const ReturnUrlType = 'returnUrl';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: ReturnUrlType,\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nlet applicationPaths: ApplicationPathsType = {\r\n  //DefaultLoginRedirectPath: '/Dashboard/App/',\r\n  //ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  Login: `authentication/${LoginActions.Login}`,\r\n  //LoginFailed: `authentication/${LoginActions.LoginFailed}`,\r\n  //LoginCallback: `authentication/${LoginActions.LoginCallback}`,\r\n  Register: `authentication/${LoginActions.Register}`,\r\n  Profile: `authentication/${LoginActions.Profile}`,\r\n  LogOut: `authentication/${LogoutActions.Logout}`,\r\n  //LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\r\n  //LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\r\n  LoginPathComponents: [],\r\n  //LoginFailedPathComponents: [],\r\n  //LoginCallbackPathComponents: [],\r\n  RegisterPathComponents: [],\r\n  ProfilePathComponents: [],\r\n  LogOutPathComponents: [],\r\n  //LoggedOutPathComponents: [],\r\n  //LogOutCallbackPathComponents: [],\r\n // IdentityRegisterPath: 'Identity/Account/Register',\r\n // IdentityManagePath: 'Identity/Account/Manage'\r\n};\r\n\r\napplicationPaths = {\r\n  ...applicationPaths,\r\n  LoginPathComponents: applicationPaths.Login.split('/'),\r\n  //LoginFailedPathComponents: applicationPaths.LoginFailed.split('/'),\r\n  RegisterPathComponents: applicationPaths.Register.split('/'),\r\n  ProfilePathComponents: applicationPaths.Profile.split('/'),\r\n  LogOutPathComponents: applicationPaths.LogOut.split('/'),\r\n  //LoggedOutPathComponents: applicationPaths.LoggedOut.split('/'),\r\n  //LogOutCallbackPathComponents: applicationPaths.LogOutCallback.split('/')\r\n};\r\n\r\ninterface ApplicationPathsType {\r\n  //readonly DefaultLoginRedirectPath: string;\r\n  //readonly ApiAuthorizationClientConfigurationUrl: string;\r\n  readonly Login: string;\r\n  //readonly LoginFailed: string;\r\n  //readonly LoginCallback: string;\r\n  readonly Register: string;\r\n  readonly Profile: string;\r\n  readonly LogOut: string;\r\n  //readonly LoggedOut: string;\r\n  //readonly LogOutCallback: string;\r\n  readonly LoginPathComponents: string [];\r\n  //readonly LoginFailedPathComponents: string [];\r\n  //readonly LoginCallbackPathComponents: string [];\r\n  readonly RegisterPathComponents: string [];\r\n  readonly ProfilePathComponents: string [];\r\n  readonly LogOutPathComponents: string [];\r\n  //readonly LoggedOutPathComponents: string [];\r\n  //readonly LogOutCallbackPathComponents: string [];\r\n  //readonly IdentityRegisterPath: string;\r\n  //readonly IdentityManagePath: string;\r\n}\r\n\r\nexport const ApplicationPaths: ApplicationPathsType = applicationPaths;\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginMenuComponent } from './login-menu/login-menu.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApplicationPaths } from './api-authorization.constants';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReactiveFormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(\r\n      [\r\n        { path: ApplicationPaths.Register, component: RegisterComponent },\r\n        { path: ApplicationPaths.Profile, component: ProfileComponent },\r\n        { path: ApplicationPaths.Login, component: LoginComponent },\r\n        //{ path: ApplicationPaths.LoginFailed, component: LoginComponent },\r\n        //{ path: ApplicationPaths.LoginCallback, component: LoginComponent },\r\n        { path: ApplicationPaths.LogOut, component: LogoutComponent },\r\n        //{ path: ApplicationPaths.LoggedOut, component: LogoutComponent },\r\n        //{ path: ApplicationPaths.LogOutCallback, component: LogoutComponent }\r\n      ]\r\n    )\r\n  ],\r\n    declarations: [LoginMenuComponent, LoginComponent, LogoutComponent, RegisterComponent, ProfileComponent],\r\n    exports: [LoginMenuComponent, LoginComponent, LogoutComponent, RegisterComponent, ProfileComponent]\r\n})\r\nexport class ApiAuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n//import { AuthorizeService } from './authorize.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '@/services';\r\nimport { ApplicationPaths, QueryParameterNames } from './api-authorization.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeGuard implements CanActivate {\r\n  constructor(private authorize: AuthenticationService, private router: Router) {\r\n  }\r\n  canActivate(\r\n    _next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.authorize.isAuthenticated()\r\n        .pipe(tap(isAuthenticated => this.handleAuthorization(isAuthenticated, state)));\r\n  }\r\n\r\n  private handleAuthorization(isAuthenticated: boolean, state: RouterStateSnapshot) {\r\n    if (!isAuthenticated) {\r\n      this.router.navigate(ApplicationPaths.LoginPathComponents, {\r\n        queryParams: {\r\n          [QueryParameterNames.ReturnUrl]: state.url\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n//import { AuthorizeService } from './authorize.service';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '@/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n  constructor(private authorize: AuthenticationService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return  this.processRequestWithToken(\"\", req, next);\r\n  }\r\n\r\n  // Checks if there is an access_token available in the authorize service\r\n  // and adds it to the request in case it's targeted at the same origin as the\r\n  // single page application.\r\n  private processRequestWithToken(token: string, req: HttpRequest<any>, next: HttpHandler) {\r\n    if (!!token && this.isSameOriginUrl(req)) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n\r\n  private isSameOriginUrl(req: any) {\r\n    // It's an absolute url with the same origin.\r\n    if (req.url.startsWith(`${window.location.origin}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a protocol relative url with the same origin.\r\n    // For example: //www.example.com/api/Products\r\n    if (req.url.startsWith(`//${window.location.host}/`)) {\r\n      return true;\r\n    }\r\n\r\n    // It's a relative url like /api/Products\r\n    if (/^\\/[^\\/].*/.test(req.url)) {\r\n      return true;\r\n    }\r\n\r\n    // It's an absolute or protocol relative url that\r\n    // doesn't have the same origin.\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { AuthorizeService } from '../authorize.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from '@/services';\r\n\r\n@Component({\r\n  selector: 'app-login-menu',\r\n  templateUrl: './login-menu.component.html',\r\n  styleUrls: ['./login-menu.component.css']\r\n})\r\nexport class LoginMenuComponent implements OnInit {\r\n  public isAuthenticated: Observable<boolean>;\r\n  public userName: Observable<string>;\r\n\r\n  constructor(private authorizeService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.isAuthenticated = this.authorizeService.isAuthenticated();\r\n    this.userName = this.authorizeService.currentUser.pipe(map(u => u && u.userName));\r\n  }\r\n}\r\n","<ul class=\"navbar-nav\" *ngIf=\"isAuthenticated | async\">\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/profile\"]' title=\"Manage\">Hello {{ userName | async }}</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a  class=\"nav-link text-dark\" [routerLink]='[\"/authentication/logout\"]' [state]='{ local: true }' title=\"Logout\">Logout</a>\r\n    </li>\r\n</ul>\r\n<ul class=\"navbar-nav\" *ngIf=\"!(isAuthenticated | async)\">\r\n  <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/register\"]'>Register</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]='[\"/authentication/login\"]'>Login</a>\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { AuthorizeService, AuthenticationResultStatus } from '../authorize.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthenticationService } from '@/services';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authenticationService: AuthenticationService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) {\r\n            this.router.navigate(['/']);\r\n        }\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    async onSubmit():Promise<void> {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        //this.alertService.clear();\r\n\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        var user = await this.authenticationService.loginAsync(this.f.username.value, this.f.password.value);\r\n        if (user != null) {\r\n            this.router.navigate([this.returnUrl]);\n        } else {\r\n            this.loading = false;\r\n            this.submitted = false;\n        }\r\n    }\r\n}\r\n","<div class=\"container\" style=\"max-width: 600px; padding:40px;\">\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header\">Login</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                        Login\r\n                    </button>\r\n                    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n//import { AuthenticationResultStatus, AuthorizeService } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from '@/services';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authorizeService: AuthenticationService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n      await this.authorizeService.logoutAsync();\r\n\r\n      this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.less']\r\n})\r\n/** profile component*/\r\nexport class ProfileComponent {\r\n    /** profile ctor */\r\n    constructor() {\r\n\r\n    }\r\n}","<div style=\"border: 1px solid red\">profile Component</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from '@/services';\r\nimport { RegisterModel } from '../../entities';\r\n\r\n@Component({\r\n    selector: 'register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.less']\r\n})\r\n/** Register component*/\r\nexport class RegisterComponent implements OnInit {\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    /** Register ctor */\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AuthenticationService\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            email: ['', Validators.required],\r\n            password: ['', [Validators.required, Validators.minLength(6)]]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    async onSubmit():Promise<void> {\r\n        this.submitted = true;\r\n\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        var model = new RegisterModel();\r\n\r\n        model.email = this.f.email.value;\r\n        model.firstName = this.f.firstName.value;\r\n        model.lastName = this.f.lastName.value;\r\n        model.password = this.f.password.value;\r\n        model.username = this.f.username.value;\r\n\r\n\r\n\r\n        var u = await this.accountService.registerAsync(model);\r\n\r\n\r\n\r\n        this.router.navigateByUrl(\"/\");\r\n    }\r\n}","<div class=\"card\">\r\n    <h4 class=\"card-header\">Register</h4>\r\n    <div class=\"card-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"firstName\">First Name</label>\r\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n                <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastName\">Last Name</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n                <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Register\r\n                </button>\r\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n//import { GameComponent } from './components/game/game.component';\r\n//import { CharacterComponent } from './components/character/character.component';\r\n//import { ActorComponent } from './components/actor/actor.component';\r\n\r\n\r\nimport { HomeComponent } from '@/top/home';\r\nimport { CreatureComponent } from '@/top/creature';\r\nimport { CharacterComponent } from '@/top/character';\r\nimport { EncounterComponent } from '@/top/encounter';\r\nimport { AuthorizeGuard } from './api-authorization/authorize.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'creatures', component: CreatureComponent, canActivate: [AuthorizeGuard] },\r\n    { path: 'characters', component: CharacterComponent, canActivate: [AuthorizeGuard] },\r\n    { path: 'encounter/:id', component: EncounterComponent },\r\n    //{ path: 'mycreatures', component: CreatureComponent, canActivate: [AuthorizeGuard] },\r\n\r\n    //{ path: 'games', component: GameComponent, canActivate: [AuthorizeGuard] },\r\n    //{ path: 'character', component: CharacterComponent, canActivate: [AuthorizeGuard] },\r\n    //\r\n    //{ path: 'actor/:id', component: ActorComponent, canActivate: [AuthorizeGuard] },\r\n    //{ path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,\r\n          { enableTracing: true, relativeLinkResolution: 'legacy' }) // <-- debugging purposes only)\r\n    ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from '@/approot';\r\nimport { HomeComponent } from '@/top/home';\r\nimport { EncounterComponent } from '@/top/encounter';\r\nimport { CreatureComponent } from '@/top/creature';\r\nimport { CharacterComponent } from '@/top/character';\r\n//import { GameComponent } from '@/top/game';\r\n\r\n\r\nimport { MainNavMenuComponent } from '@/navigation';\r\nimport { SideNavMenuComponent } from '@/navigation';\r\n\r\n\r\nimport { GameListComponent } from '@/components/game';\r\nimport { GameEditComponent } from '@/components/game';\r\nimport { CharacterListComponent } from '@/components/character';\r\nimport { CharacterEditComponent } from '@/components/character';\r\nimport { CreatureListComponent } from '@/components/creature';\r\nimport { CreatureEditComponent } from '@/components/creature';\r\nimport { ArmorListComponent } from '@/components/armor';\r\nimport { ArmorEditComponent } from '@/components/armor';\r\nimport { AttackListComponent } from '@/components/attack';\r\nimport { AttackEditComponent } from '@/components/attack';\r\nimport { WeaponListComponent } from '@/components/weapon';\r\nimport { WeaponEditComponent } from '@/components/weapon';\r\nimport { ActionEditComponent, ActionsListComponent } from '@/components/encounter';\r\nimport { ActionComponent } from '@/components/encounter';\r\nimport { ActorComponent, ActorListComponent } from '@/components/actor/';\r\nimport { ModalComponent, ModalService, TreeviewComponent, TooltipDirective } from '@/elements';\r\nimport { AlertComponent } from '@/elements';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { JwtInterceptor, ErrorInterceptor, ApiPathInterceptor, Safe } from '@/_helpers';\r\n\r\nimport { AuthenticationService, EncounterService, EncounterHubService, AlertService, ReferencesService } from '@/services';\r\n\r\nimport { AuthorizeInterceptor } from './api-authorization/authorize.interceptor';\r\nimport { ApiAuthorizationModule } from './api-authorization/api-authorization.module';\r\nimport { MessageListComponent } from './components/messages';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HomeComponent,\r\n        EncounterComponent,\r\n        CreatureComponent,\r\n        CharacterComponent,\r\n        AppComponent,\r\n        GameListComponent,\r\n        GameEditComponent,\r\n        CharacterEditComponent,\r\n        CharacterListComponent,\r\n        CreatureListComponent,\r\n        CreatureEditComponent,\r\n        ActorComponent,\r\n        ActorListComponent,\r\n        EncounterComponent,\r\n        ArmorListComponent,\r\n        ArmorEditComponent,\r\n        WeaponListComponent,\r\n        WeaponEditComponent,\r\n        ModalComponent,\r\n        TreeviewComponent,\r\n        TooltipDirective,\r\n        MessageListComponent,\r\n        AttackListComponent,\r\n        AttackEditComponent,\r\n        ActionsListComponent,\r\n        ActionEditComponent,\r\n        ActionComponent,\r\n        AlertComponent,\r\n        MainNavMenuComponent,\r\n        SideNavMenuComponent,\r\n        Safe\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        //NgbModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        BrowserModule,\r\n        ApiAuthorizationModule,\r\n        AppRoutingModule\r\n    ],\r\n    providers: [\r\n        //{\r\n        //    provide: 'BASE_URL',\r\n        //    useFactory: getBaseUrl\r\n        //},\r\n        //{\r\n        //  provide: 'BASE_URL',\r\n        //  useFactory: getBaseUrl\r\n        //},\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ApiPathInterceptor,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthorizeInterceptor,\r\n            multi: true\r\n        },\r\n        //{\r\n        //  provide: HTTP_INTERCEPTORS,\r\n        //  useClass: JwtInterceptor,\r\n        //  multi: true,\r\n        //  deps: [AuthenticationService]\r\n        //},\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorInterceptor,\r\n            multi: true,\r\n            deps: [AuthenticationService]\r\n        },\r\n        EncounterService,\r\n        EncounterHubService,\r\n        AlertService,\r\n        ReferencesService,\r\n        ModalService,\r\n        //Services.AlertService,\r\n        //Services.AuthenticationService,\r\n        //Services.EncounterService,\r\n        //Services.ReferencesService,\r\n        //Repositories.ActionsRepository,\r\n        //Repositories.ActorsRepository,\r\n        //Repositories.CharactersRepository,\r\n        //Repositories.CombatRepository,\r\n        //Repositories.CreaturesRepository,\r\n        //Repositories.CriticalEffectsRepository,\r\n        //Repositories.EncounterRepository,\r\n        //Repositories.GamesRepository,\r\n        //Repositories.ReferenceRepository,\r\n        //Repositories.SampleDataRepository,\r\n        //Repositories.SettingsRepository,\r\n        //Repositories.UsersRepository\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n//export function getBaseUrl() {\r\n//    return (<any>document.getElementsByTagName('baseAction')[0]).href;\r\n//}\r\n","import { Component, VERSION, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@/services';\r\nimport { ApplicationUser } from '@/entities';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  title = 'CEATSiiApp';\n  public name: string;\r\n  currentUser: ApplicationUser;\n\n  constructor(\r\n    private router: Router,\n    private authenticationService: AuthenticationService) {\n    this.name = `Angular! v${VERSION.full}`;\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","\r\n\r\n<header class=\"\" style=\"height: 10%!important;\">\r\n    <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow h-100 \" style=\"flex-flow: column;\">\r\n        <div class=\"container\">\r\n            <a class=\"navbar-brand\" asp-area=\"\" asp-controller=\"Home\" asp-action=\"Index\">CEATSii</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\">\r\n                <app-login-menu class=\"navbar-nav\"></app-login-menu>\r\n\r\n                <main-nav-menu class=\"navbar-nav flex-grow-1\"></main-nav-menu>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"container\" style=\"text-align: center; display: block;\"><alert style=\"\"></alert></div>\r\n    </nav>\r\n</header>\r\n\r\n<div class=\"mainbody\">\r\n    <main role=\"main\" class=\"clear h-100\" style=\"\">\r\n\r\n        <div class=\"h-100\" style=\"position:relative;\">\r\n            <div class='apparea'>\r\n                <!--<div class='menu-column'>\r\n                  <div class=\"displayInfo\"></div>\r\n                  <side-nav-menu></side-nav-menu>\r\n                </div>-->\r\n                <div class='body-content'>\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<footer class=\"border-top footer text-muted\" style=\"height: 10%!important;\">\r\n    <div class=\"container h-100\">\r\n        &copy; 2021 Solmead Productions - CEATSii - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n    </div>\r\n</footer>\r\n","\nexport * from './app.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions'\r\nimport { Actor, BaseAction, CriticalEffect } from '@/entities';\r\nimport ParryType = EnumDefinitions.ParryType;\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\nimport CharacterType = EnumDefinitions.CharacterType;\r\nimport { EncounterService } from '@/services';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'actor-list',\r\n    templateUrl: './actor-list.component.html',\r\n    styleUrls: ['./actor-list.component.less']\r\n})\r\n/** Actor-List component*/\r\nexport class ActorListComponent {\r\n\r\n    @Input() actors: Array<Actor> = new Array<Actor>();\r\n    //@Input() actions: Array<BaseAction> = new Array<BaseAction>();\r\n\r\n    @Input() isSelectable: boolean = false;\r\n    @Input() viewType: ViewTypeEnum = ViewTypeEnum.Overview;\r\n\r\n\r\n    @Output() onSelect = new EventEmitter<Actor>();\r\n\r\n    //public selectedActor: Actor = null;\r\n\r\n\r\n    /** Actor-List ctor */\r\n    constructor(public gameView: EncounterService) {\r\n\r\n    }\r\n\r\n\r\n\r\n    get isGM(): boolean {\r\n        return this.viewType == ViewTypeEnum.GM;\r\n    }\r\n\r\n    get isPlayer(): boolean {\r\n        return this.viewType == ViewTypeEnum.Player;\r\n    }\r\n\r\n    get isViewOnly(): boolean {\r\n        return this.viewType == ViewTypeEnum.Overview;\r\n    }\r\n\r\n    isPC(actor:Actor): boolean {\r\n        if (actor != null) {\r\n            return actor.type == CharacterType.PC;\r\n        }\r\n        return false;\r\n    }\r\n    get isCurrentUser(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isControlledVisible(actor: Actor): boolean {\r\n        return this.isGM || (this.isViewOnly && this.isPC(actor)) || (this.isPlayer && this.isCurrentUser);\r\n    }\r\n\r\n\r\n    selectActor = async (actor: Actor) => {\r\n        if (this.isSelectable) {\r\n            this.onSelect.next(actor);\r\n        }\r\n    }\r\n\r\n    curAction = (actor: Actor): BaseAction => {\r\n        var act = actor.currentAction;\r\n        return act;\r\n    }\r\n\r\n    currentTime(actor: Actor): string {\r\n        if (actor.currentAction != null) {\r\n            return '' + Math.floor(actor.currentAction.endTime * 100) / 100;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    currentArmor = (actor:Actor): string => {\r\n\r\n        if (actor != null && actor.currentArmor != null) {\r\n            return '' + actor.currentArmor.type;\r\n        }\r\n        return \"\";\r\n    }\r\n    currentWeapon = (actor: Actor): string => {\r\n        var ac = this.curAction(actor);\r\n        //debugger;\r\n        if (ac != null && ac.currentAttack != null && ac.currentAttack.attackType != null) {\r\n            if (ac.currentAttack.attackType.name == \"Weapon\") {\r\n                if (ac.currentAttack.weaponUsed != null) {\r\n                    return ac.currentAttack.weaponUsed.name;\r\n                }\r\n            } else {\r\n                return ac.currentAttack.sizeRating.name + \" \" + ac.currentAttack.attackType.name\r\n            }\r\n        }\r\n\r\n\r\n        return \"None\";\r\n    }\r\n    currentModifier = (actor: Actor): number => {\r\n        var ac = this.curAction(actor);\r\n        if (ac != null) {\r\n            return this.curAction(actor).currentModifier;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    isNaN(num: number): boolean {\r\n        return isNaN(num);\n    }\r\n\r\n    isMustParry = (actor: Actor): boolean => {\r\n        return this.currentCrits(actor).parry == ParryType.Must_Parry;\r\n    }\r\n    isNoParry = (actor: Actor): boolean => {\r\n        return this.currentCrits(actor).parry == ParryType.No_Parry;\r\n    }\r\n\r\n    currentCrits = (actor: Actor): CriticalEffect => {\r\n        if (actor.currentCrits == null) {\r\n            return new CriticalEffect();\r\n        }\r\n        return actor.currentCrits;\r\n    }\r\n    baseOB = (actor: Actor): string => {\r\n        var ac = this.curAction(actor);\r\n        if (ac != null && ac.currentAttack != null) {\r\n            return '' + (ac.currentAttack.ob);\r\n        }\r\n        return \"\";\n    }\r\n    currentOB = (actor: Actor): string => {\r\n        var ac = this.curAction(actor);\r\n        if (ac != null && ac.currentAttack != null) {\r\n            var i = 0;\r\n            if (actor.currentCrits != null) {\r\n                i = actor.currentCrits.parryNegative;\r\n            }\r\n            return '' + (ac.currentAttack.ob + i);\r\n        }\r\n        return \"\";\r\n    }\r\n    baseDB = (actor: Actor): string => {\r\n        var ac = this.curAction(actor);\r\n        if (ac != null && actor != null && actor.currentArmor != null) {\r\n            return '' + actor.currentArmor.db;\r\n        }\r\n        return \"\";\r\n    }\r\n    currentDB = (actor: Actor): string => {\r\n        var ac = this.curAction(actor);\r\n        if (ac != null && actor != null && actor.currentArmor != null) {\r\n            if (ac.currentAttack != null) {\r\n                return '' + (actor.currentArmor.db);\r\n            }\r\n\r\n\r\n            return '' + actor.currentArmor.db;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    currentBackColor = (actor: Actor): string => {\r\n        //var ac = this.curAction(actor);\r\n        return \"rgba(\" + actor.color + \")\";\r\n    }\r\n}","<div class=\"list h-100\">\r\n    <p *ngIf=\"!actors\"><em>Loading...</em></p>\r\n    <div class=\"initiative-list h-100\">\r\n        <div class=\"combatantsTableOuter h-100\" style=\"\">\r\n            <div class=\"combatantsTable h-100\" style=\"\">\r\n                <table class=\"combatants\" *ngIf=\"actors\">\r\n                    <thead class=\"combatants--header\">\r\n                        <tr>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Init\r\n                            </th>\r\n                            <th rowspan=\"2\">\r\n                                Time\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Name\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Hits\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                PPs\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Exhs\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Attack\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                Armor\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                OB\r\n                            </th>\r\n                            <!--<th style=\"vertical-align: middle;\">\r\n                            Base DB\r\n                        </th>-->\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n                                DB\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" colspan=\"3\">\r\n                                Mods\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n\r\n                            </th>\r\n                            <th style=\"vertical-align: middle;\" rowspan=\"2\">\r\n\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                All\r\n                            </th>\r\n                            <th>\r\n                                Spell\r\n                            </th>\r\n                            <th>\r\n                                OB\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"combatant\" *ngFor=\"let actor of actors\" (click)=\"selectActor(actor)\" [ngClass]=\"{'selected': actor.isSelected,\r\n                                                                                                            'active': actor.isActive}\">\r\n                            <td>\r\n                                {{actor.rolledInititive}}\r\n                            </td>\r\n                            <td>\r\n                                {{currentTime(actor)}}\r\n                            </td>\r\n                            <td class=\"nameColumn\" style=\"text-align:left;\">\r\n                                {{actor.name}}\r\n                            </td>\r\n                            <td class=\"actorColumn\">\r\n                                <span *ngIf=\"isControlledVisible(actor)\"><span [class]=\"actor.damageString\">{{actor.hitsRemaining}}</span>/{{actor.hitsTotal}}</span>\r\n                                <span *ngIf=\"!isControlledVisible(actor)\"><span [class]=\"actor.damageString\">{{actor.damageString}}</span></span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor) && actor.powerPointsTotal>0\">{{actor.powerPointsRemaining}}/{{actor.powerPointsTotal}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor)\">{{actor.exhaustionRemaining}}/{{actor.exhaustionTotal}}</span>\r\n                            </td>\r\n                            <td>\r\n                                {{currentWeapon(actor)}}\r\n                            </td>\r\n                            <td>\r\n                                {{currentArmor(actor)}}\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor) && (currentOB(actor)!='' || baseOB(actor))!=''\">{{currentOB(actor)}}/{{baseOB(actor)}}</span>\r\n                            </td>\r\n                            <!--<td>\r\n                            <span *ngIf=\"isControlledVisible(actor)\">{{baseDB(actor)}}</span>\r\n                        </td>-->\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor)\">{{currentDB(actor)}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor) && (actor.negatives + currentModifier(actor) != 0) && !isNaN(actor.negatives + currentModifier(actor))\">{{actor.negatives + currentModifier(actor)}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor) && (actor.spellNegatives + currentModifier(actor) != 0) && !isNaN(actor.spellNegatives + currentModifier(actor))\">{{actor.spellNegatives + currentModifier(actor)}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"isControlledVisible(actor) && (actor.negatives + currentModifier(actor) + currentCrits(actor).parryNegative != 0) && !isNaN(actor.negatives + currentModifier(actor) + currentCrits(actor).parryNegative)\">{{actor.negatives + currentModifier(actor) + currentCrits(actor).parryNegative}}</span>\r\n                            </td>\r\n                            <td>\r\n                                <div *ngIf=\"actor.criticalModified!=null && actor.criticalModified!=''\">\r\n                                    {{actor.criticalModified}}\r\n                                </div>\r\n                                <div *ngIf=\"actor.criticalIgnores!=null && actor.criticalIgnores!=''\">\r\n                                    {{actor.criticalIgnores}}\r\n                                </div>\r\n                            </td>\r\n                            <td style=\"padding:0;\">\r\n                                <div class=\"hasteArea\" style=\"display:inline-block;\">\r\n                                    <span class=\"hasted iconArea\" *ngIf=\"actor.percentAction > 100\" [tooltip]=\"'Hasted'\">\r\n                                        <i class='material-icons'>directions_run</i>\r\n                                    </span>\r\n                                    <span class=\"slowed iconArea\" *ngIf=\"actor.percentAction < 100\" [tooltip]=\"'Slowed'\">\r\n                                        <i class='material-icons'>slow_motion_video</i>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"suprisedArea\" style=\"display:inline-block;\">\r\n                                    <span class=\"suprised iconArea\" *ngIf=\"actor.suprised\" [tooltip]=\"'Suprised'\">\r\n                                        <i class='material-icons'>alarm</i>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"stunArea\" style=\"display:inline-block;\">\r\n                                    <span class=\"stun iconAreaText\" *ngIf=\"currentCrits(actor).isStunned\" [tooltip]=\"'Stunned'\"><i class='material-icons'>emergency</i><span class=\"textMod\">->{{actor.stunRounds}}</span></span>\r\n                                </div>\r\n                                <div class=\"\" style=\"display:inline-block;\">\r\n                                    <span class=\"concentrating iconArea\" *ngIf=\"actor.isConcentrating\" [tooltip]=\"'Concentrating'\">\r\n                                        <i class='material-icons'>emoji_objects</i>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"\" style=\"display:inline-block;\">\r\n                                    <span class=\"adrenal iconArea\" *ngIf=\"actor.usingAdrenalDB\" [tooltip]=\"'Adrenal DB'\">\r\n                                        <i class='material-icons'>run_circle</i>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"\" style=\"display:inline-block;\">\r\n                                    <span class=\"mustParry iconAreaText\" *ngIf=\"isMustParry(actor)\" [tooltip]=\"'Must Parry'\"><i class='material-icons'>error</i><span class=\"textMod\">->{{actor.parryRounds}}</span></span>\r\n                                    <span class=\"noParry iconAreaText\" *ngIf=\"isNoParry(actor)\" [tooltip]=\"'No Parry'\"><i class='material-icons'>priority_high</i><span class=\"textMod\">->{{actor.parryRounds}}</span></span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from \"rxjs\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { EncounterService } from \"@/services\";\r\n\r\n@Component({\r\n    selector: 'app-actor',\r\n    templateUrl: './actor.component.html',\r\n    styleUrls: ['./actor.component.css']\r\n})\r\n/** actor component*/\r\nexport class ActorComponent {\r\n    /** actor ctor */\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        public encounterService: EncounterService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const id = +this.route.snapshot.paramMap.get('id');\r\n        this.encounterService.selectActor(id);\r\n\r\n    }\r\n}\r\n","<div style=\"border: 1px solid red\">actor Component</div>","\nexport * from './actor-list.component';\nexport * from './actor.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Armor } from '@/entities';\r\nimport { CombatRepository } from '@/repositories';\r\n\r\n@Component({\r\n    selector: 'app-armor-edit',\r\n    templateUrl: './armor-edit.component.html',\r\n    styleUrls: ['./armor-edit.component.css']\r\n})\r\n/** ArmorEdit component*/\r\nexport class ArmorEditComponent {\r\n\r\n    @Input() armor: Armor;\r\n    @Output() onDelete = new EventEmitter<Armor>();\r\n\r\n    /** ArmorEdit ctor */\r\n    constructor(private combatRepo: CombatRepository) {\r\n\r\n    }\r\n\r\n    delete() {\r\n        this.onDelete.emit(this.armor);\r\n    }\r\n\r\n    //save = async () => {\r\n    //    var arm = await this.combatRepo.saveArmorAsync(this.armor);\r\n    //    this.armor.id = arm.id;\r\n    //    this.onSave.emit(arm);\r\n    //}\r\n}\r\n","<div *ngIf=\"armor\" class=\"edit-area\">\r\n    <fieldset>\r\n        <legend>Armor</legend>\r\n        <!--<form #armorForm=\"ngForm\" class=\"form-horizontal\">-->\r\n        <div class=\"form-group full-row\">\r\n            <label for=\"type\" class=\"control-label\">Armor Type</label>\r\n            <div class=\"control-area control-area-number\">\r\n                <input #name=\"ngModel\" name=\"type\" type=\"text\" class=\"form-control\"\r\n                       [(ngModel)]=\"armor.type\" required style=\"width: 40px;\" />\r\n                <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                    Please enter a type\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div class=\"form-group full-row\" style=\"\">\r\n                <label for=\"description\" class=\"control-label\">Description</label>\r\n                <div class=\"control-area\">\r\n                    <input name=\"description\" class=\"form-control\"\r\n                           [(ngModel)]=\"armor.description\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group half-row\" style=\"\">\r\n                <label for=\"db\" class=\"control-label\">DB</label>\r\n                <div class=\"control-area control-area-number\">\r\n                    <input name=\"db\" class=\"form-control\"\r\n                           [(ngModel)]=\"armor.db\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group half-row\" style=\"\">\r\n                <label for=\"movingManeuverMod\" class=\"control-label\">Moving Maneuver</label>\r\n                <div class=\"control-area control-area-number\">\r\n                    <input name=\"movingManeuverMod\" class=\"form-control\"\r\n                           [(ngModel)]=\"armor.movingManeuverMod\" />\r\n                </div>\r\n            </div>\r\n        <div class=\"text-center pt-2\">\r\n            <button class=\"btn btn-danger btn-sm pull-right\" \r\n                    (click)=\"delete()\">\r\n                Remove\r\n            </button>\r\n        </div>\r\n                <!--<div class=\"text-center pt-2\">\r\n\r\n                    <button class=\"btn btn-danger btn-sm pull-right\" [disabled]=\"armorForm.invalid\"\r\n                            (click)=\"save()\">\r\n                        Save\r\n                    </button>\r\n\r\n                </div>-->\r\n<!--</form>-->\r\n    </fieldset>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Armor } from '@/entities';\r\n\r\n@Component({\r\n    selector: 'armor-list',\r\n    templateUrl: './armor-list.component.html',\r\n    styleUrls: ['./armor-list.component.css']\r\n})\r\n/** Armor component*/\r\nexport class ArmorListComponent {\r\n\r\n    @Input() armors: Array<Armor> = new Array<Armor>();\r\n    @Input() charId: number;\r\n    @Output() onDelete = new EventEmitter<Armor>();\r\n\r\n    public selectedArmor: Armor;\r\n   \r\n\r\n    /** Armor ctor */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.armors.length > 0) {\r\n            this.selectedArmor = this.armors[0];\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.armors.length > 0) {\r\n            this.selectedArmor = this.armors[0];\r\n        }\r\n    }\r\n\r\n\r\n    newArmor() {\r\n        var arm = new Armor();\r\n        arm.characterId = this.charId;\r\n        this.selectedArmor = arm;\r\n        this.armors.push(arm);\r\n        //this.cnt = this.cnt + 1;\r\n    }\r\n\r\n    onArmorDeleted(armor: Armor) {\r\n        this.onDelete.emit(armor);\r\n    }\r\n    //onArmorSaved(armor: Armor) {\r\n    //    var arm = this.armors.find((a) => a.id == armor.id);\r\n    //    if (arm == null) {\r\n    //        this.armors.push(armor);\r\n    //    }\r\n    //}\r\n\r\n    selectArmor(armor: Armor) {\r\n        this.selectedArmor = armor;\r\n    }\r\n\r\n    get selectedArmorId(): number {\r\n        if (this.selectedArmor != null) {\r\n            return this.selectedArmor.type;\r\n        }\r\n        return 0;\r\n    }\r\n    set selectedArmorId(value: number) {\r\n        this.selectedArmor = this.armors.find((a) => a.type == value);\r\n    }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <div class=\"area\">\r\n        <div class=\"list\">\r\n            <p *ngIf=\"!armors\"><em>Loading...</em></p>\r\n            <div class=\"mainList\">\r\n                <h3 style=\"display:block; margin-top:0;\">\r\n                    <div style=\"float:right;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"newArmor()\">\r\n                            <span class=\"glyphicon glyphicon-plus\"></span> New\r\n                        </button>\r\n                    </div>\r\n                    Armors\r\n                </h3>\r\n                <select class=\"form-control\" name=\"selectedArmor\" size=\"5\" [(ngModel)]=\"selectedArmorId\">\r\n                    <option *ngFor=\"let armor of armors\" value={{armor?.type}}>\r\n                        ({{armor?.type}}) {{armor?.description}}\r\n                    </option>\r\n                </select>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"edit\">\r\n            <!--(onSave)=\"onArmorSaved($event)\"-->\r\n            <app-armor-edit [armor]=\"selectedArmor\" (onDelete)=\"onArmorDeleted($event)\"></app-armor-edit>\r\n        </div>\r\n    </div>\r\n</div>","\nexport * from './armor-list.component';\nexport * from './armor-edit.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Attack } from '@/entities';\r\nimport { CombatRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { ReferencesService } from \"@/services\";\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\nimport { Weapon } from '@/entities';\r\n\r\n@Component({\r\n    selector: 'app-attack-edit',\r\n    templateUrl: './attack-edit.component.html',\r\n    styleUrls: ['./attack-edit.component.css']\r\n})\r\n/** AttackEdit component*/\r\nexport class AttackEditComponent {\r\n    /** WeaponEdit ctor */\r\n    @Input() attack: Attack;\r\n    @Output() onDelete = new EventEmitter<Attack>();\r\n\r\n    /** ArmorEdit ctor */\r\n    constructor(private combatRepo: CombatRepository,\r\n        private encounterService: EncounterService,\r\n        public referencesService: ReferencesService) {\r\n\r\n    }\r\n\r\n    get weaponTypeId(): number {\r\n        var at = this.referencesService.WeaponTypes.find((a) => this.attack.weaponUsed != null && a.name == this.attack.weaponUsed.name);\r\n\r\n        if (at != null) {\r\n            return at.id;\r\n        }\r\n        return null;\r\n    }\r\n    set weaponTypeId(value: number) {\r\n        var at = this.referencesService.WeaponTypes.find((a) => a.id == value);\r\n        if (this.attack.weaponUsed == null) {\r\n            this.attack.weaponUsed = new Weapon();\r\n        }\r\n        this.attack.weaponUsed.name = at.name;\r\n\r\n    }\r\n\r\n    //get isRolemaster(): boolean {\r\n    //    return this.encounterService.systemSettings.gameSystem == GameType.RMSS;\r\n    //}\r\n\r\n    delete() {\r\n        this.onDelete.emit(this.attack);\r\n    }\r\n    //save = async () => {\r\n    //    var weap = await this.combatRepo.saveWeaponAsync(this.weapon);\r\n    //    this.weapon.id = weap.id;\r\n    //    this.onSave.emit(weap);\r\n    //}\r\n}\r\n","<div *ngIf=\"attack\" class=\"edit-area\">\r\n    <fieldset>\r\n        <legend>Attack</legend>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-sm-3\" style=\"padding-right:0;\">\r\n                <div class=\"col-sm-12\" style=\"padding:0\">\r\n                    <label>OB</label>\r\n                    <input name=\"attackOB\" class=\"form-control\"\r\n                           [(ngModel)]=\"attack.ob\" />\r\n                </div>\r\n                <!--<div class=\"col-sm-12\" style=\"padding:0\">\r\n                    <label>Max</label>\r\n                    <input name=\"attackmaxOB\" class=\"form-control\"\r\n                           [(ngModel)]=\"attack.maxOB\" />\r\n                </div>-->\r\n                <div class=\"col-sm-12\" style=\"padding:0\">\r\n                    <label>%</label>\r\n                    <input name=\"attackpercentChance\" class=\"form-control\"\r\n                           [(ngModel)]=\"attack.percentChance\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-sm-4\" style=\"padding:0;\">\r\n                <label>Attack Type</label>\r\n                <select class=\"form-control\" name=\"selectedAttackType\" [(ngModel)]=\"attack.attackType_ID\">\r\n                    <option *ngFor=\"let item of referencesService.AttackTypes\" value={{item?.id}}>\r\n                        {{item?.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div *ngIf=\"attack.attackType_ID!=12\" class=\"form-group col-sm-4\" style=\"padding:0;\">\r\n                <label>Size</label>\r\n                <select class=\"form-control\" name=\"selectedSize\" [(ngModel)]=\"attack.sizeRating_ID\">\r\n                    <option *ngFor=\"let item of referencesService.SizeRatings\" value={{item?.id}}>\r\n                        {{item?.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div *ngIf=\"attack.attackType_ID==12\" class=\"form-group col-sm-4\" style=\"padding:0;\">\r\n                <label>Weapon Type</label>\r\n                <select class=\"form-control\" name=\"selectedWeaponType\" [(ngModel)]=\"weaponTypeId\">\r\n                    <option *ngFor=\"let item of referencesService.WeaponTypes\" value={{item?.id}}>\r\n                        {{item?.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n            <!--<form #weaponForm=\"ngForm\" class=\"form-horizontal\">-->\r\n            <!--<div class=\"form-group full-row\">\r\n        <label for=\"type\" class=\"control-label\">Weapon Name</label>\r\n        <div class=\"control-area\">\r\n            <input #name=\"ngModel\" name=\"name\" type=\"text\" class=\"form-control\"\r\n                   [(ngModel)]=\"weapon.name\" required />\r\n            <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                Please enter a name\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group half-row\" style=\" \">\r\n        <label for=\"bonus\" class=\"control-label\">Bonus</label>\r\n        <div class=\"control-area control-area-number\">\r\n            <input name=\"db\" class=\"form-control\"\r\n                   [(ngModel)]=\"weapon.bonus\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group half-row\" style=\"\">\r\n        <label *ngIf=\"isRolemaster\" for=\"ob\" class=\"control-label\">OB</label>\r\n        <label *ngIf=\"!isRolemaster\" for=\"ob\" class=\"control-label\">ATK Bonus</label>\r\n        <div class=\"control-area control-area-number\">\r\n            <input name=\"ob\" class=\"form-control\"\r\n                   [(ngModel)]=\"weapon.ob\" />\r\n        </div>\r\n    </div>\r\n    <div></div>\r\n    <div class=\"form-group half-row\" style=\"\">\r\n        <label for=\"weight\" class=\"control-label\">Weight</label>\r\n        <div class=\"control-area control-area-number\">\r\n            <input name=\"weight\" class=\"form-control\"\r\n                   [(ngModel)]=\"weapon.weight\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group half-row\" style=\"\">\r\n        <label for=\"is2Handed\" class=\"control-label\" style=\"width: 100%;\">\r\n            <input type=\"checkbox\" name=\"is2Handed\" class=\"form-control\"\r\n                   [(ngModel)]=\"weapon.is2Handed\" style=\"width: auto; display: inline-block;\" />\r\n            Is 2 Handed\r\n        </label>\r\n    </div>-->\r\n            <div class=\"text-center pt-2\">\r\n                <button class=\"btn btn-danger btn-sm pull-right\"\r\n                        (click)=\"delete()\">\r\n                    Remove\r\n                </button>\r\n            </div>\r\n            <!--<div class=\"text-center pt-2\">\r\n\r\n        <button class=\"btn btn-danger btn-sm pull-right\" [disabled]=\"weaponForm.invalid\"\r\n                (click)=\"save()\">\r\n            Save\r\n        </button>\r\n\r\n    </div>-->\r\n            <!--</form>-->\r\n</fieldset>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Attack } from '@/entities';\r\n\r\n@Component({\r\n    selector: 'attack-list',\r\n    templateUrl: './attack-list.component.html',\r\n    styleUrls: ['./attack-list.component.css']\r\n})\r\n/** Attack component*/\r\nexport class AttackListComponent {\r\n    @Input() attacks: Array<Attack>;\r\n    @Input() creatureId: number;\r\n    @Output() onDelete = new EventEmitter<Attack>();\r\n\r\n    public selectedAttack: Attack;\r\n    private cnt: number = 1;\r\n\r\n    /** Armor ctor */\r\n    constructor() {\r\n\r\n    }\r\n    ngOnChanges() {\r\n        if (this.attacks.length > 0) {\r\n            this.selectedAttack = this.attacks[0];\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.attacks.length > 0) {\r\n            this.selectedAttack = this.attacks[0];\r\n        }\r\n    }\r\n\r\n    newAttack() {\r\n        var attack = new Attack();\r\n        //weapon.id = this.cnt;\r\n        attack.name = \"Attack \" + this.cnt;\r\n        attack.creatureOn_ID = this.creatureId;\r\n        this.selectedAttack = attack;\r\n        this.attacks.push(attack);\r\n        this.cnt = this.cnt + 1;\r\n    }\r\n\r\n    onAttackDeleted(attack: Attack) {\r\n        this.onDelete.emit(attack);\r\n    }\r\n\r\n    selectAttack(attack: Attack) {\r\n        this.selectedAttack = attack;\r\n    }\r\n\r\n    get selectedAttackId(): number {\r\n        if (this.selectedAttack != null) {\r\n            return this.selectedAttack.id;\r\n        }\r\n        return null;\r\n    }\r\n    set selectedAttackId(value: number) {\r\n        this.selectedAttack = this.attacks.find((a) => a.id == value);\r\n    }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <div class=\"area\">\r\n        <div class=\"list\">\r\n            <p *ngIf=\"!attacks\"><em>Loading...</em></p>\r\n            <div class=\"mainList\">\r\n                <h3 style=\"display:block; margin-top:0;\">\r\n                    <div style=\"float:right;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"newAttack()\">\r\n                            <span class=\"glyphicon glyphicon-plus\"></span> New\r\n                        </button>\r\n                    </div>\r\n                    Attacks\r\n                </h3>\r\n                <select class=\"form-control\" name=\"selectedAttack\" size=\"5\" [(ngModel)]=\"selectedAttackId\">\r\n                    <option *ngFor=\"let attack of attacks\" value={{attack?.id}}>\r\n                        {{attack?.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"edit\">\r\n            <!--(onSave)=\"onWeaponSaved($event)\"-->\r\n            <app-attack-edit [attack]=\"selectedAttack\" (onDelete)=\"onAttackDeleted($event)\"></app-attack-edit>\r\n        </div>\r\n    </div>\r\n</div>","\nexport * from './attack-list.component';\nexport * from './attack-edit.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ModalService } from '@/elements/modal/modal.service';\r\nimport { CharactersRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { Character } from '@/entities';\r\nimport { Armor } from '@/entities';\r\nimport { Weapon } from '@/entities';\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\nimport CharacterType = Enums.EnumDefinitions.CharacterType;\r\n\r\n@Component({\r\n    selector: 'app-character-edit',\r\n    templateUrl: './character-edit.component.html',\r\n    styleUrls: ['./character-edit.component.css']\r\n})\r\n/** characterDetail component*/\r\nexport class CharacterEditComponent {\r\n\r\n    @Input() character: Character;\r\n    @Output() onDelete = new EventEmitter<Character>();\r\n    @Output() onSave = new EventEmitter<Character>();\r\n\r\n    public rolledInit: number;\r\n\r\n    constructor(public encounterService: EncounterService,\r\n        private charRepo: CharactersRepository,\r\n        private modalService: ModalService)\r\n    {\r\n        \r\n    }\r\n\r\n    get isRolemaster(): boolean {\r\n        return this.encounterService.currentGame?.gameType == GameType.RMSS;\r\n    }\r\n\r\n    get hasCurrentGame(): boolean {\r\n        return (this.encounterService.currentGame != null);\r\n    }\r\n\r\n    onWeaponDeleted(weapon: Weapon) {\r\n        const index: number = this.character.weapons.indexOf(weapon);\r\n        if (index !== -1) {\r\n            this.character.weapons.splice(index, 1);\r\n        }\r\n    }\r\n    onArmorDeleted(armor: Armor) {\r\n        const index: number = this.character.armors.indexOf(armor);\r\n        if (index !== -1) {\r\n            this.character.armors.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    addToEncounter() {\r\n        if (this.character.type == CharacterType.PC) {\r\n            this.modalService.open('custom-modal-2');\r\n        } else {\r\n            this.encounterService.addCharacterToEncounterAsync(this.character);\r\n        }\r\n    }\r\n    saveCharacter = async () => {\r\n        //this.character.gameType = this.encounterService.systemSettings.gameSystem;\r\n        var g = await this.charRepo.saveCharacterAsync(this.character);\r\n        if (!this.character.id) {\r\n            this.character.id = g.id;\r\n        }\r\n\r\n        this.onSave.emit(this.character);\r\n\r\n    }\r\n    closeEdit() {\r\n        //this.charView.refresh();\r\n    }\r\n\r\n    openModal(id: string) {\r\n        this.modalService.open(id);\r\n    }\r\n\r\n    closeModal(id: string) {\r\n        this.modalService.close(id);\r\n        this.encounterService.addCharacterToEncounterAsync(this.character, this.rolledInit);\r\n    }\r\n}\r\n","<div *ngIf=\"character\">\r\n    <fieldset>\r\n        <legend>{{character?.name}}</legend>\r\n        <form #charForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-6\">\r\n                    <label>Name</label>\r\n                    <input #name=\"ngModel\" name=\"name\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.name\" required />\r\n                    <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                        Please enter a name\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group col-sm-6\" style=\"vertical-align:bottom;\">\r\n                    <div class=\"btn-group\">\r\n                        <label><input type=\"radio\" value=\"PC\" name=\"chartype\" [(ngModel)]=\"character.typeString\"> PC</label>\r\n                        <label><input type=\"radio\" value=\"NPC\" name=\"chartype\" [(ngModel)]=\"character.typeString\"> NPC</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-2\">\r\n                    <label>Level</label>\r\n                    <input #level=\"ngModel\" name=\"level\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.level\" required />\r\n                    <div *ngIf=\"level.invalid\" class=\"text-danger\">\r\n                        Please enter a level\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group  col-sm-2\">\r\n                    <label>Base Inititive</label>\r\n                    <input #baseInititive=\"ngModel\" name=\"baseInititive\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.baseInititive\" required />\r\n                    <div *ngIf=\"baseInititive.invalid\" class=\"text-danger\">\r\n                        Please enter a base inititive\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group  col-sm-2\">\r\n                    <label>Walk Speed</label>\r\n                    <input #walkSpeed=\"ngModel\" name=\"walkSpeed\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.walkSpeed\" required />\r\n                    <div *ngIf=\"walkSpeed.invalid\" class=\"text-danger\">\r\n                        Please enter a Walk Speed\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group  col-sm-2\">\r\n                    <label>Strength Bonus</label>\r\n                    <input #strengthBonus=\"ngModel\" name=\"strengthBonus\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.strengthBonus\" required />\r\n                    <div *ngIf=\"strengthBonus.invalid\" class=\"text-danger\">\r\n                        Please enter a Strength Bonus\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group  col-sm-2\">\r\n                    <label>Hit<br />Points</label>\r\n                    <input #hitPoints=\"ngModel\" name=\"hitPoints\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.hitPoints\" required />\r\n                    <div *ngIf=\"hitPoints.invalid\" class=\"text-danger\">\r\n                        Please enter Hit Points\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n                    <label style=\"white-space: nowrap;\">Power<br />Points</label>\r\n                    <input #powerPoints=\"ngModel\" name=\"powerPoints\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.powerPoints\" required />\r\n                    <div *ngIf=\"powerPoints.invalid\" class=\"text-danger\">\r\n                        Please enter Power Points\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n                    <label style=\"white-space: nowrap;\">Exhaustion<br />Points</label>\r\n                    <input #exhaustionPoints=\"ngModel\" name=\"exhaustionPoints\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.exhaustionPoints\" required />\r\n                    <div *ngIf=\"exhaustionPoints.invalid\" class=\"text-danger\">\r\n                        Please enter Exhaustion Points\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n                    <label>Percent Required<br />Adrenal DB</label>\r\n                    <input #percentRequiredAdrenalDB=\"ngModel\" name=\"percentRequiredAdrenalDB\" class=\"form-control\"\r\n                           [(ngModel)]=\"character.percentRequiredAdrenalDB\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group  col-sm-6\">\r\n                    <weapon-list [weapons]=\"character.weapons\" [charId]=\"character.id\" (onDelete)=\"onWeaponDeleted($event)\"></weapon-list>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-6\">\r\n                    <armor-list [armors]=\"character.armors\" [charId]=\"character.id\" (onDelete)=\"onArmorDeleted($event)\"></armor-list>\r\n                </div>\r\n            </div>\r\n            <div class=\"text-center pt-2\">\r\n                <button class=\"btn btn-outline-primary pull-left\" (click)=\"closeEdit()\">\r\n                    Back\r\n                </button>\r\n\r\n                <button class=\"btn btn-danger\" [disabled]=\"charForm.invalid\"\r\n                        (click)=\"saveCharacter()\">\r\n                    Save\r\n                </button>\r\n\r\n                <button *ngIf=\"hasCurrentGame\" class=\"btn btn-primary pull-right\"\r\n                        (click)=\"addToEncounter()\">\r\n                    Add To Encounter\r\n                </button>\r\n\r\n            </div>\r\n        </form>\r\n    </fieldset>\r\n</div>\r\n<modal id=\"custom-modal-2\">\r\n    <div class=\"modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Roll Init - 2d10</h1>\r\n            <input name=\"rolledInit\" class=\"form-control\"\r\n                    [(ngModel)]=\"rolledInit\" required />\r\n            <button (click)=\"closeModal('custom-modal-2');\">Add To Encounter</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CharactersRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { Character } from '@/entities';\r\n\r\n@Component({\r\n    selector: 'character-list',\r\n    templateUrl: './character-list.component.html',\r\n    styleUrls: ['./character-list.component.css']\r\n})\r\n/** character component*/\r\nexport class CharacterListComponent {\r\n\r\n    public characters: Array<Character> = new Array<Character>();\r\n    public selectedCharacter: Character;\r\n\r\n    /** character ctor */\r\n    constructor(private characterRepo: CharactersRepository,\r\n        private encounterService: EncounterService)\r\n    {\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.characters.length > 0) {\r\n            if (this.selectedCharacter != null) {\r\n                this.selectCharacter(this.selectedCharacter.id);\r\n            } else {\r\n                this.selectCharacter(this.characters[0].id);\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.characters.length > 0) {\r\n            if (this.selectedCharacter != null) {\r\n                this.selectCharacter(this.selectedCharacter.id);\r\n            } else {\r\n                this.selectCharacter(this.characters[0].id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh = async () => {\r\n        //this.characters = await this.characterRepo.getCharactersAsync(this.encounterService.systemSettings.gameSystem);\r\n    }\r\n\r\n    newCharacter() {\r\n        this.selectedCharacter = new Character();\r\n    }\r\n    selectCharacter = async (charId: number) => {\r\n        this.selectedCharacter = await this.characterRepo.getCharacterAsync(charId);\r\n    }\r\n    onCharacterSave = (character: Character) => {\r\n        this.refresh();\r\n    }\r\n    onCharacterDeleted = (character: Character) => {\r\n        this.refresh();\r\n    }\r\n}\r\n","\r\n<div class=\"wrapper\">\r\n    <div class=\"area\">\r\n        <div class=\"list\">\r\n            <p *ngIf=\"!characters\"><em>Loading...</em></p>\r\n            <div class=\"mainList\">\r\n                <h3 style=\"display:block; margin-top:0; white-space: nowrap;\">\r\n                    <div style=\"float:right;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"newCharacter()\">\r\n                            <span class=\"glyphicon glyphicon-plus\"></span> New\r\n                        </button>\r\n                    </div>\r\n                    Characters\r\n                </h3>\r\n                <table *ngIf=\"characters\" class=\"table table-striped\">\r\n                    <tr>\r\n                        <th style=\"vertical-align: middle;\">\r\n                            Name\r\n                        </th>\r\n                    </tr>\r\n                    <tr *ngFor=\"let character of characters\" >\r\n                        <td style=\"white-space: nowrap;\">\r\n                            <a (click)=\"selectCharacter(character.id)\">({{character?.typeString}}) {{character?.name}}</a> ({{character?.level}})\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"edit\">\r\n            <!--(onSave)=\"onArmorSaved($event)\"-->\r\n            <app-character-edit [character]=\"selectedCharacter\" (onDelete)=\"onCharacterDeleted($event)\" (onSave)=\"onCharacterSave($event)\"></app-character-edit>\r\n        </div>\r\n    </div>\r\n</div>\r\n","\nexport * from './character-list.component';\nexport * from './character-edit.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ModalService } from '@/elements/modal/modal.service';\r\nimport { CreaturesRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { ReferencesService } from \"@/services\";\r\nimport { Creature } from '@/entities';\r\nimport { Armor } from '@/entities';\r\nimport { Weapon } from '@/entities';\r\nimport { Attack } from '@/entities';\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\n\r\n\r\n@Component({\r\n    selector: 'app-creature-edit',\r\n    templateUrl: './creature-edit.component.html',\r\n    styleUrls: ['./creature-edit.component.css']\r\n})\r\n/** CreatureEdit component*/\r\nexport class CreatureEditComponent {\r\n    @Input() creature: Creature;\r\n    @Output() onDelete = new EventEmitter<Creature>();\r\n    @Output() onSave = new EventEmitter<Creature>();\r\n\r\n    public rolledInit: number;\r\n\r\n    constructor(public encounterService: EncounterService,\r\n        private creatureRepo: CreaturesRepository,\r\n        private modalService: ModalService,\r\n        public referencesService: ReferencesService) {\r\n\r\n    }\r\n\r\n    get isRolemaster(): boolean {\r\n        return this.encounterService.currentGame?.gameType == GameType.RMSS;\r\n    }\r\n\r\n    get hasCurrentGame(): boolean {\r\n        return (this.encounterService.currentGame != null);\r\n    }\r\n\r\n    onAttackDeleted(attack: Attack) {\r\n        const index: number = this.creature.attacks.indexOf(attack);\r\n        if (index !== -1) {\r\n            this.creature.attacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n\r\n    addToEncounter() {\r\n        this.encounterService.addCreatureToEncounterAsync(this.creature);\r\n    }\r\n    saveCreature = async () => {\r\n        //this.creature.gameType = this.encounterService.systemSettings.gameSystem;\r\n        var g = await this.creatureRepo.saveCreatureAsync(this.creature);\r\n        if (!this.creature.id) {\r\n            this.creature.id = g.id;\r\n        }\r\n\r\n        this.onSave.emit(this.creature);\r\n\r\n    }\r\n    closeEdit() {\r\n        //this.charView.refresh();\r\n    }\r\n}\r\n","<div *ngIf=\"creature\">\r\n    <fieldset>\r\n        <legend>{{creature?.typeName}}</legend>\r\n        <form #charForm=\"ngForm\">\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-6\">\r\n                    <label>Name</label>\r\n                    <input #name=\"ngModel\" name=\"typeName\" class=\"form-control\"\r\n                           [(ngModel)]=\"creature.typeName\" required />\r\n                    <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                        Please enter a name\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-6\">\r\n                    <label>Description</label>\r\n                    <textarea name=\"description\" class=\"form-control\"\r\n                              [(ngModel)]=\"creature.description\"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-4\" style=\"padding:0;\">\r\n                        <label>Base Level</label>\r\n                        <input #level=\"ngModel\" name=\"baseLevel\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.baseLevel\" required />\r\n                        <div *ngIf=\"level.invalid\" class=\"text-danger\">\r\n                            Please enter a level\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-5\" style=\"padding:0;\">\r\n                        <label>&nbsp;</label>\r\n                        <select class=\"form-control\" name=\"selectedLevel\" [(ngModel)]=\"creature.levelMod_ID\">\r\n                            <option *ngFor=\"let level of referencesService.LevelCharts\" value={{level?.id}}>\r\n                                {{level?.name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group col-sm-3\">\r\n                    <label>Size</label>\r\n                    <select class=\"form-control\" name=\"selectedSize\" [(ngModel)]=\"creature.size_ID\">\r\n                        <option *ngFor=\"let item of referencesService.SizeRatings\" value={{item?.id}}>\r\n                            {{item?.abbreviation}} ({{item?.name}})\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Movement Speed</label>\r\n                        <select class=\"form-control\" name=\"selectedMS\" [(ngModel)]=\"creature.msRating_ID\">\r\n                            <option *ngFor=\"let item of referencesService.SpeedCharts\" value={{item?.id}}>\r\n                                {{item?.abbreviation}} ({{item?.name}})\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Attack Quickness</label>\r\n                        <select class=\"form-control\" name=\"selectedAQ\" [(ngModel)]=\"creature.aqRating_ID\">\r\n                            <option *ngFor=\"let item of referencesService.SpeedCharts\" value={{item?.id}}>\r\n                                {{item?.abbreviation}} ({{item?.name}})\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-4\" style=\"padding:0;\">\r\n                        <label>Base Move</label>\r\n                        <input #move=\"ngModel\" name=\"baseMove\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.baseMove\" required />\r\n                        <div *ngIf=\"move.invalid\" class=\"text-danger\">\r\n                            Please enter a distance\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group col-sm-3\">\r\n                    <label>Max Pace</label>\r\n                    <select class=\"form-control\" name=\"selectedPace\" [(ngModel)]=\"creature.maxPace_ID\">\r\n                        <option *ngFor=\"let item of referencesService.Paces\" value={{item?.id}}>\r\n                            {{item?.abbreviation}} ({{item?.name}})\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-sm-1\">\r\n                    <label>Moving Maneuver Bonus</label>\r\n                    <input #move=\"ngModel\" name=\"MMBonus\" class=\"form-control\"\r\n                           [(ngModel)]=\"creature.mmBonus\" required />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-4\" style=\"padding:0;\">\r\n                        <label>Base Hits</label>\r\n                        <input #hits=\"ngModel\" name=\"baseHits\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.baseHits\" required />\r\n                        <div *ngIf=\"hits.invalid\" class=\"text-danger\">\r\n                            Please enter hit points\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-5\" style=\"padding:0;\">\r\n                        <label>&nbsp;</label>\r\n                        <select class=\"form-control\" name=\"selectedHitMod\" [(ngModel)]=\"creature.hitMod_ID\">\r\n                            <option *ngFor=\"let item of referencesService.ConstitutionBonusCharts\" value={{item?.id}}>\r\n                                {{item?.code}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Criticals</label>\r\n                        <select class=\"form-control\" name=\"selectedCritical\" [(ngModel)]=\"creature.criticals_ID\">\r\n                            <option *ngFor=\"let item of referencesService.CriticalCodes\" value={{item?.id}}>\r\n                                {{item?.abbreviation}} ({{item?.name}})\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Criticals Ignored</label>\r\n                        <select class=\"form-control\" name=\"selectedCriticalIgnore\" [(ngModel)]=\"creature.criticalsIgnore_ID\">\r\n                            <option *ngFor=\"let item of referencesService.CriticalIgnores\" value={{item?.id}}>\r\n                                {{item?.abbreviation}} ({{item?.name}})\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group col-sm-3\">\r\n                    <div class=\"col-sm-5\" style=\"padding:0;\">\r\n                        <label>AT</label>\r\n                        <input name=\"at\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.at\" required />\r\n                    </div>\r\n                    <div class=\"col-sm-5\" style=\"padding:0;\">\r\n                        <label>DB</label>\r\n                        <input name=\"at\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.db\" required />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-sm-3\">\r\n                    <label>Numbers Encountered</label>\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Min</label>\r\n                        <input name=\"baseMin\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.minEncountered\" />\r\n                    </div>\r\n                    <div class=\"col-sm-6\" style=\"padding:0;\">\r\n                        <label>Max</label>\r\n                        <input name=\"baseMax\" class=\"form-control\"\r\n                               [(ngModel)]=\"creature.maxEncountered\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group  col-sm-12\">\r\n                    <attack-list [attacks]=\"creature.attacks\" [creatureId]=\"creature.id\" (onDelete)=\"onAttackDeleted($event)\"></attack-list>\r\n                </div>\r\n            </div>\r\n            <!--\r\n    <div class=\"row\">\r\n        <div class=\"form-group  col-sm-2\">\r\n            <label>Hit<br />Points</label>\r\n            <input #hitPoints=\"ngModel\" name=\"hitPoints\" class=\"form-control\"\r\n                   [(ngModel)]=\"character.hitPoints\" required />\r\n            <div *ngIf=\"hitPoints.invalid\" class=\"text-danger\">\r\n                Please enter Hit Points\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n            <label style=\"white-space: nowrap;\">Power<br />Points</label>\r\n            <input #powerPoints=\"ngModel\" name=\"powerPoints\" class=\"form-control\"\r\n                   [(ngModel)]=\"character.powerPoints\" required />\r\n            <div *ngIf=\"powerPoints.invalid\" class=\"text-danger\">\r\n                Please enter Power Points\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n            <label style=\"white-space: nowrap;\">Exhaustion<br />Points</label>\r\n            <input #exhaustionPoints=\"ngModel\" name=\"exhaustionPoints\" class=\"form-control\"\r\n                   [(ngModel)]=\"character.exhaustionPoints\" required />\r\n            <div *ngIf=\"exhaustionPoints.invalid\" class=\"text-danger\">\r\n                Please enter Exhaustion Points\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-2\">\r\n            <label>Percent Required<br />Adrenal DB</label>\r\n            <input #percentRequiredAdrenalDB=\"ngModel\" name=\"percentRequiredAdrenalDB\" class=\"form-control\"\r\n                   [(ngModel)]=\"character.percentRequiredAdrenalDB\" />\r\n        </div>\r\n    </div>-->\r\n            <!--<div class=\"row\">\r\n        <div class=\"form-group  col-sm-6\">\r\n            <app-weapon [weapons]=\"character.weapons\" [charId]=\"character.id\" (onDelete)=\"onWeaponDeleted($event)\"></app-weapon>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div *ngIf=\"isRolemaster\" class=\"form-group  col-sm-6\">\r\n            <app-armor [armors]=\"character.armors\" [charId]=\"character.id\" (onDelete)=\"onArmorDeleted($event)\"></app-armor>\r\n        </div>\r\n    </div>-->\r\n            <div class=\"text-center pt-2\">\r\n                <button class=\"btn btn-outline-primary pull-left\" (click)=\"closeEdit()\">\r\n                    Back\r\n                </button>\r\n\r\n                <button class=\"btn btn-danger\" [disabled]=\"charForm.invalid\"\r\n                        (click)=\"saveCreature()\">\r\n                    Save\r\n                </button>\r\n\r\n                <button *ngIf=\"hasCurrentGame\" class=\"btn btn-primary pull-right\"\r\n                        (click)=\"addToEncounter()\">\r\n                    Add To Encounter\r\n                </button>\r\n\r\n            </div>\r\n        </form>\r\n    </fieldset>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CreaturesRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { Creature } from '@/entities';\r\n\r\n@Component({\r\n  selector: 'creature-list',\r\n  templateUrl: './creature-list.component.html',\r\n  styleUrls: ['./creature-list.component.less']\r\n})\r\n/** creature component*/\r\nexport class CreatureListComponent {\r\n\r\n  public creatures: Array<Creature> = new Array<Creature>();\r\n  public selectedCreature: Creature;\r\n\r\n  /** character ctor */\r\n  constructor(private creatureRepo: CreaturesRepository) {\r\n\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.creatures.length > 0) {\r\n      if (this.selectedCreature != null) {\r\n        this.selectCreature(this.selectedCreature.id);\r\n      } else {\r\n        this.selectCreature(this.creatures[0].id);\r\n      }\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    if (this.creatures.length > 0) {\r\n      if (this.selectedCreature != null) {\r\n        this.selectCreature(this.selectedCreature.id);\r\n      } else {\r\n        this.selectCreature(this.creatures[0].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  refresh = async () => {\r\n\r\n    this.creatures = await this.creatureRepo.getCreaturesAsync();\r\n  }\r\n\r\n  newCreature() {\r\n    this.selectedCreature = new Creature();\r\n  }\r\n  selectCreature = async (charId: number) => {\r\n    this.selectedCreature = await this.creatureRepo.getCreatureAsync(charId);\r\n    //this.selectedCreature.aqRating.name\r\n\r\n  }\r\n  onCreatureSave = (creature: Creature) => {\r\n    this.refresh();\r\n  }\r\n  onCreatureDeleted = (creature: Creature) => {\r\n    this.refresh();\r\n  }\r\n}\r\n","\r\n<div class=\"wrapper\">\r\n  <div class=\"area\">\r\n    <div class=\"list\">\r\n      <p *ngIf=\"!creatures\"><em>Loading...</em></p>\r\n      <div class=\"mainList\">\r\n        <h3 style=\"display:block; margin-top:0; white-space: nowrap;\">\r\n          <div style=\"float:right;\">\r\n            <button class=\"btn btn-primary btn-sm\" (click)=\"newCreature()\">\r\n              <span class=\"glyphicon glyphicon-plus\"></span> New\r\n            </button>\r\n          </div>\r\n          Creatures\r\n        </h3>\r\n        <table *ngIf=\"creatures\" class=\"table table-striped\">\r\n          <tr>\r\n            <th style=\"vertical-align: middle;\">\r\n              System\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Book\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Name\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Level\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Size\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Number\r\n            </th>\r\n            <th style=\"vertical-align: middle;\">\r\n              Speed\r\n            </th>\r\n          </tr>\r\n          <tr *ngFor=\"let creature of creatures\">\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.gameTypeString}}\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.book.name}}\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              <a (click)=\"selectCreature(creature.id)\">{{creature?.typeName}}</a>\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.baseLevel}}{{creature?.levelMod.name}}\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.size.name}}\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.minEncountered}} - {{creature?.maxEncountered}}\r\n            </td>\r\n            <td style=\"white-space: nowrap;\">\r\n              {{creature?.msRating.name}} / {{creature?.aqRating.name}}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <!--<div class=\"edit\">\r\n      <app-creature-edit [creature]=\"selectedCreature\" (onDelete)=\"onCreatureDeleted($event)\" (onSave)=\"onCreatureSave($event)\"></app-creature-edit>\r\n    </div>-->\r\n  </div>\r\n</div>\r\n","\nexport * from './creature-list.component';\nexport * from './creature-edit.component';\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { ActionDefinition, Attack, BaseAction } from '@/entities';\r\nimport { treeEntry } from '@/services';\r\nimport { TreeModel, iTreeNode, TreeNode } from '@/elements/treeview';\r\nimport { Actor } from '@/entities';\r\nimport { delay, MutexLock } from '@/_helpers';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions';\r\n\r\n\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport ActorActionType = EnumDefinitions.ActorActionType;\r\n\r\nexport class ProposeAction {\r\n    constructor(public actor: Actor, public action: ActionDefinition, public attack:Attack = null, public modifier: number = 0) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'action-edit',\r\n    templateUrl: './action-edit.component.html',\r\n    styleUrls: ['./action-edit.component.less']\r\n})\r\n/** action-edit component*/\r\nexport class ActionEditComponent implements OnInit, OnChanges {\r\n\r\n\r\n    @Input() selectedAction: BaseAction;\r\n    @Input() actionTree: treeEntry;\r\n\r\n\r\n    @Output() onProposeAction = new EventEmitter<ProposeAction>();\r\n    @Output() onDoAction = new EventEmitter<BaseAction>();\r\n\r\n\r\n    public mods = [-40, -30, -20, -10, 0, 10, 20, 30];\r\n\r\n\r\n    private mutex = new MutexLock(60000);\r\n\r\n    public currentModifier: number = 0;\r\n\r\n    private _treeTop: TreeNode = null;\r\n    private _treeModel: TreeModel = null;\r\n\r\n    //selectedAction\r\n    /** action-edit ctor */\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    //get currentModifier(): number {\r\n    //    if (this.selectedAction != null) {\r\n    //        return this.selectedAction.currentModifier;\r\n    //    }\r\n    //    return 0;\r\n    //}\r\n\r\n    get isDoAble(): boolean {\r\n        if (this.selectedAction != null) {\r\n            return this.selectedAction.actionType == ActionTypeEnum.Proposed || this.selectedAction.actionType == ActionTypeEnum.Next;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get treeModel(): TreeModel {\r\n        if (this._treeModel == null) {\r\n            this._treeModel = new TreeModel(this.currentActionTree);\r\n        }\r\n        //tm.items = this.currentActionTree.children;\r\n        //debugger;\r\n        return this._treeModel;\r\n    }\r\n    get currentActionTree(): TreeNode {\r\n        if (this._treeTop == null) {\r\n            this.refreshTree();\r\n        }\r\n\r\n        if (this._treeTop == null) {\r\n            return new TreeNode(new treeEntry(\"\",\"\"));\r\n        }\r\n\r\n        var sel = this._treeTop.getSelected();\r\n        if (sel == null) {\r\n            this.refreshTree();\r\n        }\r\n\r\n\r\n        return this._treeTop;\r\n    }\r\n\r\n    private refreshTree() {\r\n        if (this.actionTree == null) {\r\n            this._treeTop = null;\r\n        } else {\r\n            if (this._treeTop == null) {\r\n                this._treeTop = new TreeNode(this.actionTree);\r\n            } else {\r\n                this._treeTop.check();\r\n                if (this._treeModel != null) {\r\n                    this._treeModel = new TreeModel(this._treeTop);\r\n                    this._treeModel.lastChecked = this._treeTop.lastChecked;\r\n                }\r\n            }\r\n            //this._treeTop = new TreeNode(this.actionTree);\r\n\r\n\r\n            var attack: Attack = null;\r\n            if (this.selectedAction != null && this.selectedAction.base != null) {\r\n                if (this.selectedAction.base.isAttack) {\r\n                    attack = this.selectedAction.currentAttack;\r\n                }\r\n                var selectedNode = this.actionTree.findNode(this.selectedAction.base, attack);\r\n                if (selectedNode != null) {\r\n                    var sNode = this._treeTop.findNode(selectedNode.code);\r\n                    if (sNode != null) {\r\n                        sNode.isSelected = true;\r\n                    } else {\r\n                        debugger;\r\n                    }\r\n                }\r\n            } else {\r\n                var selNode = this._treeTop.getSelected();\r\n                if (selNode != null) {\r\n                    selNode.isSelected = false;\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        //debugger;\r\n    }\r\n\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        if (this.selectedAction != null) {\r\n            this.currentModifier = this.selectedAction.currentModifier;\r\n        } else {\r\n            this.currentModifier = 0;\r\n        }\r\n        //this.checkAction();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        \r\n        if (this.selectedAction != null) {\r\n            this.currentModifier = this.selectedAction.currentModifier;\r\n        } else {\r\n            this.currentModifier = 0;\r\n        }\r\n\r\n        this.refreshTree();\r\n        //this.checkAction();\r\n        \r\n    }\r\n\r\n    \r\n\r\n    doAction() {\r\n        this.onDoAction.next(this.selectedAction);\r\n    }\r\n\r\n    onTreeSelect(node: TreeNode) {\r\n       \r\n        var n2 = <treeEntry><any>(node.node);\r\n\r\n        var pAction = new ProposeAction(this.selectedAction.whoIsActing, n2.action, n2.attack, this.selectedAction.currentModifier);\r\n        this.onProposeAction.next(pAction);\r\n    }\r\n    onModSelected() {\r\n        var pAction = new ProposeAction(this.selectedAction.whoIsActing, this.selectedAction.base, this.selectedAction.currentAttack, this.currentModifier);\r\n        this.onProposeAction.next(pAction);\r\n    }\r\n}","<div class=\"row h-100\">\r\n    <div class=\"col-7 h-100\">\r\n        <app-treeview [treeModel]=\"treeModel\" (onSelect)=\"onTreeSelect($event)\"></app-treeview>\r\n    </div>\r\n    <div class=\"col-2 h-100\">\r\n        <!--<label for=\"modSelect\">Modifier</label>-->\r\n        <select id=\"modSelect\" class=\"form-control\" [attr.size]=\"mods.length\" (change)='onModSelected()'  [(ngModel)]=\"currentModifier\" >\r\n            <option *ngFor=\"let mod of mods\" [value]=\"mod\">{{mod}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"col-3 h-100\">\r\n        <button class=\"btn btn-warning btn-sm\" (click)=\"doAction()\">\r\n            <i class='material-icons'>stars</i> Do Action\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Actor, Armor, BaseAction, CriticalEffect } from '@/entities';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions'\r\n\r\n\r\nimport ParryType = EnumDefinitions.ParryType;\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport ActorActionType = EnumDefinitions.ActorActionType;\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\nimport CharacterType = EnumDefinitions.CharacterType;\r\n\r\n\r\n//ParryType\r\n\r\n@Component({\r\n    selector: 'action-view',\r\n    templateUrl: './action.component.html',\r\n    styleUrls: ['./action.component.css']\r\n})\r\n/** action component*/\r\nexport class ActionComponent {\r\n    @Input() action: BaseAction;\r\n\r\n    @Input() isSelectable: boolean = false;\r\n    @Input() viewType: ViewTypeEnum = ViewTypeEnum.Overview;\r\n\r\n\r\n    @Output() onSelect = new EventEmitter<BaseAction>();\r\n    @Output() onDeleteClick = new EventEmitter<BaseAction>();\r\n\r\n    /** action ctor */\r\n    constructor() {\r\n        \r\n        //this.action.note\r\n\r\n        //this.action.actionTypeString\r\n        //this.action.stateString\r\n        //this.action.typeString\r\n        //this.action.reoccuring\r\n        //this.action.whoIsActing.\r\n        //this.action.currentAttack.\r\n        //[style.border-color]=\"currentBorderColor\"\r\n    }\r\n    async deleteAction() {\r\n        if (this.isSelectable) {\r\n            this.onDeleteClick.next(this.action);\r\n        }\r\n    }\r\n\r\n    selectAction = async () => {\r\n        if (this.isSelectable) {\r\n            this.onSelect.next(this.action);\r\n        }\r\n    }\r\n\r\n    get isEffect(): boolean {\r\n        return this.action.actionType == ActionTypeEnum.Effect;\r\n    }\r\n\r\n\r\n    get cssClasses(): string {\r\n        var cStr = \"ActorAction \" + this.action.actionTypeString + \" \" + this.action.typeString + \" \" + this.action.stateString + \" \";\r\n        if (this.action.whoIsActing != null) {\r\n            cStr = cStr + this.action.whoIsActing.typeString;\r\n\r\n            if (this.action.whoIsActing.isConcentrating) {\r\n                cStr = cStr + \" concentrating\";\r\n            }\r\n            if (this.action.whoIsActing.isMoving) {\r\n                cStr = cStr + \" moving\";\r\n            }\r\n            if (this.action.whoIsActing.suprised) {\r\n                cStr = cStr + \" suprised\";\r\n            }\r\n            if (this.action.whoIsActing.usingAdrenalDB) {\r\n                cStr = cStr + \" usingAdrenalDB\";\r\n            }\r\n        }\r\n        if (this.action.isHasted) {\r\n            cStr = cStr + \" hasted\";\r\n        }\r\n        if (this.action.isSlowed) {\r\n            cStr = cStr + \" slowed\";\r\n        }\r\n        if (this.action.reoccuring) {\r\n            cStr = cStr + \" reoccurring\";\r\n        }\r\n        if (this.action.characterAction) {\r\n            cStr = cStr + \" characterAction\";\r\n        }\r\n\r\n        return cStr;\r\n    }\r\n\r\n    get isGM(): boolean {\r\n        return this.viewType == ViewTypeEnum.GM;\r\n    }\r\n\r\n    get isPlayer(): boolean {\r\n        return this.viewType == ViewTypeEnum.Player;\r\n    }\r\n\r\n    get isViewOnly(): boolean {\r\n        return this.viewType == ViewTypeEnum.Overview;\r\n    }\r\n\r\n    get isPC(): boolean {\r\n        if (this.action != null && this.action.whoIsActing != null) {\r\n            return this.action.whoIsActing.type == CharacterType.PC;\r\n        }\r\n        return false;\r\n    }\r\n    get isCurrentUser(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isControlledVisible(): boolean {\r\n        return this.isGM || (this.isViewOnly && this.isPC) || (this.isPlayer && this.isCurrentUser);\r\n    }\r\n\r\n    get isCurrent(): boolean {\r\n        //return true;\r\n\r\n\r\n        return this.action.actionType == ActionTypeEnum.Current || this.action.actionType == ActionTypeEnum.Proposed;\r\n    }\r\n    get whoIsActing(): Actor {\r\n        return this.action.whoIsActing;\r\n    }\r\n    get currentTime(): string {\r\n        return '' + Math.floor(this.action.endTime * 100) / 100;\r\n    }\r\n    get currentCrits(): CriticalEffect {\r\n        var cc = this.action.whoIsActing.currentCrits;\r\n        if (cc == null) {\r\n            cc = new CriticalEffect();\r\n        }\r\n        \r\n        return cc;\r\n    }\r\n    get currentArmor(): string {\r\n\r\n        if (this.action != null && this.action.whoIsActing != null && this.action.whoIsActing.currentArmor != null) {\r\n            return '' + this.action.whoIsActing.currentArmor.type;\r\n        }\r\n        return \"\";\r\n    }\r\n    get currentWeapon(): string {\r\n        var ac = this.action;\r\n        //debugger;\r\n        if (this.action.currentAttack != null && this.action.currentAttack.attackType!=null) {\r\n            if (this.action.currentAttack.attackType.name == \"Weapon\") {\r\n                if (this.action.currentAttack.weaponUsed != null) {\r\n                    return this.action.currentAttack.weaponUsed.name;\r\n                }\r\n            } else {\r\n                return ac.currentAttack.sizeRating.name + \" \" + ac.currentAttack.attackType.name\r\n            }\r\n        }\r\n\r\n\r\n        return \"None\";\r\n    }\r\n\r\n    get isMustParry(): boolean {\r\n        return this.currentCrits.parry == ParryType.Must_Parry;\r\n    }\r\n    get isNoParry(): boolean {\r\n        return this.currentCrits.parry == ParryType.No_Parry;\r\n    }\r\n    get currentOB(): string {\r\n        if (this.action != null && this.action.currentAttack != null) {\r\n            var i = 0;\r\n            if (this.action.whoIsActing.currentCrits != null) {\r\n                i = this.action.whoIsActing.currentCrits.parryNegative;\r\n            }\r\n            return '' + this.action.currentAttack.ob + i;\r\n        }\r\n        return \"\";\r\n    }\r\n    get currentDB(): string {\r\n        if (this.action != null && this.action.whoIsActing != null && this.action.whoIsActing.currentArmor != null) {\r\n            return '' + this.action.whoIsActing.currentArmor.db;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    get currentBorderColor(): string {\r\n        return \"rgb(\" + this.action.whoIsActing.color + \")\";\r\n    }\r\n    get currentBackColor(): string {\r\n        return \"rgba(\" + this.action.whoIsActing.color + \", 0.25)\";\r\n    }\r\n}","<div [class]=\"cssClasses\"  [style.background-color]=\"currentBackColor\"  [ngClass]=\"{'selected': action.isSelected}\"  (click)=\"selectAction()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2\">{{currentTime}}</div>\r\n        <div class=\"col-6\" style=\"font-weight:bold;\">{{whoIsActing.name}}</div>\r\n        <div class=\"col-1\" *ngIf=\"isCurrent\">{{whoIsActing.level}}</div>\r\n        <div class=\"col-3\" *ngIf=\"isCurrent\">\r\n            <span *ngIf=\"isControlledVisible\">Hits: {{whoIsActing.hitsRemaining}}/{{whoIsActing.hitsTotal}}</span>\r\n            <span *ngIf=\"!isControlledVisible\">{{whoIsActing.damageString}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <span *ngIf=\"isCurrent\">Init: {{whoIsActing.inititive}}</span>\r\n        </div>\r\n        <div class=\"col-6 nameArea\">{{action.name}}</div>\r\n        <div class=\"col-3\" *ngIf=\"isCurrent && isControlledVisible\">Exhs: {{whoIsActing.exhaustionRemaining}}/{{whoIsActing.exhaustionTotal}}</div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-2\" style=\"text-align:right;\">Note:</div>\r\n        <div class=\"col-7 noteArea\" style=\"font-style: italic;\">{{action.note}}</div>\r\n        <div class=\"col-3 powerPointsArea\" *ngIf=\"isCurrent && whoIsActing.powerPointsTotal>0 && isControlledVisible\">Ppts: {{whoIsActing.powerPointsRemaining}}/{{whoIsActing.powerPointsTotal}}</div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-2\">\r\n            &nbsp;\r\n        </div>\r\n        <div class=\"col-5 criticalModifiersArea\">\r\n            <span *ngIf=\"isCurrent\">{{whoIsActing.criticalModified}}</span>\r\n        </div>\r\n        <div class=\"col-5 criticalIgnoresArea\">\r\n            <span *ngIf=\"isCurrent\">{{whoIsActing.criticalIgnores}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-1 hasteArea\">\r\n            <span class=\"hasted iconArea\" *ngIf=\"isCurrent && whoIsActing.percentAction > 100\"[tooltip]=\"'Hasted'\">\r\n                <i class='material-icons'>directions_run</i>\r\n            </span>\r\n            <span class=\"slowed iconArea\" *ngIf=\"isCurrent && whoIsActing.percentAction < 100\"[tooltip]=\"'Slowed'\">\r\n                <i class='material-icons'>slow_motion_video</i>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-1 suprisedArea\">\r\n            <span class=\"suprised iconArea\" *ngIf=\"isCurrent && whoIsActing.suprised\" [tooltip]=\"'Suprised'\">\r\n                <i class='material-icons'>alarm</i>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-2 stunArea\">\r\n            <span class=\"stun iconAreaText\" *ngIf=\"isCurrent && currentCrits.isStunned\" [tooltip]=\"'Stunned'\"><i class='material-icons'>emergency</i><span class=\"textMod\">->{{whoIsActing.stunRounds}}</span></span>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div>\r\n                <span *ngIf=\"isCurrent && isControlledVisible && ((whoIsActing.negatives + action.currentModifier!=0) || (whoIsActing.spellNegatives + action.currentModifier!=0))\">Modifier: {{whoIsActing.negatives + action.currentModifier}}/{{whoIsActing.spellNegatives + action.currentModifier}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div>\r\n                <span *ngIf=\"isCurrent\">Armor-> {{currentArmor}}</span>\r\n                &nbsp;\r\n            </div>\r\n        </div>\r\n        <div class=\"col-2\">\r\n            <div>\r\n                &nbsp;\r\n            </div>\r\n            <div>\r\n                <span *ngIf=\"isCurrent && isControlledVisible\">DB->{{currentDB}}</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-1\">\r\n            <span class=\"concentrating iconArea\" *ngIf=\"isCurrent && whoIsActing.isConcentrating\" [tooltip]=\"'Concentrating'\">\r\n                <i class='material-icons'>emoji_objects</i>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-1\">\r\n            <span class=\"adrenal iconArea\" *ngIf=\"isCurrent && whoIsActing.usingAdrenalDB\" [tooltip]=\"'Adrenal DB'\">\r\n                <i class='material-icons'>run_circle</i>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-2\">\r\n            <span class=\"mustParry iconAreaText\" *ngIf=\"isCurrent && isMustParry\" [tooltip]=\"'Must Parry'\"><i class='material-icons'>error</i><span class=\"textMod\">->{{whoIsActing.parryRounds}}</span></span>\r\n            <span class=\"noParry iconAreaText\" *ngIf=\"isCurrent && isNoParry\" [tooltip]=\"'No Parry'\"><i class='material-icons'>priority_high</i><span class=\"textMod\">->{{whoIsActing.parryRounds}}</span></span>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div *ngIf=\"isCurrent\">Weapon-> {{currentWeapon}}</div>\r\n        </div>\r\n        <div class=\"col-2\">\r\n            <div>\r\n                <span *ngIf=\"isCurrent && isControlledVisible\">OB->{{currentOB}}</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <!--{{action.actionTypeString}}<br />\r\n    {{action.stateString}}<br />\r\n    {{action.typeString}}<br />\r\n    {{action.reoccuring}}-->\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { BaseAction } from '@/entities';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions';\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\n\r\n\r\n@Component({\r\n    selector: 'actions-list',\r\n    templateUrl: './actions-list.component.html',\r\n    styleUrls: ['./actions-list.component.css']\r\n})\r\n/** actions-list component*/\r\nexport class ActionsListComponent implements OnInit, OnChanges {\r\n\r\n\r\n    @Input() actions: Array<BaseAction> = new Array<BaseAction>();\r\n\r\n\r\n    @Input() isSelectable: boolean = false;\r\n\r\n    @Input() viewType: ViewTypeEnum = ViewTypeEnum.Overview;\r\n\r\n\r\n    @Output() onSelect = new EventEmitter<BaseAction>();\r\n\r\n    //public selectedAction: BaseAction = null;\r\n    /** actions-list ctor */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnChanges() {\r\n        //this.cdr.detectChanges();\r\n    }\r\n\r\n\r\n    \r\n\r\n    selectAction(action: BaseAction) {\r\n        if (this.isSelectable) {\r\n            this.onSelect.next(action);\r\n        }\r\n    }\r\n\r\n    getLeft(action: BaseAction):string {\r\n        //<%=int((Model.LeftPercent * 156)) %> px;\r\n\r\n\r\n        return Math.round(action.leftPercent*100) + \"%\";\r\n\r\n    }\r\n\r\n\r\n}","\r\n<div class=\"list\">\r\n    <p *ngIf=\"!actions\"><em>Loading...</em></p>\r\n    <div class=\"mainActionList\">\r\n        <div class=\"ActorActionBack\" *ngFor=\"let action of actions\" [style.margin-left]=\"getLeft(action)\" >\r\n            <action-view [action]=\"action\" [isSelectable]=\"isSelectable\"  (onSelect)=\"selectAction($event)\" [viewType]=\"viewType\"></action-view>\r\n        </div>\r\n    </div>\r\n</div>","\nexport * from './actions-list.component';\nexport * from './action-edit.component';\nexport * from './action.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Game } from '@/entities';\r\nimport { GamesRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport { EnumEx } from \"@/_helpers\";\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\n\r\n\r\n@Component({\r\n    selector: 'app-game-edit',\r\n    templateUrl: './game-edit.component.html',\r\n    styleUrls: ['./game-edit.component.css']\r\n})\r\n/** GameEdit component*/\r\nexport class GameEditComponent {\r\n\r\n\r\n    @Input() game: Game;\r\n    @Output() onDelete = new EventEmitter<Game>();\r\n    @Output() onSave = new EventEmitter<Game>();\r\n\r\n    constructor(private router: Router,\r\n        private gamesRepo: GamesRepository,\r\n        public encounterService: EncounterService) {\r\n\r\n    }\r\n\r\n\r\n    get gameTypes() {\r\n\r\n        var gtype: GameType = GameType.RMSS;\r\n\r\n        var dta = EnumEx.getNamesAndValues<number>(GameType);\n        //debugger;\n\n        return dta;\n    }\r\n\r\n    saveGame = async () => {\r\n        //if (!this.game.id && this.encounterService.systemSettings != null) {\r\n        //    this.game.gameType = this.encounterService.systemSettings.gameSystem;\r\n        //}\r\n\r\n        var g = await this.gamesRepo.saveGameAsync(this.game);\r\n        if (!this.game.id) {\r\n            this.game.id = g.id;\r\n\r\n        }\r\n        await this.encounterService.refreshAsync();\r\n\r\n        this.onSave.emit(this.game);\r\n    }\r\n    closeEdit() {\r\n        //this.gameView.refresh();\r\n    }\r\n    selectEncounter() {\r\n        this.encounterService.currentGame = this.game;\r\n        this.router.navigate(['/encounter', this.game.id]);\r\n    }\r\n}\r\n","<div  *ngIf=\"game\">\r\n    <fieldset>\r\n        <legend>Game: {{game?.name}}</legend>\r\n        <form #gameForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n                <label>Name</label>\r\n                <input #name=\"ngModel\" name=\"name\" type=\"text\" class=\"form-control\"\r\n                       [(ngModel)]=\"game.name\" required/>\r\n                <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                    Please enter a name\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\" style=\"max-width: 100px;\" *ngIf=\"game.id!=null && game.id!=0\">\r\n                <label>Current Time</label>\r\n                <input name=\"currentTime\" class=\"form-control\"\r\n                       [(ngModel)]=\"game.currentTime\" />\r\n            </div>\r\n            <div class=\"form-group\" style=\"max-width: 100px;\">\r\n                <label>System Type</label>\r\n                <select class=\"form-control\" name=\"selectedgameType\" [(ngModel)]=\"game.gameType\">\r\n                    <option *ngFor=\"let gtype of gameTypes\" value={{gtype?.value}}>\r\n                        {{gtype?.name}}\r\n                    </option>\r\n                </select>\r\n                <!--<input type=\"text\" class=\"form-control\" id=\"gameType\"\r\n                       [(ngModel)]=\"game.gameTypeString\" name=\"gameType\" readonly />-->\r\n\r\n            </div>\r\n            <div class=\"text-center pt-2\">\r\n                <!--<button class=\"btn btn-outline-primary pull-left\" (click)=\"closeEdit()\">\r\n                    Back\r\n                </button>-->\r\n\r\n                <button class=\"btn btn-danger\" [disabled]=\"gameForm.invalid\"\r\n                        (click)=\"saveGame()\">\r\n                    <span *ngIf=\"game.id!=null && game.id!=0\">Save</span>\r\n                    <span *ngIf=\"!(game.id!=null && game.id!=0)\">Create</span>\r\n                </button>\r\n\r\n                <button class=\"btn btn-primary pull-right\"\r\n                        (click)=\"selectEncounter()\" *ngIf=\"game.id!=null && game.id!=0\">\r\n                    \r\n                    Open Encounter\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </fieldset>\r\n\r\n\r\n\r\n</div>","<!--tesy\r\n<div class=\"wrapper\">\r\n    <div class=\"area\">-->\r\n        <div class=\"list\">\r\n            <p *ngIf=\"!games\"><em>Loading...</em></p>\r\n            <div class=\"mainList\">\r\n                <h3 style=\"display:block; margin-top:0;\">\r\n                    <div style=\"float:right;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"newGame()\">\r\n                            <span class=\"glyphicon glyphicon-plus\"></span> New\r\n                        </button>\r\n                    </div>\r\n                    Games\r\n                </h3>\r\n                <table *ngIf=\"games\" class=\"table table-striped\">\r\n                    <tr>\r\n                        <th style=\"vertical-align: middle;\">\r\n                            Name\r\n                        </th>\r\n                    </tr>\r\n                    <tr *ngFor=\"let game of games\">\r\n                        <td style=\"white-space:nowrap;\"><a (click)=\"selectGame(game.id)\">{{game?.name}}</a> ({{game?.currentTime.toFixed(2)}})</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <!--<div class=\"edit\">-->\r\n            <!--(onSave)=\"onArmorSaved($event)\"-->\r\n            <!--<app-game-edit [game]=\"selectedGame\" (onDelete)=\"onGameDeleted($event)\" (onSave)=\"onGameSave($event)\"></app-game-edit>\r\n        </div>\r\n    </div>\r\n</div>-->","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { EncounterService } from \"@/services\";\r\nimport { GamesRepository } from '@/repositories';\r\nimport { Game } from '@/entities';\r\n\r\n\r\n@Component({\r\n    selector: 'game-list',\r\n    templateUrl: './game-list.component.html',\r\n    styleUrls: ['./game-list.component.css']\r\n})\r\n/** Game component*/\r\nexport class GameListComponent {\r\n\r\n    public games: Array<Game> = new Array<Game>();\r\n    public selectedGame: Game;\r\n\r\n    /** character ctor */\r\n    constructor(private gameRepo: GamesRepository,\r\n        private encounterService: EncounterService) {\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.games.length > 0) {\r\n            if (this.selectedGame != null) {\r\n                this.selectGame(this.selectedGame.id);\r\n            } else {\r\n                this.selectGame(this.games[0].id);\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.games.length > 0) {\r\n            if (this.selectedGame != null) {\r\n                this.selectGame(this.selectedGame.id);\r\n            } else {\r\n                this.selectGame(this.games[0].id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh = async () => {\r\n        //this.games = await this.gameRepo.getGamesAsync(this.encounterService.systemSettings.gameSystem);\r\n    }\r\n\r\n    newGame() {\r\n        //var _game = new Game();\r\n        //_game.gameType = this.encounterService.systemSettings.gameSystem;\r\n        //_game.gameTypeString = this.encounterService.systemSettings.gameSystemString;\r\n        //this.selectedGame = _game;\r\n    }\r\n    selectGame = async (gameId: number) => {\r\n        this.selectedGame = await this.gameRepo.getGameAsync(gameId);\r\n    }\r\n    onGameSave = (game: Game) => {\r\n        this.refresh();\r\n    }\r\n    onGameDeleted = (game: Game) => {\r\n        this.refresh();\r\n    }\r\n}\r\n","\nexport * from './game-list.component';\nexport * from './game-edit.component';\n","\nexport * from './message-list.component';\n","import { Component, Input } from '@angular/core';\r\nimport { Message } from '@/entities';\r\nimport '@/_helpers/DateEx';\r\n\r\n@Component({\r\n    selector: 'message-list',\r\n    templateUrl: './message-list.component.html',\r\n    styleUrls: ['./message-list.component.less']\r\n})\r\n/** MessageList component*/\r\nexport class MessageListComponent {\r\n\r\n\r\n    @Input() messages: Array<Message> = new Array<Message>();\r\n\r\n    /** MessageList ctor */\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    msgColor(msg: Message): string {\r\n        return \"rgb(\" + msg.whomColor + \")\";\r\n    }\r\n\r\n    currentTime(msg: Message):string {\r\n        return '' + Math.floor(msg.gameTime * 100) / 100;\r\n    }\r\n\r\n    cssClasses(msg: Message): string {\r\n        var cStr = \"MessageEntry \" + msg.messageTypeString;\r\n\r\n        \r\n\r\n        return cStr;\r\n    }\r\n}","<div class=\"list\">\r\n    <p *ngIf=\"!messages\"><em>Loading...</em></p>\r\n    <ul class=\"mainMessagesList\">\r\n        <li *ngFor=\"let msg of messages\" [class]=\"cssClasses(msg)\">\r\n            <span class='currentTimeArea'>{{currentTime(msg)}}</span>\r\n            <span *ngIf=\"msg.beginText != '' \">{{msg.beginText}}</span>\r\n            <span class='whomName' *ngIf=\"!msg.reverseOrder \" [style.color]=\"msgColor(msg)\">{{msg.whom}}</span>\r\n            <span class='actionName' *ngIf=\"msg.reverseOrder \">{{msg.action}}</span>\r\n            <span *ngIf=\"msg.betweenText != '' \">{{msg.betweenText}}</span>\r\n            <span class='whomName' *ngIf=\"msg.reverseOrder \" [style.color]=\"msgColor(msg)\">{{msg.whom}}</span>\r\n            <span class='actionName' *ngIf=\"!msg.reverseOrder \">{{msg.action}}</span>\r\n            <span *ngIf=\"msg.endText != '' \">{{msg.endText}}</span>\r\n        </li>\r\n    </ul>\r\n</div>","\nexport * from './weapon-list.component';\nexport * from './weapon-edit.component';\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Weapon } from '@/entities';\r\nimport { CombatRepository } from '@/repositories';\r\nimport { EncounterService } from \"@/services\";\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\n\r\n@Component({\r\n    selector: 'app-weapon-edit',\r\n    templateUrl: './weapon-edit.component.html',\r\n    styleUrls: ['./weapon-edit.component.css']\r\n})\r\n/** WeaponEdit component*/\r\nexport class WeaponEditComponent {\r\n    /** WeaponEdit ctor */\r\n    @Input() weapon: Weapon;\r\n    @Output() onDelete = new EventEmitter<Weapon>();\r\n\r\n    /** ArmorEdit ctor */\r\n    constructor(private combatRepo: CombatRepository,\r\n        private encounterService: EncounterService) {\r\n\r\n    }\r\n\r\n    get isRolemaster(): boolean {\r\n        return this.encounterService.currentGame?.gameType == GameType.RMSS;\r\n    }\r\n\r\n    delete() {\r\n        this.onDelete.emit(this.weapon);\r\n    }\r\n    //save = async () => {\r\n    //    var weap = await this.combatRepo.saveWeaponAsync(this.weapon);\r\n    //    this.weapon.id = weap.id;\r\n    //    this.onSave.emit(weap);\r\n    //}\r\n}\r\n","<div *ngIf=\"weapon\" class=\"edit-area\">\r\n    <fieldset>\r\n        <legend>Weapon</legend>\r\n        <!--<form #weaponForm=\"ngForm\" class=\"form-horizontal\">-->\r\n        <div class=\"form-group full-row\">\r\n            <label for=\"type\" class=\"control-label\">Weapon Name</label>\r\n            <div class=\"control-area\">\r\n                <input #name=\"ngModel\" name=\"name\" type=\"text\" class=\"form-control\"\r\n                       [(ngModel)]=\"weapon.name\" required />\r\n                <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                    Please enter a name\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group half-row\" style=\" \">\r\n            <label for=\"bonus\" class=\"control-label\">Bonus</label>\r\n            <div class=\"control-area control-area-number\">\r\n                <input name=\"db\" class=\"form-control\"\r\n                       [(ngModel)]=\"weapon.bonus\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group half-row\" style=\"\">\r\n            <label *ngIf=\"isRolemaster\" for=\"ob\" class=\"control-label\">OB</label>\r\n            <label *ngIf=\"!isRolemaster\" for=\"ob\" class=\"control-label\">ATK Bonus</label>\r\n            <div class=\"control-area control-area-number\">\r\n                <input name=\"ob\" class=\"form-control\"\r\n                       [(ngModel)]=\"weapon.ob\" />\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div class=\"form-group half-row\" style=\"\">\r\n            <label for=\"weight\" class=\"control-label\">Weight</label>\r\n            <div class=\"control-area control-area-number\">\r\n                <input name=\"weight\" class=\"form-control\"\r\n                       [(ngModel)]=\"weapon.weight\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group half-row\" style=\"\">\r\n            <label for=\"is2Handed\" class=\"control-label\" style=\"width: 100%;\">\r\n                <input type=\"checkbox\" name=\"is2Handed\" class=\"form-control\"\r\n                       [(ngModel)]=\"weapon.is2Handed\" style=\"width: auto; display: inline-block;\" />\r\n                Is 2 Handed\r\n            </label>\r\n        </div>\r\n        <div class=\"text-center pt-2\">\r\n            <button class=\"btn btn-danger btn-sm pull-right\"\r\n                    (click)=\"delete()\">\r\n                Remove\r\n            </button>\r\n        </div>\r\n        <!--<div class=\"text-center pt-2\">\r\n\r\n        <button class=\"btn btn-danger btn-sm pull-right\" [disabled]=\"weaponForm.invalid\"\r\n                (click)=\"save()\">\r\n            Save\r\n        </button>\r\n\r\n    </div>-->\r\n        <!--</form>-->\r\n    </fieldset>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Weapon } from '@/entities';\r\n\r\n@Component({\r\n    selector: 'weapon-list',\r\n    templateUrl: './weapon-list.component.html',\r\n    styleUrls: ['./weapon-list.component.css']\r\n})\r\n/** Weapon component*/\r\nexport class WeaponListComponent {\r\n    /** Weapon ctor */\r\n    @Input() weapons: Array<Weapon>;\r\n    @Input() charId: number;\r\n    @Output() onDelete = new EventEmitter<Weapon>();\r\n\r\n    public selectedWeapon: Weapon;\r\n    private cnt:number = 1;\r\n\r\n    /** Armor ctor */\r\n    constructor() {\r\n\r\n    }\r\n    ngOnChanges() {\r\n        if (this.weapons.length > 0) {\r\n            this.selectedWeapon = this.weapons[0];\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        if (this.weapons.length > 0) {\r\n            this.selectedWeapon = this.weapons[0];\r\n        }\r\n    }\r\n\r\n    newWeapon() {\r\n        var weapon = new Weapon();\r\n        //weapon.id = this.cnt;\r\n        weapon.name = \"Weapon \" + this.cnt;\r\n        weapon.characterId = this.charId;\r\n        this.selectedWeapon = weapon;\r\n        this.weapons.push(weapon);\r\n        this.cnt = this.cnt + 1;\r\n    }\r\n\r\n    onWeaponDeleted(weapon: Weapon) {\r\n        this.onDelete.emit(weapon); \r\n    }\r\n\r\n    selectWeapon(weapon: Weapon) {\r\n        this.selectedWeapon = weapon;\r\n    }\r\n\r\n    get selectedWeaponId(): string {\r\n        if (this.selectedWeapon != null) {\r\n            return this.selectedWeapon.name;\r\n        }\r\n        return \"\";\r\n    }\r\n    set selectedWeaponId(value: string) {\r\n        this.selectedWeapon = this.weapons.find((a) => a.name == value);\r\n    }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <div class=\"area\">\r\n        <div class=\"list\">\r\n            <p *ngIf=\"!weapons\"><em>Loading...</em></p>\r\n            <div class=\"mainList\">\r\n                <h3 style=\"display:block; margin-top:0;\">\r\n                    <div style=\"float:right;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"newWeapon()\">\r\n                            <span class=\"glyphicon glyphicon-plus\"></span> New\r\n                        </button>\r\n                    </div>\r\n                    Weapons\r\n                </h3>\r\n                <select class=\"form-control\" name=\"selectedWeapon\" size=\"5\" [(ngModel)]=\"selectedWeaponId\">\r\n                    <option *ngFor=\"let weapon of weapons\" value={{weapon?.name}}>\r\n                        {{weapon?.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"edit\">\r\n            <!--(onSave)=\"onWeaponSaved($event)\"-->\r\n            <app-weapon-edit [weapon]=\"selectedWeapon\" (onDelete)=\"onWeaponDeleted($event)\"></app-weapon-edit>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '@/services';\r\n\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getAlert()\n            .subscribe(message => {\n                switch (message && message.type) {\n                    case 'success':\n                        message.cssClass = 'alert alert-success';\n                        break;\n                    case 'error':\n                        message.cssClass = 'alert alert-danger';\n                        break;\n                }\n\n                this.message = message;\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>","export * from './alert.component';","export * from './alert/index';\r\nexport * from './modal/index';\r\nexport * from './treeview/index';\r\nexport * from './tooltip/index';\r\n","export * from './modal.service';\r\nexport * from './modal.component';\r\n","import { Component, ElementRef, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport * as $ from 'jquery';\nimport { ModalService } from './modal.service';\n\n@Component({\n    selector: 'modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css']\n})\n\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    @Input() title: string;\n    @Input() width: string;\n\n    @Output() openEvent = new EventEmitter();\n    @Output() closedEvent = new EventEmitter();\n\n    private element: JQuery;\n    //private dialog: JQuery;\n\n    \n\n    constructor(private modalService: ModalService, private el: ElementRef) {\n        this.element = $(el.nativeElement);\n    }\n\n    ngOnInit(): void {\n        let modal = this;\n\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n        \n        this.element.appendTo('body');\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when directive is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        //this.dialog.dialog(\"open\");\n\n        this.element.show();\n        this.element.children().show();\n        $('body').addClass('modal-open');\n        this.openEvent.emit();\n    }\n\n    // close modal\n    close(): void {\n        //this.dialog.dialog(\"close\");\n        this.element.hide();\n        $('body').removeClass('modal-open');\n        this.closedEvent.emit();\n    }\n    \n}","<div class=\"modal\">\n    <div class=\"modal-content\" [style.width]=\"width\">\n        <div class=\"modal-header\">\n            <h3 style=\"display: inline-block; margin-right: 60px;\"><span [innerHTML]=\"title\"></span></h3>\n            <div style=\"float: right;\">\n                <button class=\"btn btn-default\" (click)=\"close();\" data-dismiss=\"modal\" aria-hidden=\"true\"><span class=\"glyphicon glyphicon-remove-sign\"></span> Close</button></div>\n        </div>\n        <div class=\"modal-body\">\n            <ng-content></ng-content>\n        </div>\n        <div class=\"modal-footer\">\n            <button class=\"btn btn-default\" (click)=\"close();\" data-dismiss=\"modal\" aria-hidden=\"true\"><span class=\"glyphicon glyphicon-remove-sign\"></span> Close</button>\n        </div>\n    </div>\n    <div class=\"modal-background\"></div>\n</div>\n","\n\nexport class ModalService {\n    private modals: any[] = [];\n\n    add(modal: any) {\n        // add modal to array of active modals\n        this.modals.push(modal);\n    }\n\n    remove(id: string) {\n        // remove modal from array of active modals\n        this.modals = this.modals.filter(x => x.id == id);\n    }\n\n    open(id: string) {\n        // open modal specified by id\n        let modal: any = this.modals.find(x => x.id == id);\n        modal.open();\n    }\n\n    close(id: string) {\n        // close modal specified by id\n        let modal: any = this.modals.find(x => x.id == id);\n        modal.close();\n    }\n}","export * from './tooltip.directive';\r\n","import { HostListener, Directive, OnDestroy, AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\n\n\n@Directive({\n    selector: '[tooltip]'\n})\nexport class TooltipDirective implements OnDestroy {\n\n    @Input() tooltip = ''; // The text for the tooltip to display\n    @Input() delay?= 190; // Optional delay input, in ms\n\n    private myPopup:HTMLDivElement;\n    private timer:any;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnDestroy(): void {\n        if (this.myPopup) { this.myPopup.remove() }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        this.timer = setTimeout(() => {\n            let x = this.el.nativeElement.getBoundingClientRect().left + this.el.nativeElement.offsetWidth / 2; // Get the middle of the element\n            let y = this.el.nativeElement.getBoundingClientRect().top + this.el.nativeElement.offsetHeight + 6; // Get the bottom of the element, plus a little extra\n            this.createTooltipPopup(x, y);\n        }, this.delay);\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.timer) clearTimeout(this.timer);\n        if (this.myPopup) { this.myPopup.remove() }\n    }\n\n    private createTooltipPopup(x: number, y: number) {\n        let popup = document.createElement('div');\n        popup.innerHTML = this.tooltip;\n        popup.setAttribute(\"class\", \"tooltip-container\");\n        popup.style.top = y.toString() + \"px\";\n        popup.style.left = x.toString() + \"px\";\n        document.body.appendChild(popup);\n        this.myPopup = popup;\n        setTimeout(() => {\n            if (this.myPopup) this.myPopup.remove();\n        }, 5000); // Remove tooltip after 5 seconds\n    }\n\n}\n","export * from './itreenode';\r\nexport * from './treemodel';\r\nexport * from './treeview.component';\r\n","import { iTreeNode } from \".\";\r\n\r\n\r\nexport class TreeNode {\r\n\r\n    private _isSelected: boolean = false;\r\n    public isOpen: boolean = false;\r\n    public lastChecked: Date = new Date();\r\n\r\n    public children = new Array<TreeNode>();\r\n\r\n\r\n    public constructor(public node: iTreeNode, public parent: TreeNode = null) {\r\n        node.children.forEach((child) => {\r\n            this.children.push(new TreeNode(child, this));\r\n        });\r\n    }\r\n\r\n    public check() {\r\n        var missing = false;\r\n        this.children.forEach((child) => {\r\n            var it = this.node.children.find((n) => n.code == child.code);\r\n            if (!it) {\r\n                missing = true;\r\n            } else {\r\n                child.check();\r\n            }\r\n        });\r\n        if (missing) {\r\n            //debugger;\r\n            this.children = new Array<TreeNode>();\r\n            this.node.children.forEach((child) => {\r\n                this.children.push(new TreeNode(child, this));\r\n            });\r\n        } \r\n\r\n        this.lastChecked = new Date();\r\n\r\n    }\r\n\r\n\r\n\r\n    get text(): string {\r\n        return this.node.text;\r\n    }\r\n    get code(): string {\r\n        return this.node.code;\r\n    }\r\n\r\n\r\n    public get isSelected(): boolean {\r\n        return this._isSelected;\r\n    }\r\n    public set isSelected(value: boolean) {\r\n        this.treeTop.clearSelected();\r\n\r\n        this._isSelected = true;\r\n        this.openNode();\r\n\r\n    }\r\n\r\n    public openNode() {\r\n        this.isOpen = true;\r\n        if (this.parent != null) {\r\n            this.parent.openNode();\r\n        }\r\n    }\r\n\r\n    private clearSelected() {\r\n        this._isSelected = false;\r\n        this.children.forEach((child) => {\r\n            child.clearSelected();\r\n        });\r\n    }\r\n\r\n    public get treeTop(): TreeNode {\r\n        if (this.parent == null) {\r\n            return this;\r\n        }\r\n        return this.parent.treeTop;\r\n    }\r\n\r\n    public getSelected(): TreeNode {\r\n        if (this.isSelected) {\r\n            return this;\r\n        }\r\n        var node: TreeNode = null;\r\n        this.children.forEach((n) => {\r\n            node = node || n.getSelected();\r\n        });\r\n        return node;\r\n    }\r\n\r\n    public findNode(code: string): TreeNode {\r\n        if (this.code == code) {\r\n            return this;\r\n        }\r\n        var node: TreeNode = null;\r\n        this.children.forEach((n) => {\r\n            node = node || n.findNode(code);\r\n        });\r\n        return node;\r\n    }\r\n}\r\n\r\n\r\nexport class TreeModel {\r\n\r\n    public cid: string = \"code\";\r\n    public lid: string = \"text\";\r\n    public cnid: string = \"children\";\r\n    public className: any = null;\r\n    public showTitle: boolean = true;\r\n    public treeTitle: string = \"\";\r\n    public treeNodeId: string = \"\";\r\n    public iconExpand: string = \"keyboard_arrow_right\";\r\n    public iconCollapse: string = \"keyboard_arrow_down\";\r\n    public iconNeutral: string = \"\";\r\n\r\n\r\n    public lastChecked: Date = new Date();\r\n\r\n    public constructor(public treeTop: TreeNode) {\r\n\r\n    }\r\n\r\n\r\n\r\n    public findNode(code: string): TreeNode {\r\n        return this.treeTop.findNode(code);\r\n    }\r\n\r\n    public getSelected(): TreeNode {\r\n        return this.treeTop.getSelected();\r\n    }\r\n\r\n\r\n}","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\r\nimport { whenTrue } from '../../_helpers';\r\nimport { iTreeNode } from './itreenode';\r\nimport { TreeModel, TreeNode } from './treemodel';\r\n\r\n@Component({\r\n    selector: 'app-treeview',\r\n    templateUrl: './treeview.component.html',\r\n    styleUrls: ['./treeview.component.less']\r\n})\r\n/** treeview component*/\r\nexport class TreeviewComponent implements OnInit, OnChanges, AfterViewInit {\r\n    @ViewChildren(\"options\") options: QueryList<ElementRef>;\r\n    //[treeModel]\r\n    //(onSelect)\r\n\r\n    @Input() treeModel: TreeModel;\r\n    @Output() onSelect = new EventEmitter<TreeNode>();\r\n\r\n    TREEVIEW_SUFFIX: string = \"_treeView\";\r\n    ICON_SUFFIX: string = \"_icon\";\r\n    ARIA_EXPANDED: string = \"aria-expanded\";\r\n    DATA_CHILDCOUNT = \"data-childcount\";\r\n    DATA_LID: string = \"data-lid\";\r\n    DATA_CODE: string = \"data-code\";\r\n    DATA_ISFIRST: string = \"data-first\";\r\n    DATA_ISLAST: string = \"data-last\";\r\n    TAB_INDEX: string = \"tabindex\";\r\n\r\n    viewInitted = false;\r\n\r\n    /** treeview ctor */\r\n    constructor(private el: ElementRef) {\r\n        //debugger;\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n       \r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.viewInitted = true;\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        \r\n        this.OnChanges();\r\n    }\r\n\r\n    private async OnChanges(): Promise<void> {\r\n\r\n        await whenTrue(() => this.viewInitted );\r\n\r\n        var sel = this.treeModel.getSelected();\r\n        if (sel != null) {\r\n            this.options.some((eleRef: ElementRef, index: number, optionsarray: ElementRef[]): boolean => {\r\n                let code = eleRef.nativeElement.getAttribute(\"data-code\");\r\n                if (sel.code == code) {\r\n                    this.scrollIntoViewSmoothly(eleRef);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public get model(): TreeModel {\r\n        return this.treeModel;\r\n    }\r\n    public get items(): Array<TreeNode> {\r\n        return this.treeModel.treeTop.children;\r\n    }\r\n    toggleSelection($event: any, item: TreeNode) {\r\n        item.isOpen = !item.isOpen;\r\n        if (item.children.length == 0) {\r\n            item.isSelected = true;\r\n            this.onSelect.next(item);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    scrollIntoViewSmoothly(eleRef: ElementRef) {\r\n        eleRef.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\r\n    }\r\n\r\n    getExpandCollapseClass(item: TreeNode) {\r\n        if (item == null || item.children == null || item.children.length == 0) {\r\n            return this.model.iconNeutral;\r\n        }\r\n        if (item.isOpen) {\r\n            return this.model.iconCollapse;\r\n        }\r\n        return this.model.iconExpand;\r\n\r\n    }\r\n\r\n    isChildrenExists(items: TreeNode[]) {\r\n        return (items != null && items.length > 0) ? true : false;\r\n    }\r\n    getTreeItemId(item: TreeNode, treeId: string) {\r\n        return item.code + \"_\" + treeId + this.TREEVIEW_SUFFIX;\r\n    }\r\n    getIconId(item: TreeNode, treeId: string) {\r\n        let itemId = this.getTreeItemId(item, treeId);\r\n        return itemId + \"_\" + this.ICON_SUFFIX;\r\n    }\r\n\r\n    //determines if the current node has children or not\r\n    getChildCount(item: TreeNode) {\r\n        if (item != null && item.code != null) {\r\n            let items = item.children;\r\n            return (Array.isArray(items) ? items.length : 0)\r\n        }\r\n        return \"0\";\r\n    }\r\n\r\n    collapsedState(item: TreeNode) {\r\n        return item.isOpen;\r\n        //if (item != null && item.children != null && item.children.length > 0) {\r\n        //    //item.ariaExpanded = \"false\";\r\n        //    return \"false\"\r\n        //}\r\n        ////item.ariaExpanded = null;\r\n        //return null;\r\n\r\n    }\r\n}","\r\n<div class=\"tree-view\">\r\n    <div class=\"tree-view-inner\">\r\n        <ng-container *ngTemplateOutlet=\"treeViewList; context:{ $implicit: items,role:'tree',treeid:model.treeNodeId,parentid:'root',lid:'0' }\">\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<ng-template #treeViewList let-list let-role='role' let-treeid=\"treeid\" let-parentid=\"parentid\" let-lid=\"lid\">\r\n    <!--[attr.aria-labelledby]=\"this['tree_view_'+treeid]\"-->\r\n    <ul [attr.role]=\"role\" id=\"treeView_ul_{{treeid}}_{{parentid}}\" *ngIf=\"isChildrenExists(list)\" #ultags>\r\n        <li *ngFor=\"let item of list;let i=index\"\r\n            [id]=\"getTreeItemId(item,treeid)\"\r\n            [attr.data-code]=\"item[model.cid]\"\r\n            [attr.data-childcount]=\"getChildCount(item)\"\r\n            [attr.data-isSelected]=\"item.isSelected\"\r\n            [attr.data-isOpen]=\"item.isOpen\"\r\n            [attr.data-index]=\"i\"\r\n            [attr.data-first]=\"i==0?1:0\"\r\n            [attr.data-last]=\"i==list.length-1?1:0\"\r\n            role=\"treeitem\"\r\n            #options [attr.aria-expanded]=\"collapsedState(item)\">\r\n            <div class=\"treeNodeText\" (click)=\"toggleSelection($event,item)\">\r\n                <i class='material-icons' [id]=\"getIconId(item,treeid)\">{{getExpandCollapseClass(item)}}</i><span class=\"tree-item-label\">{{item[model.lid]}}</span>\r\n            </div>\r\n            <ng-container *ngTemplateOutlet=\"treeViewList; context:{ $implicit: item.children,role:'group',treeid:model.treeNodeId,parentid:item.code  }\">\r\n            </ng-container>\r\n        </li>\r\n    </ul>\r\n</ng-template>","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { ActionGroup } from './ActionGroup';\nimport BaseActionType = Enums.EnumDefinitions.BaseActionType;\r\n    export class ActionDefinition {\r\n        id: number;\r\n        actionGroup_ID?: number;\r\n        name: string;\r\n        basePercent: number;\r\n        isAttack: boolean;\r\n        isSpell: boolean;\r\n        nextAction_ID?: number;\r\n        type: BaseActionType;\r\n        typeString: string;\r\n        actionGroup: ActionGroup;\r\n        nextAction: ActionDefinition;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { ActionDefinition } from './ActionDefinition';\r\n    export class ActionGroup {\r\n        id: number;\r\n        name: string;\r\n        actions: ActionDefinition[];\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { Armor } from './Armor';\r\nimport { Attack } from './Attack';\r\nimport { CriticalEffect } from './CriticalEffect';\r\nimport CharacterType = Enums.EnumDefinitions.CharacterType;\r\nimport DamageLevel = Enums.EnumDefinitions.DamageLevel;\r\n    export class Actor {\r\n        id: number;\r\n        name: string;\r\n        type: CharacterType;\r\n        typeString: string;\r\n        level: number;\r\n        hitsTotal: number;\r\n        hitsRemaining: number;\r\n        damage: DamageLevel;\r\n        damageString: string;\r\n        baseInititive: number;\r\n        rolledInititive: number;\r\n        exhaustionTotal: number;\r\n        exhaustionRemaining: number;\r\n        powerPointsTotal: number;\r\n        powerPointsRemaining: number;\r\n        isConcentrating: boolean;\r\n        isMoving: boolean;\r\n        suprised: boolean;\r\n        usingAdrenalDB: boolean;\r\n        percentRequiredAdrenalDB: number;\r\n        percentAction: number;\r\n        strengthBonus: number;\r\n        critNegatives: number;\r\n        nextSpellTime: number;\r\n        constitutionStat: number;\r\n        movement: number;\r\n        color: string;\r\n        game_ID: number;\r\n        baseCreature_ID?: number;\r\n        baseCharacter_ID?: number;\r\n        currentArmor_ID?: number;\r\n        criticalIgnores: string;\r\n        criticalModified: string;\r\n        currentArmor: Armor;\r\n        attacks: Attack[];\r\n        criticalEffects: CriticalEffect[];\r\n        inititive: number;\r\n        stunRounds: number;\r\n        parryRounds: number;\r\n        negativeRounds: number;\r\n        currentCrits: CriticalEffect;\r\n        hitNegatives: number;\r\n        exhNegatives: number;\r\n        negatives: number;\r\n        spellNegatives: number;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import SecurityRoles = Enums.EnumDefinitions.SecurityRoles;\r\n    export class ApplicationUser {\r\n        id: string;\r\n        email: string;\r\n        phoneNumber: string;\r\n        userName: string;\r\n        securityStamp: string;\r\n        concurrencyStamp: string;\r\n        twoFactorEnabled: boolean;\r\n        accessFailedCount: number;\r\n        lockoutEnabled: boolean;\r\n        lockoutEnd?: Date;\r\n        roles: SecurityRoles[];\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Armor {\r\n        id: number;\r\n        type: number;\r\n        description: string;\r\n        movingManeuverMod: number;\r\n        db: number;\r\n        characterId?: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { CriticalType } from './CriticalType';\nimport { AttackType } from './AttackType';\nimport { SizeRating } from './SizeRating';\nimport { Weapon } from './Weapon';\nimport CriticalLevels = Enums.EnumDefinitions.CriticalLevels;\r\n    export class Attack {\r\n        id: number;\r\n        percentChance: number;\r\n        ob: number;\r\n        maxOB: number;\r\n        number: number;\r\n        damageMultiplier: number;\r\n        criticalLevel: CriticalLevels;\r\n        criticalLevelString: string;\r\n        additionalCritsIsOr: boolean;\r\n        attackType_ID: number;\r\n        sizeRating_ID?: number;\r\n        useCriticalInstead_ID?: number;\r\n        thisRoundSuccess_ID?: number;\r\n        nextRoundSuccess_ID?: number;\r\n        parentAttack_ID?: number;\r\n        creatureOn_ID?: number;\r\n        weaponUsed_ID?: number;\r\n        criticalUseInstead: CriticalType;\r\n        attackType: AttackType;\r\n        thisRoundSuccess: Attack;\r\n        nextRoundSuccess: Attack;\r\n        sizeRating: SizeRating;\r\n        weaponUsed: Weapon;\r\n        additionalCrits: CriticalType[];\r\n        name: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class AttackType {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n        hasSize: boolean;\r\n        hasDB: boolean;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class AuthenticateModel {\r\n        username: string;\r\n        password: string;\r\n        rememberMe: boolean;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n","\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { ActionDefinition } from './ActionDefinition';\nimport { Attack } from './Attack';\nimport ActorActionType = Enums.EnumDefinitions.ActorActionType;\nimport ActionProblem = Enums.EnumDefinitions.ActionProblem;\nimport ActionTypeEnum = Enums.EnumDefinitions.ActionTypeEnum;\r\n    export class BaseAction {\r\n        id: number;\r\n        name: string;\r\n        startTime: number;\r\n        endTime: number;\r\n        type: ActorActionType;\r\n        typeString: string;\r\n        basePercent: number;\r\n        interrupted: boolean;\r\n        note: string;\r\n        state: ActionProblem;\r\n        stateString: string;\r\n        currentModifier: number;\r\n        criticalGiven: boolean;\r\n        bleeder: number;\r\n        count: number;\r\n        totalRounds: number;\r\n        levelDifference: number;\r\n        isHasted: boolean;\r\n        isSlowed: boolean;\r\n        hastedPercent: number;\r\n        leftPercent: number;\r\n        actionType: ActionTypeEnum;\r\n        actionTypeString: string;\r\n        reoccuring: boolean;\r\n        characterAction: boolean;\r\n        base: ActionDefinition;\r\n        currentAttack: Attack;\r\n        game_ID: number;\r\n        whoIsActing_ID: number;\r\n        baseAction_ID?: number;\r\n        currentAttack_ID?: number;\r\n        critical_ID?: number;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Book {\r\n        id: number;\r\n        name: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { Armor } from './Armor';\nimport { Weapon } from './Weapon';\nimport CharacterType = Enums.EnumDefinitions.CharacterType;\nimport GameType = Enums.EnumDefinitions.GameType;\r\n    export class Character {\r\n        id: number;\r\n        name: string;\r\n        level: number;\r\n        baseInititive: number;\r\n        hitPoints: number;\r\n        exhaustionPoints: number;\r\n        powerPoints: number;\r\n        type: CharacterType;\r\n        typeString: string;\r\n        strengthBonus: number;\r\n        percentRequiredAdrenalDB: number;\r\n        walkSpeed: number;\r\n        gameType: GameType;\r\n        gameTypeString: string;\r\n        armors: Armor[];\r\n        weapons: Weapon[];\r\n        rolledInititive: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { ConstitutionBonusChartValues } from './ConstitutionBonusChartValues';\r\n    export class ConstitutionBonusChart {\r\n        id: number;\r\n        code: string;\r\n        perLevelDifference: number;\r\n        bonusExhaustion: number;\r\n        constitutionBonusChartValues: ConstitutionBonusChartValues[];\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class ConstitutionBonusChartValues {\r\n        id: number;\r\n        min: number;\r\n        max: number;\r\n        mod: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { Attack } from './Attack';\r\nimport { Book } from './Book';\r\nimport { ConstitutionBonusChart } from './ConstitutionBonusChart';\r\nimport { CriticalCode } from './CriticalCode';\r\nimport { CriticalIgnore } from './CriticalIgnore';\r\nimport { IQ } from './IQ';\r\nimport { LevelChart } from './LevelChart';\r\nimport { Outlook } from './Outlook';\r\nimport { Pace } from './Pace';\r\nimport { SizeRating } from './SizeRating';\r\nimport { SpeedChart } from './SpeedChart';\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\nimport CreatureStatus = Enums.EnumDefinitions.CreatureStatus;\r\n    export class Creature {\r\n        id: number;\r\n        typeName: string;\r\n        baseLevel: number;\r\n        size_ID: number;\r\n        baseMove: number;\r\n        mmBonus: number;\r\n        minEncountered: number;\r\n        maxEncountered: number;\r\n        baseHits: number;\r\n        at: number;\r\n        db: number;\r\n        pageNumber: number;\r\n        description: string;\r\n        habitat: string;\r\n        levelMod_ID: number;\r\n        msRating_ID: number;\r\n        aqRating_ID: number;\r\n        maxPace_ID: number;\r\n        hitMod_ID: number;\r\n        criticals_ID: number;\r\n        criticalsIgnore_ID: number;\r\n        outlook_ID: number;\r\n        iQ_ID: number;\r\n        book_ID: number;\r\n        gameType: GameType;\r\n        gameTypeString: string;\r\n        ownerID: string;\r\n        status: CreatureStatus;\r\n        attacks: Attack[];\r\n        book: Book;\r\n        hitMod: ConstitutionBonusChart;\r\n        criticals: CriticalCode;\r\n        criticalIgnore: CriticalIgnore;\r\n        iq: IQ;\r\n        levelMod: LevelChart;\r\n        outlook: Outlook;\r\n        maxPace: Pace;\r\n        size: SizeRating;\r\n        aqRating: SpeedChart;\r\n        msRating: SpeedChart;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class CriticalCode {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import ParryType = Enums.EnumDefinitions.ParryType;\r\n    export class CriticalEffect {\r\n        id: number;\r\n        sortOrder: number;\r\n        isStunned: boolean;\r\n        parry: ParryType;\r\n        parryString: string;\r\n        parryNegative: number;\r\n        negative: number;\r\n        timeStart: number;\r\n        timeEnd: number;\r\n        actor_ID: number;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class CriticalIgnore {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class CriticalType {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Dice {\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n    export module EnumDefinitions {\r\n\r\n            export enum ViewTypeEnum {\r\n                Overview = 0,\r\n                Player = 1,\r\n                GM = 2\r\n            }\r\n    \r\n            export enum SecurityRoles {\r\n                None = 0,\r\n                Normal = 1,\r\n                Compendium = 2,\r\n                Admin = 3\r\n            }\r\n    \r\n            export enum MessageTypeEnum {\r\n                Normal = 0,\r\n                Warning = 1,\r\n                Alert = 2\r\n            }\r\n    \r\n            export enum ResponseEnum {\r\n                ChooseNextAction = 0,\r\n                DisplayMessage = 1,\r\n                AutoAdvance = 2\r\n            }\r\n    \r\n            export enum GameType {\r\n                RMSS = 0,\r\n                DnD5e = 1\r\n            }\r\n    \r\n            export enum DamageLevel {\r\n                Healthy = 0,\r\n                Winded = 1,\r\n                Bloodied = 2,\r\n                Rough = 3,\r\n                Unconscious = 4,\r\n                Dead = 5\r\n            }\r\n    \r\n            export enum CriticalLevels {\r\n                Same = 0,\r\n                A = 1,\r\n                B = 2,\r\n                C = 3,\r\n                D = 4,\r\n                E = 5\r\n            }\r\n    \r\n            export enum CharacterType {\r\n                NPC = 0,\r\n                PC = 1\r\n            }\r\n    \r\n            export enum ActorActionType {\r\n                None = 0,\r\n                Normal = 1,\r\n                Attack = 2,\r\n                Spell = 3,\r\n                Prep = 4,\r\n                Movement = 5,\r\n                Bleed = 6,\r\n                Critical = 7,\r\n                Death = 8,\r\n                Psychic = 9,\r\n                SpellEffect = 10\r\n            }\r\n    \r\n            export enum ActionProblem {\r\n                IsOK = 0,\r\n                IsWarning = 1,\r\n                IsError = 2\r\n            }\r\n    \r\n            export enum ActionTypeEnum {\r\n                None = 0,\r\n                Current = 1,\r\n                Proposed = 2,\r\n                Next = 3,\r\n                Effect = 4,\r\n                Interrupted = 5,\r\n                Completed = 6\r\n            }\r\n    \r\n            export enum BaseActionType {\r\n                None = 0,\r\n                Normal = 1,\r\n                Attack = 2,\r\n                Spell = 3,\r\n                Prep = 4,\r\n                Movement = 5\r\n            }\r\n    \r\n            export enum ParryType {\r\n                Fine = 0,\r\n                Must_Parry = 1,\r\n                No_Parry = 2\r\n            }\r\n    \r\n            export enum CreatureStatus {\r\n                Personal = 0,\r\n                Proposed = 1,\r\n                InCompendium = 2\r\n            }\r\n    \r\n    }\r\n\r\n\r\n","\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import GameType = Enums.EnumDefinitions.GameType;\r\n    export class Game {\r\n        id: number;\r\n        name: string;\r\n        gM_ID?: string;\r\n        currentTime: number;\r\n        gameType: GameType;\r\n        gameTypeString: string;\r\n        baseRoundTime: number;\r\n        sizeOfSquare: number;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class IQ {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import { LevelChartValue } from './LevelChartValue';\r\n    export class LevelChart {\r\n        id: number;\r\n        name: string;\r\n        levelChartValues: LevelChartValue[];\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class LevelChartValue {\r\n        id: number;\r\n        min: number;\r\n        max: number;\r\n        mod: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import MessageTypeEnum = Enums.EnumDefinitions.MessageTypeEnum;\r\n    export class Message {\r\n        id: number;\r\n        game_ID: number;\r\n        messageType: MessageTypeEnum;\r\n        messageTypeString: string;\r\n        whom: string;\r\n        whomColor: string;\r\n        action: string;\r\n        gameTime: number;\r\n        reverseOrder: boolean;\r\n        beginText: string;\r\n        betweenText: string;\r\n        endText: string;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    import ResponseEnum = Enums.EnumDefinitions.ResponseEnum;\r\n    export class MoveNextResult {\r\n        response: ResponseEnum;\r\n        message: string;\r\n\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class MySettings {\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Outlook {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Pace {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class PsychicRefractoryPeriodEntry {\r\n        id: number;\r\n        roundNumber: number;\r\n        levelMin: number;\r\n        levelMax: number;\r\n        mod: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class ReferenceEntry {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class RegisterModel {\r\n        firstName: string;\r\n        lastName: string;\r\n        email: string;\r\n        username: string;\r\n        password: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class SizeRating {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class SpeedChart {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n        msBaseDB: number;\r\n        msFleeEvade: number;\r\n        aqChargeLunge: number;\r\n        aqInitiative: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class UpdateModel {\r\n        firstName: string;\r\n        lastName: string;\r\n        username: string;\r\n        password: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class UserModel {\r\n        id: number;\r\n        firstName: string;\r\n        lastName: string;\r\n        username: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class Weapon {\r\n        id: number;\r\n        name: string;\r\n        minWeight: number;\r\n        maxWeight: number;\r\n        weight: number;\r\n        bonus: number;\r\n        is2Handed: boolean;\r\n        ob: number;\r\n        characterId?: number;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\n\r\n\r\n    import * as Enums from './EnumDefinitions'\r\n    \r\n    export class WeaponType {\r\n        id: number;\r\n        name: string;\r\n        abbreviation: string;\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n","import { Actor as ActorBase } from './Actor';\r\nimport { BaseAction as ActionBase } from './BaseAction';\r\nimport { EnumDefinitions } from './EnumDefinitions';\r\n\r\nimport GameType = EnumDefinitions.GameType;\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport ActorActionType = EnumDefinitions.ActorActionType;\r\nimport CharacterType = EnumDefinitions.CharacterType;\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\n\r\n\r\nexport * from './ActionDefinition';\r\nexport * from './ActionGroup';\r\nexport * from './ApplicationUser';\r\nexport * from './Armor';\r\nexport * from './Attack';\r\nexport * from './AttackType';\r\nexport * from './AuthenticateModel';\r\n//export * from './BaseAction';\r\nexport * from './Book';\r\nexport * from './Character';\r\nexport * from './ConstitutionBonusChart';\r\nexport * from './ConstitutionBonusChartValues';\r\nexport * from './Creature';\r\nexport * from './CriticalCode';\r\nexport * from './CriticalEffect';\r\nexport * from './CriticalIgnore';\r\nexport * from './CriticalType';\r\nexport * from './Dice';\r\nexport * from './EnumDefinitions';\r\nexport * from './Game';\r\nexport * from './IQ';\r\nexport * from './LevelChart';\r\nexport * from './LevelChartValue';\r\nexport * from './Message';\r\nexport * from './MoveNextResult';\r\nexport * from './MySettings';\r\nexport * from './Outlook';\r\nexport * from './Pace';\r\nexport * from './PsychicRefractoryPeriodEntry';\r\nexport * from './ReferenceEntry';\r\nexport * from './RegisterModel';\r\nexport * from './SizeRating';\r\nexport * from './SpeedChart';\r\nexport * from './UpdateModel';\r\nexport * from './UserModel';\r\nexport * from './Weapon';\r\nexport * from './WeaponType';\r\n\r\n\r\n\r\n\r\nexport class Actor extends ActorBase {\r\n\r\n\r\n    // starts as unknown until initilized in refresh functions\r\n\r\n    public actions: BaseAction[];\r\n\r\n    public isSelected: boolean;\r\n\r\n    public isActive: boolean;\r\n\r\n\r\n    public get currentAction(): BaseAction {\r\n        //debugger;\r\n        if (this.actions != null && this.actions.length > 0) {\r\n            var ac = this.actions.find((act) => {\r\n                return act.actionType == ActionTypeEnum.Current;\r\n            });\r\n            return ac;\r\n        }\r\n        return null;\r\n    }\r\n    public get nextAction(): BaseAction {\r\n        if (this.actions != null && this.actions.length > 0) {\r\n            var ac = this.actions.find((act) => {\r\n                return act.actionType == ActionTypeEnum.Next;\r\n            });\r\n            return ac;\r\n        }\r\n        return null;\r\n    }\r\n    public get proposedAction(): BaseAction {\r\n        if (this.actions != null && this.actions.length > 0) {\r\n            var ac = this.actions.find((act) => {\r\n                return act.actionType == ActionTypeEnum.Proposed;\r\n            });\r\n            return ac;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport class BaseAction extends ActionBase {\r\n    // starts as unknown until initilized in refresh functions\r\n    public whoIsActing: Actor;\r\n\r\n    public isSelected: boolean;\r\n\r\n    public isActive: boolean;\r\n\r\n\r\n}\r\n","\nexport * from './main-nav-menu/index';\nexport * from './side-nav-menu/index';\n","\nexport * from './main-nav-menu.component';\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { ModalService } from '@/elements/modal/modal.service';\r\nimport { AuthenticationService } from '@/services';\r\nimport { ApplicationUser, Game } from '@/entities';\r\nimport { EnumEx } from '@/_helpers';\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport GameType = Enums.EnumDefinitions.GameType;\r\nimport { GamesRepository } from '@/repositories';\r\n\r\n@Component({\r\n    selector: 'main-nav-menu',\r\n    templateUrl: './main-nav-menu.component.html',\r\n    styleUrls: ['./main-nav-menu.component.less']\r\n})\r\n/** mainNavMenu component*/\r\nexport class MainNavMenuComponent {\r\n\r\n    public games: Array<Game>;\r\n\r\n    public selectedGame: Game;\r\n\r\n    /** mainNavMenu ctor */\r\n    constructor(private authenticationService: AuthenticationService,\r\n        private gameRepository: GamesRepository,\r\n        private modalService: ModalService,\r\n        private router: Router    ) {\r\n\r\n        this.init();\r\n    }\r\n\r\n    get currentUser(): ApplicationUser {\r\n        return this.authenticationService.currentUserValue;\r\n    }\r\n\r\n    public async createEncounter(): Promise<void> {\r\n\r\n\r\n        this.selectedGame = new Game();\n        this.selectedGame.gM_ID = this.currentUser.id;\r\n        debugger;\r\n        this.modalService.open('createGame-modal');\r\n\n    }\r\n\r\n    private async init(): Promise<void> {\r\n\r\n        this.authenticationService.currentUser.subscribe(async (user): Promise<void> => {\r\n            if (user == null) {\r\n                this.games = new Array<Game>();\r\n                return;\r\n            }\r\n            //debugger;\r\n            var gms = await this.gameRepository.getGamesAsync();\r\n            gms = gms.filter((gm) => {\r\n                return gm.gM_ID == user.id;\r\n            });\r\n            this.games = gms;\r\n        });\r\n    }\r\n\r\n    //(openEvent)=\"\" (closedEvent)=\"\">\r\n    //[game]=\"selectedGame\" (onDelete)=\"\" (onSave)=\"\"\r\n\r\n    onOpen(): void {\r\n\n    }\r\n\r\n    onClosed(): void {\r\n\n    }\r\n\r\n    onDelete(): void {\r\n\n    }\r\n\r\n    async onSave(): Promise<void> {\r\n        this.modalService.close('createGame-modal');\n\n\r\n        var gms = await this.gameRepository.getGamesAsync();\r\n        gms = gms.filter((gm) => {\r\n            return gm.gM_ID == this.currentUser.id;\r\n        });\r\n        this.games = gms;\n\n\n        this.router.navigate(['/encounter', this.selectedGame.id]);\n    }\r\n\r\n}\r\n\r\n","<ul class=\"navbar-nav flex-grow-1\">\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link text-dark\" [routerLink]=\"['/home']\">Home</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"currentUser\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">\r\n            Encounters</a>\r\n        <ul class=\"dropdown-menu\">\r\n            <li class=\"dropdown-item\" >\r\n                <a class=\"nav-link text-dark\" (click)=\"createEncounter()\" >Create New Encounter</a>\r\n            </li>\r\n            <li class=\"dropdown-item\" *ngFor=\"let game of games\">\r\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/encounter', game.id]\">{{game.gameTypeString}} - {{game.name}}</a>\r\n            </li>\r\n        </ul>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"currentUser\">\r\n        <a class=\"nav-link text-dark\" [routerLink]=\"['/creatures']\">Creature Compendium</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"currentUser\">\r\n        <a class=\"nav-link text-dark\" [routerLink]=\"['/mycreatures']\">My Creatures</a>\r\n    </li>\r\n    <!--<li class=\"nav-item\" *ngIf=\"currentUser\">\r\n        <select name=\"gameSystem\" class=\"form-control\"\r\n                [(ngModel)]=\"systemSettings.gameSystem\" (ngModelChange)=\"onChange($event)\">\r\n            <option *ngFor=\"let gtype of gameTypes\" [value]=\"gtype.value\">{{gtype.name}}</option>\r\n        </select>\r\n    </li>-->\r\n    <!--<li class=\"nav-item\">\r\n      <a class=\"nav-link text-dark\" asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n    </li>-->\r\n</ul>\r\n<modal id=\"createGame-modal\" title=\"Create New Encounter\" width=\"30%\" (openEvent)=\"onOpen()\" (closedEvent)=\"onClosed()\">\r\n    <app-game-edit [game]=\"selectedGame\" (onDelete)=\"onDelete()\" (onSave)=\"onSave()\"></app-game-edit>\r\n</modal>\r\n","\nexport * from './side-nav-menu.component';\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from '@/services';\r\nimport { EncounterService } from '@/services';\r\nimport { ApplicationUser } from '@/entities';\r\n\r\n@Component({\r\n  selector: 'side-nav-menu',\r\n  templateUrl: './side-nav-menu.component.html',\r\n  styleUrls: ['./side-nav-menu.component.less'],\r\n  providers: [EncounterService]\r\n})\r\n/** side-nav-menu component*/\r\nexport class SideNavMenuComponent {\r\n  currentUser: ApplicationUser;\r\n  /** side-nav-menu ctor */\r\n  constructor(public gameView: EncounterService,\r\n    private authenticationService: AuthenticationService) {\r\n\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n  }\r\n\r\n  //get gameTypes(): Array<any> {\r\n  //  var lst = EnumEx.getNamesAndValues(GameType);\r\n  //  return lst;\r\n  //}\r\n\r\n  //onChange(newValue: GameType) {\r\n  //  //this.gameView.setGameType(newValue);\r\n  //}\r\n\r\n  //get systemSettings(): MySettings {\r\n  //    return this.gameView.systemSettings;\r\n  //}\r\n  //public setGameType(value: GameType) {\r\n  //    this.gameView.setGameType(value);\r\n  //}\r\n\r\n  //set gameSystem(gType: string) {\r\n  //    var gt = <GameType><any>GameType[<any>gType];\r\n  //    this.gameView.gameSystem = gt;\r\n  //}\r\n\r\n\r\n  //  get selectedActor(): Actor {\r\n  //    return this.gameView.selectedActor;\r\n  //  }\r\n  //  selectActor(actor: Actor) {\r\n  //    this.gameView.selectedActor = actor;\r\n  //  }\r\n\r\n  //  get actors(): Array<Actor> {\r\n  //    return this.gameView.actors;\r\n  //  }\r\n\r\n  //  get game(): Game {\r\n  //    return this.gameView.currentGame;\r\n  //  }\r\n}\r\n","<div class='main-nav'>\r\n  <div class=''>\r\n    <div class=''>\r\n      <a class='navbar-brand' [routerLink]=\"['/home']\">CEATSii </a>\r\n      <!--<select name=\"gameSystem\" class=\"form-control\"\r\n              [(ngModel)]=\"systemSettings.gameSystem\" (ngModelChange)=\"onChange($event)\">\r\n        <option *ngFor=\"let gtype of gameTypes\" [value]=\"gtype.value\">{{gtype.name}}</option>\r\n      </select>-->\r\n    </div>\r\n    <div class='clearfix'></div>\r\n    <div class=''>\r\n      <ul class=''>\r\n        <!--<li *ngIf=\"game\" [routerLinkActive]=\"['link-active']\">\r\n          <a [routerLink]=\"['/encounter', game.id]\">\r\n            <span class='glyphicon glyphicon-th-list'></span> {{ game?.name }}\r\n          </a>\r\n          <ul>\r\n            <li *ngFor=\"let actor of actors\" [routerLinkActive]=\"['link-active']\">\r\n              <a [routerLink]=\"['/actor', actor.id]\">\r\n                <span class='glyphicon glyphicon-user'></span> {{ actor.name }}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li [routerLinkActive]=\"['link-active']\">\r\n          <a [routerLink]=\"['/games']\">\r\n            <span class='glyphicon glyphicon-th-list'></span> Games\r\n          </a>\r\n        </li>\r\n        <li [routerLinkActive]=\"['link-active']\">\r\n          <a [routerLink]=\"['/character']\">\r\n            <span class='glyphicon glyphicon-th-list'></span> Characters\r\n          </a>\r\n        </li>\r\n        <li [routerLinkActive]=\"['link-active']\">\r\n          <a [routerLink]=\"['/creature']\">\r\n            <span class='glyphicon glyphicon-th-list'></span> Creatures\r\n          </a>\r\n        </li>-->\r\n\r\n        <!--<li [routerLinkActive]=\"['link-active']\">\r\n            <a [routerLink]=\"['/counter']\">\r\n                <span class='glyphicon glyphicon-education'></span> Counter\r\n            </a>\r\n        </li>\r\n        <li [routerLinkActive]=\"['link-active']\">\r\n            <a [routerLink]=\"['/fetch-data']\">\r\n                <span class='glyphicon glyphicon-th-list'></span> Fetch data\r\n            </a>\r\n        </li>-->\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { BaseAction } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActionsRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Actions/getActionsOnActor/${actorId}\r\n\r\n\t//public getActionsOnActor = (actorId: number, callback: (data: BaseAction[])=>void) : void => {\r\n\t//\tthis.getActionsOnActorObserve(actorId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActionsOnActorAsync = (actorId: number) : Promise<BaseAction[]> => {\r\n\r\n        return new Promise<BaseAction[]>((resolve, reject) => {\r\n            this.getActionsOnActor(actorId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActionsOnActor = (actorId: number) : Observable<BaseAction[]> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        \r\n            var _Url = `api/v${version}/Actions/getActionsOnActor/${actorId}`;\r\n\r\n            return this._httpClient.get<BaseAction[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new BaseAction(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Actions/getActionsInGame/${gameId}\r\n\r\n\t//public getActionsInGame = (gameId: number, callback: (data: BaseAction[])=>void) : void => {\r\n\t//\tthis.getActionsInGameObserve(gameId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActionsInGameAsync = (gameId: number) : Promise<BaseAction[]> => {\r\n\r\n        return new Promise<BaseAction[]>((resolve, reject) => {\r\n            this.getActionsInGame(gameId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActionsInGame = (gameId: number) : Observable<BaseAction[]> => {\r\n        gameId = (gameId == null ? <number><any>\"\" : gameId);\r\n        \r\n            var _Url = `api/v${version}/Actions/getActionsInGame/${gameId}`;\r\n\r\n            return this._httpClient.get<BaseAction[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new BaseAction(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Actions/getAction/${id}\r\n\r\n\t//public getAction = (id: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.getActionObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActionAsync = (id: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.getAction(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAction = (id: number) : Observable<BaseAction> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Actions/getAction/${id}`;\r\n\r\n            return this._httpClient.get<BaseAction>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Actions/SaveAction\r\n\r\n\t//public saveAction = (action: BaseAction, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.saveActionObserve(action).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveActionAsync = (action: BaseAction) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.saveAction(action)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveAction = (action: BaseAction) : Observable<BaseAction> => {\r\n        action = (action == null ? <BaseAction><any>\"\" : action);\r\n        \r\n            var _Url = `api/v${version}/Actions/SaveAction`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, action)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Actions/deleteAction/${id}\r\n\r\n\t//public deleteAction = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteActionObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteActionAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteAction(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteAction = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Actions/deleteAction/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Actor } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActorsRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Actors/getActorsInGame/${gameId}\r\n\r\n\t//public getActorsInGame = (gameId: number, callback: (data: Actor[])=>void) : void => {\r\n\t//\tthis.getActorsInGameObserve(gameId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActorsInGameAsync = (gameId: number) : Promise<Actor[]> => {\r\n\r\n        return new Promise<Actor[]>((resolve, reject) => {\r\n            this.getActorsInGame(gameId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActorsInGame = (gameId: number) : Observable<Actor[]> => {\r\n        gameId = (gameId == null ? <number><any>\"\" : gameId);\r\n        \r\n            var _Url = `api/v${version}/Actors/getActorsInGame/${gameId}`;\r\n\r\n            return this._httpClient.get<Actor[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Actor(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Actors/getActor/${id}\r\n\r\n\t//public getActor = (id: number, callback: (data: Actor)=>void) : void => {\r\n\t//\tthis.getActorObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActorAsync = (id: number) : Promise<Actor> => {\r\n\r\n        return new Promise<Actor>((resolve, reject) => {\r\n            this.getActor(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActor = (id: number) : Observable<Actor> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Actors/getActor/${id}`;\r\n\r\n            return this._httpClient.get<Actor>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Actor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Actors/SaveActor\r\n\r\n\t//public saveActor = (actor: Actor, callback: (data: Actor)=>void) : void => {\r\n\t//\tthis.saveActorObserve(actor).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveActorAsync = (actor: Actor) : Promise<Actor> => {\r\n\r\n        return new Promise<Actor>((resolve, reject) => {\r\n            this.saveActor(actor)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveActor = (actor: Actor) : Observable<Actor> => {\r\n        actor = (actor == null ? <Actor><any>\"\" : actor);\r\n        \r\n            var _Url = `api/v${version}/Actors/SaveActor`;\r\n\r\n            return this._httpClient.post<Actor>(_Url, actor)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Actor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Actors/deleteActor/${id}\r\n\r\n\t//public deleteActor = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteActorObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteActorAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteActor(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteActor = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Actors/deleteActor/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Character } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CharactersRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Characters/getCharacters\r\n\r\n\t//public getCharacters = (, callback: (data: Character[])=>void) : void => {\r\n\t//\tthis.getCharactersObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCharactersAsync = () : Promise<Character[]> => {\r\n\r\n        return new Promise<Character[]>((resolve, reject) => {\r\n            this.getCharacters()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCharacters = () : Observable<Character[]> => {\r\n        \r\n            var _Url = `api/v${version}/Characters/getCharacters`;\r\n\r\n            return this._httpClient.get<Character[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Character(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Characters/getCharacter/${id}\r\n\r\n\t//public getCharacter = (id: number, callback: (data: Character)=>void) : void => {\r\n\t//\tthis.getCharacterObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCharacterAsync = (id: number) : Promise<Character> => {\r\n\r\n        return new Promise<Character>((resolve, reject) => {\r\n            this.getCharacter(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCharacter = (id: number) : Observable<Character> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Characters/getCharacter/${id}`;\r\n\r\n            return this._httpClient.get<Character>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Character(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Characters/SaveCharacter\r\n\r\n\t//public saveCharacter = (character: Character, callback: (data: Character)=>void) : void => {\r\n\t//\tthis.saveCharacterObserve(character).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveCharacterAsync = (character: Character) : Promise<Character> => {\r\n\r\n        return new Promise<Character>((resolve, reject) => {\r\n            this.saveCharacter(character)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveCharacter = (character: Character) : Observable<Character> => {\r\n        character = (character == null ? <Character><any>\"\" : character);\r\n        \r\n            var _Url = `api/v${version}/Characters/SaveCharacter`;\r\n\r\n            return this._httpClient.post<Character>(_Url, character)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Character(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Characters/deleteCharacter/${id}\r\n\r\n\t//public deleteCharacter = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteCharacterObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteCharacterAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteCharacter(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteCharacter = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Characters/deleteCharacter/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Armor } from '@/entities';\nimport { Attack } from '@/entities';\nimport { Weapon } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CombatRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // delete: api/v${version}/Combat/deleteArmor/${id}\r\n\r\n\t//public deleteArmor = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteArmorObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteArmorAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteArmor(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteArmor = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/deleteArmor/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Combat/deleteAttack/${id}\r\n\r\n\t//public deleteAttack = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteAttackObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteAttackAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteAttack(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteAttack = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/deleteAttack/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Combat/deleteWeapon/${id}\r\n\r\n\t//public deleteWeapon = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteWeaponObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteWeaponAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteWeapon(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteWeapon = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/deleteWeapon/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getArmor/${id}\r\n\r\n\t//public getArmor = (id: number, callback: (data: Armor)=>void) : void => {\r\n\t//\tthis.getArmorObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getArmorAsync = (id: number) : Promise<Armor> => {\r\n\r\n        return new Promise<Armor>((resolve, reject) => {\r\n            this.getArmor(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getArmor = (id: number) : Observable<Armor> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/getArmor/${id}`;\r\n\r\n            return this._httpClient.get<Armor>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Armor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getArmors\r\n\r\n\t//public getArmors = (, callback: (data: Armor[])=>void) : void => {\r\n\t//\tthis.getArmorsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getArmorsAsync = () : Promise<Armor[]> => {\r\n\r\n        return new Promise<Armor[]>((resolve, reject) => {\r\n            this.getArmors()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getArmors = () : Observable<Armor[]> => {\r\n        \r\n            var _Url = `api/v${version}/Combat/getArmors`;\r\n\r\n            return this._httpClient.get<Armor[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Armor(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getArmorsOnCharacter/${characterId}\r\n\r\n\t//public getArmorsOnCharacter = (characterId: number, callback: (data: Armor[])=>void) : void => {\r\n\t//\tthis.getArmorsOnCharacterObserve(characterId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getArmorsOnCharacterAsync = (characterId: number) : Promise<Armor[]> => {\r\n\r\n        return new Promise<Armor[]>((resolve, reject) => {\r\n            this.getArmorsOnCharacter(characterId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getArmorsOnCharacter = (characterId: number) : Observable<Armor[]> => {\r\n        characterId = (characterId == null ? <number><any>\"\" : characterId);\r\n        \r\n            var _Url = `api/v${version}/Combat/getArmorsOnCharacter/${characterId}`;\r\n\r\n            return this._httpClient.get<Armor[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Armor(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getAttack/${id}\r\n\r\n\t//public getAttack = (id: number, callback: (data: Attack)=>void) : void => {\r\n\t//\tthis.getAttackObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAttackAsync = (id: number) : Promise<Attack> => {\r\n\r\n        return new Promise<Attack>((resolve, reject) => {\r\n            this.getAttack(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAttack = (id: number) : Observable<Attack> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/getAttack/${id}`;\r\n\r\n            return this._httpClient.get<Attack>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Attack(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getAttacks\r\n\r\n\t//public getAttacks = (, callback: (data: Attack[])=>void) : void => {\r\n\t//\tthis.getAttacksObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAttacksAsync = () : Promise<Attack[]> => {\r\n\r\n        return new Promise<Attack[]>((resolve, reject) => {\r\n            this.getAttacks()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAttacks = () : Observable<Attack[]> => {\r\n        \r\n            var _Url = `api/v${version}/Combat/getAttacks`;\r\n\r\n            return this._httpClient.get<Attack[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Attack(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getAttacksOnActor/${actorId}\r\n\r\n\t//public getAttacksOnActor = (actorId: number, callback: (data: Attack[])=>void) : void => {\r\n\t//\tthis.getAttacksOnActorObserve(actorId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAttacksOnActorAsync = (actorId: number) : Promise<Attack[]> => {\r\n\r\n        return new Promise<Attack[]>((resolve, reject) => {\r\n            this.getAttacksOnActor(actorId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAttacksOnActor = (actorId: number) : Observable<Attack[]> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        \r\n            var _Url = `api/v${version}/Combat/getAttacksOnActor/${actorId}`;\r\n\r\n            return this._httpClient.get<Attack[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Attack(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getAttacksOnCreature/${creatureId}\r\n\r\n\t//public getAttacksOnCreature = (creatureId: number, callback: (data: Attack[])=>void) : void => {\r\n\t//\tthis.getAttacksOnCreatureObserve(creatureId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAttacksOnCreatureAsync = (creatureId: number) : Promise<Attack[]> => {\r\n\r\n        return new Promise<Attack[]>((resolve, reject) => {\r\n            this.getAttacksOnCreature(creatureId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAttacksOnCreature = (creatureId: number) : Observable<Attack[]> => {\r\n        creatureId = (creatureId == null ? <number><any>\"\" : creatureId);\r\n        \r\n            var _Url = `api/v${version}/Combat/getAttacksOnCreature/${creatureId}`;\r\n\r\n            return this._httpClient.get<Attack[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Attack(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getWeapon/${id}\r\n\r\n\t//public getWeapon = (id: number, callback: (data: Weapon)=>void) : void => {\r\n\t//\tthis.getWeaponObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getWeaponAsync = (id: number) : Promise<Weapon> => {\r\n\r\n        return new Promise<Weapon>((resolve, reject) => {\r\n            this.getWeapon(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getWeapon = (id: number) : Observable<Weapon> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Combat/getWeapon/${id}`;\r\n\r\n            return this._httpClient.get<Weapon>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Weapon(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getWeapons\r\n\r\n\t//public getWeapons = (, callback: (data: Weapon[])=>void) : void => {\r\n\t//\tthis.getWeaponsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getWeaponsAsync = () : Promise<Weapon[]> => {\r\n\r\n        return new Promise<Weapon[]>((resolve, reject) => {\r\n            this.getWeapons()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getWeapons = () : Observable<Weapon[]> => {\r\n        \r\n            var _Url = `api/v${version}/Combat/getWeapons`;\r\n\r\n            return this._httpClient.get<Weapon[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Weapon(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Combat/getWeaponsOnCharacter/${characterId}\r\n\r\n\t//public getWeaponsOnCharacter = (characterId: number, callback: (data: Weapon[])=>void) : void => {\r\n\t//\tthis.getWeaponsOnCharacterObserve(characterId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getWeaponsOnCharacterAsync = (characterId: number) : Promise<Weapon[]> => {\r\n\r\n        return new Promise<Weapon[]>((resolve, reject) => {\r\n            this.getWeaponsOnCharacter(characterId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getWeaponsOnCharacter = (characterId: number) : Observable<Weapon[]> => {\r\n        characterId = (characterId == null ? <number><any>\"\" : characterId);\r\n        \r\n            var _Url = `api/v${version}/Combat/getWeaponsOnCharacter/${characterId}`;\r\n\r\n            return this._httpClient.get<Weapon[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Weapon(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Combat/SaveArmor\r\n\r\n\t//public saveArmor = (armor: Armor, callback: (data: Armor)=>void) : void => {\r\n\t//\tthis.saveArmorObserve(armor).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveArmorAsync = (armor: Armor) : Promise<Armor> => {\r\n\r\n        return new Promise<Armor>((resolve, reject) => {\r\n            this.saveArmor(armor)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveArmor = (armor: Armor) : Observable<Armor> => {\r\n        armor = (armor == null ? <Armor><any>\"\" : armor);\r\n        \r\n            var _Url = `api/v${version}/Combat/SaveArmor`;\r\n\r\n            return this._httpClient.post<Armor>(_Url, armor)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Armor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Combat/SaveAttack\r\n\r\n\t//public saveAttack = (attack: Attack, callback: (data: Attack)=>void) : void => {\r\n\t//\tthis.saveAttackObserve(attack).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveAttackAsync = (attack: Attack) : Promise<Attack> => {\r\n\r\n        return new Promise<Attack>((resolve, reject) => {\r\n            this.saveAttack(attack)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveAttack = (attack: Attack) : Observable<Attack> => {\r\n        attack = (attack == null ? <Attack><any>\"\" : attack);\r\n        \r\n            var _Url = `api/v${version}/Combat/SaveAttack`;\r\n\r\n            return this._httpClient.post<Attack>(_Url, attack)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Attack(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Combat/SaveAttackOnActor/${actorId}\r\n\r\n\t//public saveAttackOnActor = (actorId: number, attack: Attack, callback: (data: Attack)=>void) : void => {\r\n\t//\tthis.saveAttackOnActorObserve(actorId, attack).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveAttackOnActorAsync = (actorId: number, attack: Attack) : Promise<Attack> => {\r\n\r\n        return new Promise<Attack>((resolve, reject) => {\r\n            this.saveAttackOnActor(actorId, attack)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveAttackOnActor = (actorId: number, attack: Attack) : Observable<Attack> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        attack = (attack == null ? <Attack><any>\"\" : attack);\r\n        \r\n            var _Url = `api/v${version}/Combat/SaveAttackOnActor/${actorId}`;\r\n\r\n            return this._httpClient.post<Attack>(_Url, actorId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Attack(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Combat/SaveWeapon\r\n\r\n\t//public saveWeapon = (weapon: Weapon, callback: (data: Weapon)=>void) : void => {\r\n\t//\tthis.saveWeaponObserve(weapon).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveWeaponAsync = (weapon: Weapon) : Promise<Weapon> => {\r\n\r\n        return new Promise<Weapon>((resolve, reject) => {\r\n            this.saveWeapon(weapon)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveWeapon = (weapon: Weapon) : Observable<Weapon> => {\r\n        weapon = (weapon == null ? <Weapon><any>\"\" : weapon);\r\n        \r\n            var _Url = `api/v${version}/Combat/SaveWeapon`;\r\n\r\n            return this._httpClient.post<Weapon>(_Url, weapon)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Weapon(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Creature } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CreaturesRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Creatures/getCreatures\r\n\r\n\t//public getCreatures = (, callback: (data: Creature[])=>void) : void => {\r\n\t//\tthis.getCreaturesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCreaturesAsync = () : Promise<Creature[]> => {\r\n\r\n        return new Promise<Creature[]>((resolve, reject) => {\r\n            this.getCreatures()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCreatures = () : Observable<Creature[]> => {\r\n        \r\n            var _Url = `api/v${version}/Creatures/getCreatures`;\r\n\r\n            return this._httpClient.get<Creature[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Creature(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Creatures/getCreature/${id}\r\n\r\n\t//public getCreature = (id: number, callback: (data: Creature)=>void) : void => {\r\n\t//\tthis.getCreatureObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCreatureAsync = (id: number) : Promise<Creature> => {\r\n\r\n        return new Promise<Creature>((resolve, reject) => {\r\n            this.getCreature(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCreature = (id: number) : Observable<Creature> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Creatures/getCreature/${id}`;\r\n\r\n            return this._httpClient.get<Creature>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Creature(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Creatures/SaveCreature\r\n\r\n\t//public saveCreature = (creature: Creature, callback: (data: Creature)=>void) : void => {\r\n\t//\tthis.saveCreatureObserve(creature).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveCreatureAsync = (creature: Creature) : Promise<Creature> => {\r\n\r\n        return new Promise<Creature>((resolve, reject) => {\r\n            this.saveCreature(creature)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveCreature = (creature: Creature) : Observable<Creature> => {\r\n        creature = (creature == null ? <Creature><any>\"\" : creature);\r\n        \r\n            var _Url = `api/v${version}/Creatures/SaveCreature`;\r\n\r\n            return this._httpClient.post<Creature>(_Url, creature)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Creature(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Creatures/deleteCreature/${id}\r\n\r\n\t//public deleteCreature = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteCreatureObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteCreatureAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteCreature(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteCreature = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Creatures/deleteCreature/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { CriticalEffect } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CriticalEffectsRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/CriticalEffects/getCriticalEffects/${actorId}\r\n\r\n\t//public getCriticalEffects = (actorId: number, callback: (data: CriticalEffect[])=>void) : void => {\r\n\t//\tthis.getCriticalEffectsObserve(actorId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCriticalEffectsAsync = (actorId: number) : Promise<CriticalEffect[]> => {\r\n\r\n        return new Promise<CriticalEffect[]>((resolve, reject) => {\r\n            this.getCriticalEffects(actorId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCriticalEffects = (actorId: number) : Observable<CriticalEffect[]> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        \r\n            var _Url = `api/v${version}/CriticalEffects/getCriticalEffects/${actorId}`;\r\n\r\n            return this._httpClient.get<CriticalEffect[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new CriticalEffect(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/CriticalEffects/getCriticalEffect/${id}\r\n\r\n\t//public getCriticalEffect = (id: number, callback: (data: CriticalEffect)=>void) : void => {\r\n\t//\tthis.getCriticalEffectObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCriticalEffectAsync = (id: number) : Promise<CriticalEffect> => {\r\n\r\n        return new Promise<CriticalEffect>((resolve, reject) => {\r\n            this.getCriticalEffect(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCriticalEffect = (id: number) : Observable<CriticalEffect> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/CriticalEffects/getCriticalEffect/${id}`;\r\n\r\n            return this._httpClient.get<CriticalEffect>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new CriticalEffect(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/CriticalEffects/SaveCriticalEffect\r\n\r\n\t//public saveCriticalEffect = (criticalEffect: CriticalEffect, callback: (data: CriticalEffect)=>void) : void => {\r\n\t//\tthis.saveCriticalEffectObserve(criticalEffect).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveCriticalEffectAsync = (criticalEffect: CriticalEffect) : Promise<CriticalEffect> => {\r\n\r\n        return new Promise<CriticalEffect>((resolve, reject) => {\r\n            this.saveCriticalEffect(criticalEffect)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveCriticalEffect = (criticalEffect: CriticalEffect) : Observable<CriticalEffect> => {\r\n        criticalEffect = (criticalEffect == null ? <CriticalEffect><any>\"\" : criticalEffect);\r\n        \r\n            var _Url = `api/v${version}/CriticalEffects/SaveCriticalEffect`;\r\n\r\n            return this._httpClient.post<CriticalEffect>(_Url, criticalEffect)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new CriticalEffect(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/CriticalEffects/deleteCriticalEffect/${id}\r\n\r\n\t//public deleteCriticalEffect = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteCriticalEffectObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteCriticalEffectAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteCriticalEffect(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteCriticalEffect = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/CriticalEffects/deleteCriticalEffect/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Game } from '@/entities';\r\nimport { Message } from '@/entities';\r\nimport { Actor } from '@/entities';\r\nimport { MoveNextResult } from '@/entities';\r\nimport { BaseAction } from '@/entities';\r\nimport { CriticalEffect } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EncounterRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Encounter/GetCurrentGame\r\n\r\n\t//public getCurrentGame = (, callback: (data: Game)=>void) : void => {\r\n\t//\tthis.getCurrentGameObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCurrentGameAsync = () : Promise<Game> => {\r\n\r\n        return new Promise<Game>((resolve, reject) => {\r\n            this.getCurrentGame()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCurrentGame = () : Observable<Game> => {\r\n        \r\n            var _Url = `api/v${version}/Encounter/GetCurrentGame`;\r\n\r\n            return this._httpClient.get<Game>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Game(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/SetCurrentGame/${gameId}\r\n\r\n\t//public setCurrentGame = (gameId: number, callback: (data: Game)=>void) : void => {\r\n\t//\tthis.setCurrentGameObserve(gameId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic setCurrentGameAsync = (gameId: number) : Promise<Game> => {\r\n\r\n        return new Promise<Game>((resolve, reject) => {\r\n            this.setCurrentGame(gameId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic setCurrentGame = (gameId: number) : Observable<Game> => {\r\n        gameId = (gameId == null ? <number><any>\"\" : gameId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/SetCurrentGame/${gameId}`;\r\n\r\n            return this._httpClient.post<Game>(_Url, gameId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Game(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Encounter/GetMessages\r\n\r\n\t//public getMessages = (, callback: (data: Message[])=>void) : void => {\r\n\t//\tthis.getMessagesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getMessagesAsync = () : Promise<Message[]> => {\r\n\r\n        return new Promise<Message[]>((resolve, reject) => {\r\n            this.getMessages()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getMessages = () : Observable<Message[]> => {\r\n        \r\n            var _Url = `api/v${version}/Encounter/GetMessages`;\r\n\r\n            return this._httpClient.get<Message[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Message(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/CreateActorFromCreature/${creatureId}\r\n\r\n\t//public createActorFromCreature = (creatureId: number, callback: (data: Actor)=>void) : void => {\r\n\t//\tthis.createActorFromCreatureObserve(creatureId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic createActorFromCreatureAsync = (creatureId: number) : Promise<Actor> => {\r\n\r\n        return new Promise<Actor>((resolve, reject) => {\r\n            this.createActorFromCreature(creatureId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic createActorFromCreature = (creatureId: number) : Observable<Actor> => {\r\n        creatureId = (creatureId == null ? <number><any>\"\" : creatureId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/CreateActorFromCreature/${creatureId}`;\r\n\r\n            return this._httpClient.post<Actor>(_Url, creatureId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Actor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/CreateActorFromCharacter/${characterId}?rolledInit=${rolledInit}\r\n\r\n\t//public createActorFromCharacter = (characterId: number, rolledInit: number, callback: (data: Actor)=>void) : void => {\r\n\t//\tthis.createActorFromCharacterObserve(characterId, rolledInit).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic createActorFromCharacterAsync = (characterId: number, rolledInit: number) : Promise<Actor> => {\r\n\r\n        return new Promise<Actor>((resolve, reject) => {\r\n            this.createActorFromCharacter(characterId, rolledInit)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic createActorFromCharacter = (characterId: number, rolledInit: number) : Observable<Actor> => {\r\n        characterId = (characterId == null ? <number><any>\"\" : characterId);\r\n        rolledInit = (rolledInit == null ? <number><any>\"\" : rolledInit);\r\n        \r\n            var _Url = `api/v${version}/Encounter/CreateActorFromCharacter/${characterId}?rolledInit=${rolledInit}`;\r\n\r\n            return this._httpClient.post<Actor>(_Url, characterId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Actor(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/MoveToNext?none=${none}\r\n\r\n\t//public moveToNext = (none: boolean, callback: (data: MoveNextResult)=>void) : void => {\r\n\t//\tthis.moveToNextObserve(none).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic moveToNextAsync = (none: boolean) : Promise<MoveNextResult> => {\r\n\r\n        return new Promise<MoveNextResult>((resolve, reject) => {\r\n            this.moveToNext(none)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic moveToNext = (none: boolean) : Observable<MoveNextResult> => {\r\n        none = (none == null ? <boolean><any>\"\" : none);\r\n        \r\n            var _Url = `api/v${version}/Encounter/MoveToNext?none=${none}`;\r\n\r\n            return this._httpClient.post<MoveNextResult>(_Url, none)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new MoveNextResult(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/ProposeActionUnconscious?actorId=${actorId}\r\n\r\n\t//public proposeActionUnconscious = (actorId: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.proposeActionUnconsciousObserve(actorId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic proposeActionUnconsciousAsync = (actorId: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.proposeActionUnconscious(actorId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic proposeActionUnconscious = (actorId: number) : Observable<BaseAction> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/ProposeActionUnconscious?actorId=${actorId}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, actorId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/ProposeAction?actionDefId=${actionDefId}&whomId=${whomId}&modifier=${modifier}&attackId=${attackId}\r\n\r\n\t//public proposeAction = (actionDefId: number, whomId: number, modifier: number, attackId: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.proposeActionObserve(actionDefId, whomId, modifier, attackId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic proposeActionAsync = (actionDefId: number, whomId: number, modifier: number, attackId: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.proposeAction(actionDefId, whomId, modifier, attackId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic proposeAction = (actionDefId: number, whomId: number, modifier: number, attackId: number) : Observable<BaseAction> => {\r\n        actionDefId = (actionDefId == null ? <number><any>\"\" : actionDefId);\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        modifier = (modifier == null ? <number><any>\"\" : modifier);\r\n        attackId = (attackId == null ? <number><any>\"\" : attackId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/ProposeAction?actionDefId=${actionDefId}&whomId=${whomId}&modifier=${modifier}&attackId=${attackId}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, actionDefId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/ProposeActionContinue?previousActionId=${previousActionId}&whomId=${whomId}\r\n\r\n\t//public proposeActionContinue = (previousActionId: number, whomId: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.proposeActionContinueObserve(previousActionId, whomId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic proposeActionContinueAsync = (previousActionId: number, whomId: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.proposeActionContinue(previousActionId, whomId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic proposeActionContinue = (previousActionId: number, whomId: number) : Observable<BaseAction> => {\r\n        previousActionId = (previousActionId == null ? <number><any>\"\" : previousActionId);\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/ProposeActionContinue?previousActionId=${previousActionId}&whomId=${whomId}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, previousActionId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/AddBleedEffect?whomId=${whomId}&bleedRate=${bleedRate}\r\n\r\n\t//public addBleedEffect = (whomId: number, bleedRate: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.addBleedEffectObserve(whomId, bleedRate).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic addBleedEffectAsync = (whomId: number, bleedRate: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.addBleedEffect(whomId, bleedRate)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic addBleedEffect = (whomId: number, bleedRate: number) : Observable<BaseAction> => {\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        bleedRate = (bleedRate == null ? <number><any>\"\" : bleedRate);\r\n        \r\n            var _Url = `api/v${version}/Encounter/AddBleedEffect?whomId=${whomId}&bleedRate=${bleedRate}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, whomId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/AddCriticalEffect?whomId=${whomId}&rounds=${rounds}\r\n\r\n\t//public addCriticalEffect = (whomId: number, crit: CriticalEffect, rounds: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.addCriticalEffectObserve(whomId, crit, rounds).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic addCriticalEffectAsync = (whomId: number, crit: CriticalEffect, rounds: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.addCriticalEffect(whomId, crit, rounds)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic addCriticalEffect = (whomId: number, crit: CriticalEffect, rounds: number) : Observable<BaseAction> => {\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        crit = (crit == null ? <CriticalEffect><any>\"\" : crit);\r\n        rounds = (rounds == null ? <number><any>\"\" : rounds);\r\n        \r\n            var _Url = `api/v${version}/Encounter/AddCriticalEffect?whomId=${whomId}&rounds=${rounds}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, whomId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/AddPsychicEffect?whomId=${whomId}&psychicLevel=${psychicLevel}\r\n\r\n\t//public addPsychicEffect = (whomId: number, psychicLevel: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.addPsychicEffectObserve(whomId, psychicLevel).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic addPsychicEffectAsync = (whomId: number, psychicLevel: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.addPsychicEffect(whomId, psychicLevel)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic addPsychicEffect = (whomId: number, psychicLevel: number) : Observable<BaseAction> => {\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        psychicLevel = (psychicLevel == null ? <number><any>\"\" : psychicLevel);\r\n        \r\n            var _Url = `api/v${version}/Encounter/AddPsychicEffect?whomId=${whomId}&psychicLevel=${psychicLevel}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, whomId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/AddSpellEffect?effectedActorId=${effectedActorId}&casterId=${casterId}&spellName=${encodeURIComponent(spellName)}&rounds=${rounds}&hastePercent=${hastePercent}\r\n\r\n\t//public addSpellEffect = (effectedActorId: number, casterId: number, spellName: string, rounds: number, hastePercent: number, callback: (data: BaseAction)=>void) : void => {\r\n\t//\tthis.addSpellEffectObserve(effectedActorId, casterId, spellName, rounds, hastePercent).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic addSpellEffectAsync = (effectedActorId: number, casterId: number, spellName: string, rounds: number, hastePercent: number) : Promise<BaseAction> => {\r\n\r\n        return new Promise<BaseAction>((resolve, reject) => {\r\n            this.addSpellEffect(effectedActorId, casterId, spellName, rounds, hastePercent)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic addSpellEffect = (effectedActorId: number, casterId: number, spellName: string, rounds: number, hastePercent: number) : Observable<BaseAction> => {\r\n        effectedActorId = (effectedActorId == null ? <number><any>\"\" : effectedActorId);\r\n        casterId = (casterId == null ? <number><any>\"\" : casterId);\r\n        spellName = (spellName == null ? <string><any>\"\" : spellName);\r\n        rounds = (rounds == null ? <number><any>\"\" : rounds);\r\n        hastePercent = (hastePercent == null ? <number><any>\"\" : hastePercent);\r\n        \r\n            var _Url = `api/v${version}/Encounter/AddSpellEffect?effectedActorId=${effectedActorId}&casterId=${casterId}&spellName=${encodeURIComponent(spellName)}&rounds=${rounds}&hastePercent=${hastePercent}`;\r\n\r\n            return this._httpClient.post<BaseAction>(_Url, effectedActorId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new BaseAction(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Encounter/RemoveEffect/${actionId}\r\n\r\n\t//public removeEffect = (actionId: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.removeEffectObserve(actionId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic removeEffectAsync = (actionId: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.removeEffect(actionId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic removeEffect = (actionId: number) : Observable<void> => {\r\n        actionId = (actionId == null ? <number><any>\"\" : actionId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/RemoveEffect/${actionId}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Encounter/RemoveActor/${actorId}\r\n\r\n\t//public removeActor = (actorId: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.removeActorObserve(actorId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic removeActorAsync = (actorId: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.removeActor(actorId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic removeActor = (actorId: number) : Observable<void> => {\r\n        actorId = (actorId == null ? <number><any>\"\" : actorId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/RemoveActor/${actorId}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Encounter/RemoveAction/${actionId}\r\n\r\n\t//public removeAction = (actionId: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.removeActionObserve(actionId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic removeActionAsync = (actionId: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.removeAction(actionId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic removeAction = (actionId: number) : Observable<void> => {\r\n        actionId = (actionId == null ? <number><any>\"\" : actionId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/RemoveAction/${actionId}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Encounter/RemoveCriticalsFromActor/${whomId}?count=${count}\r\n\r\n\t//public removeCriticalsFromActor = (whomId: number, count: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.removeCriticalsFromActorObserve(whomId, count).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic removeCriticalsFromActorAsync = (whomId: number, count: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.removeCriticalsFromActor(whomId, count)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic removeCriticalsFromActor = (whomId: number, count: number) : Observable<void> => {\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        count = (count == null ? <number><any>\"\" : count);\r\n        \r\n            var _Url = `api/v${version}/Encounter/RemoveCriticalsFromActor/${whomId}?count=${count}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/DoProposedAction/${whomId}\r\n\r\n\t//public doProposedAction = (whomId: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.doProposedActionObserve(whomId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic doProposedActionAsync = (whomId: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.doProposedAction(whomId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic doProposedAction = (whomId: number) : Observable<void> => {\r\n        whomId = (whomId == null ? <number><any>\"\" : whomId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/DoProposedAction/${whomId}`;\r\n\r\n            return this._httpClient.post<void>(_Url, whomId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/SetModifierOnAction?actionId=${actionId}&modifier=${modifier}\r\n\r\n\t//public setModifierOnAction = (actionId: number, modifier: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.setModifierOnActionObserve(actionId, modifier).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic setModifierOnActionAsync = (actionId: number, modifier: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.setModifierOnAction(actionId, modifier)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic setModifierOnAction = (actionId: number, modifier: number) : Observable<void> => {\r\n        actionId = (actionId == null ? <number><any>\"\" : actionId);\r\n        modifier = (modifier == null ? <number><any>\"\" : modifier);\r\n        \r\n            var _Url = `api/v${version}/Encounter/SetModifierOnAction?actionId=${actionId}&modifier=${modifier}`;\r\n\r\n            return this._httpClient.post<void>(_Url, actionId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Encounter/SetAttackOnAction?actionId=${actionId}&attackId=${attackId}\r\n\r\n\t//public setAttackOnAction = (actionId: number, attackId: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.setAttackOnActionObserve(actionId, attackId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic setAttackOnActionAsync = (actionId: number, attackId: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.setAttackOnAction(actionId, attackId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic setAttackOnAction = (actionId: number, attackId: number) : Observable<void> => {\r\n        actionId = (actionId == null ? <number><any>\"\" : actionId);\r\n        attackId = (attackId == null ? <number><any>\"\" : attackId);\r\n        \r\n            var _Url = `api/v${version}/Encounter/SetAttackOnAction?actionId=${actionId}&attackId=${attackId}`;\r\n\r\n            return this._httpClient.post<void>(_Url, actionId)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { Game } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GamesRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Games/GetGames\r\n\r\n\t//public getGames = (, callback: (data: Game[])=>void) : void => {\r\n\t//\tthis.getGamesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getGamesAsync = () : Promise<Game[]> => {\r\n\r\n        return new Promise<Game[]>((resolve, reject) => {\r\n            this.getGames()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getGames = () : Observable<Game[]> => {\r\n        \r\n            var _Url = `api/v${version}/Games/GetGames`;\r\n\r\n            return this._httpClient.get<Game[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Game(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Games/GetGame/${id}\r\n\r\n\t//public getGame = (id: number, callback: (data: Game)=>void) : void => {\r\n\t//\tthis.getGameObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getGameAsync = (id: number) : Promise<Game> => {\r\n\r\n        return new Promise<Game>((resolve, reject) => {\r\n            this.getGame(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getGame = (id: number) : Observable<Game> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Games/GetGame/${id}`;\r\n\r\n            return this._httpClient.get<Game>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Game(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Games/SaveGame\r\n\r\n\t//public saveGame = (game: Game, callback: (data: Game)=>void) : void => {\r\n\t//\tthis.saveGameObserve(game).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic saveGameAsync = (game: Game) : Promise<Game> => {\r\n\r\n        return new Promise<Game>((resolve, reject) => {\r\n            this.saveGame(game)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic saveGame = (game: Game) : Observable<Game> => {\r\n        game = (game == null ? <Game><any>\"\" : game);\r\n        \r\n            var _Url = `api/v${version}/Games/SaveGame`;\r\n\r\n            return this._httpClient.post<Game>(_Url, game)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new Game(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Games/DeleteGame/${id}\r\n\r\n\t//public deleteGame = (id: number, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteGameObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteGameAsync = (id: number) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.deleteGame(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic deleteGame = (id: number) : Observable<void> => {\r\n        id = (id == null ? <number><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Games/DeleteGame/${id}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { ActionGroup } from '@/entities';\nimport { ActionDefinition } from '@/entities';\nimport { ConstitutionBonusChart } from '@/entities';\nimport { CriticalCode } from '@/entities';\nimport { CriticalIgnore } from '@/entities';\nimport { IQ } from '@/entities';\nimport { LevelChart } from '@/entities';\nimport { Outlook } from '@/entities';\nimport { Pace } from '@/entities';\nimport { SizeRating } from '@/entities';\nimport { SpeedChart } from '@/entities';\nimport { AttackType } from '@/entities';\nimport { CriticalType } from '@/entities';\nimport { WeaponType } from '@/entities';\nimport { Book } from '@/entities';\nimport { PsychicRefractoryPeriodEntry } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ReferenceRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Reference/getActionGroups\r\n\r\n\t//public getActionGroups = (, callback: (data: ActionGroup[])=>void) : void => {\r\n\t//\tthis.getActionGroupsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActionGroupsAsync = () : Promise<ActionGroup[]> => {\r\n\r\n        return new Promise<ActionGroup[]>((resolve, reject) => {\r\n            this.getActionGroups()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActionGroups = () : Observable<ActionGroup[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getActionGroups`;\r\n\r\n            return this._httpClient.get<ActionGroup[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new ActionGroup(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getActions?groupId=${groupId}\r\n\r\n\t//public getActions = (groupId: number, callback: (data: ActionDefinition[])=>void) : void => {\r\n\t//\tthis.getActionsObserve(groupId).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getActionsAsync = (groupId: number) : Promise<ActionDefinition[]> => {\r\n\r\n        return new Promise<ActionDefinition[]>((resolve, reject) => {\r\n            this.getActions(groupId)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getActions = (groupId: number) : Observable<ActionDefinition[]> => {\r\n        groupId = (groupId == null ? <number><any>\"\" : groupId);\r\n        \r\n            var _Url = `api/v${version}/Reference/getActions?groupId=${groupId}`;\r\n\r\n            return this._httpClient.get<ActionDefinition[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new ActionDefinition(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getConstitutionBonusCharts\r\n\r\n\t//public getConstitutionBonusCharts = (, callback: (data: ConstitutionBonusChart[])=>void) : void => {\r\n\t//\tthis.getConstitutionBonusChartsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getConstitutionBonusChartsAsync = () : Promise<ConstitutionBonusChart[]> => {\r\n\r\n        return new Promise<ConstitutionBonusChart[]>((resolve, reject) => {\r\n            this.getConstitutionBonusCharts()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getConstitutionBonusCharts = () : Observable<ConstitutionBonusChart[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getConstitutionBonusCharts`;\r\n\r\n            return this._httpClient.get<ConstitutionBonusChart[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new ConstitutionBonusChart(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getCriticalCodes\r\n\r\n\t//public getCriticalCodes = (, callback: (data: CriticalCode[])=>void) : void => {\r\n\t//\tthis.getCriticalCodesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCriticalCodesAsync = () : Promise<CriticalCode[]> => {\r\n\r\n        return new Promise<CriticalCode[]>((resolve, reject) => {\r\n            this.getCriticalCodes()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCriticalCodes = () : Observable<CriticalCode[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getCriticalCodes`;\r\n\r\n            return this._httpClient.get<CriticalCode[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new CriticalCode(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getCriticalIgnores\r\n\r\n\t//public getCriticalIgnores = (, callback: (data: CriticalIgnore[])=>void) : void => {\r\n\t//\tthis.getCriticalIgnoresObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCriticalIgnoresAsync = () : Promise<CriticalIgnore[]> => {\r\n\r\n        return new Promise<CriticalIgnore[]>((resolve, reject) => {\r\n            this.getCriticalIgnores()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCriticalIgnores = () : Observable<CriticalIgnore[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getCriticalIgnores`;\r\n\r\n            return this._httpClient.get<CriticalIgnore[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new CriticalIgnore(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getIQs\r\n\r\n\t//public getIQs = (, callback: (data: IQ[])=>void) : void => {\r\n\t//\tthis.getIQsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getIQsAsync = () : Promise<IQ[]> => {\r\n\r\n        return new Promise<IQ[]>((resolve, reject) => {\r\n            this.getIQs()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getIQs = () : Observable<IQ[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getIQs`;\r\n\r\n            return this._httpClient.get<IQ[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new IQ(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getLevelCharts\r\n\r\n\t//public getLevelCharts = (, callback: (data: LevelChart[])=>void) : void => {\r\n\t//\tthis.getLevelChartsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getLevelChartsAsync = () : Promise<LevelChart[]> => {\r\n\r\n        return new Promise<LevelChart[]>((resolve, reject) => {\r\n            this.getLevelCharts()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getLevelCharts = () : Observable<LevelChart[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getLevelCharts`;\r\n\r\n            return this._httpClient.get<LevelChart[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new LevelChart(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getOutlooks\r\n\r\n\t//public getOutlooks = (, callback: (data: Outlook[])=>void) : void => {\r\n\t//\tthis.getOutlooksObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getOutlooksAsync = () : Promise<Outlook[]> => {\r\n\r\n        return new Promise<Outlook[]>((resolve, reject) => {\r\n            this.getOutlooks()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getOutlooks = () : Observable<Outlook[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getOutlooks`;\r\n\r\n            return this._httpClient.get<Outlook[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Outlook(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getPaces\r\n\r\n\t//public getPaces = (, callback: (data: Pace[])=>void) : void => {\r\n\t//\tthis.getPacesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getPacesAsync = () : Promise<Pace[]> => {\r\n\r\n        return new Promise<Pace[]>((resolve, reject) => {\r\n            this.getPaces()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getPaces = () : Observable<Pace[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getPaces`;\r\n\r\n            return this._httpClient.get<Pace[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Pace(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getSizeRatings\r\n\r\n\t//public getSizeRatings = (, callback: (data: SizeRating[])=>void) : void => {\r\n\t//\tthis.getSizeRatingsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getSizeRatingsAsync = () : Promise<SizeRating[]> => {\r\n\r\n        return new Promise<SizeRating[]>((resolve, reject) => {\r\n            this.getSizeRatings()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getSizeRatings = () : Observable<SizeRating[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getSizeRatings`;\r\n\r\n            return this._httpClient.get<SizeRating[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new SizeRating(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getSpeedCharts\r\n\r\n\t//public getSpeedCharts = (, callback: (data: SpeedChart[])=>void) : void => {\r\n\t//\tthis.getSpeedChartsObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getSpeedChartsAsync = () : Promise<SpeedChart[]> => {\r\n\r\n        return new Promise<SpeedChart[]>((resolve, reject) => {\r\n            this.getSpeedCharts()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getSpeedCharts = () : Observable<SpeedChart[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getSpeedCharts`;\r\n\r\n            return this._httpClient.get<SpeedChart[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new SpeedChart(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getAttackTypes\r\n\r\n\t//public getAttackTypes = (, callback: (data: AttackType[])=>void) : void => {\r\n\t//\tthis.getAttackTypesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAttackTypesAsync = () : Promise<AttackType[]> => {\r\n\r\n        return new Promise<AttackType[]>((resolve, reject) => {\r\n            this.getAttackTypes()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAttackTypes = () : Observable<AttackType[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getAttackTypes`;\r\n\r\n            return this._httpClient.get<AttackType[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new AttackType(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getCriticalTypes\r\n\r\n\t//public getCriticalTypes = (, callback: (data: CriticalType[])=>void) : void => {\r\n\t//\tthis.getCriticalTypesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getCriticalTypesAsync = () : Promise<CriticalType[]> => {\r\n\r\n        return new Promise<CriticalType[]>((resolve, reject) => {\r\n            this.getCriticalTypes()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getCriticalTypes = () : Observable<CriticalType[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getCriticalTypes`;\r\n\r\n            return this._httpClient.get<CriticalType[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new CriticalType(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getWeaponTypes\r\n\r\n\t//public getWeaponTypes = (, callback: (data: WeaponType[])=>void) : void => {\r\n\t//\tthis.getWeaponTypesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getWeaponTypesAsync = () : Promise<WeaponType[]> => {\r\n\r\n        return new Promise<WeaponType[]>((resolve, reject) => {\r\n            this.getWeaponTypes()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getWeaponTypes = () : Observable<WeaponType[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getWeaponTypes`;\r\n\r\n            return this._httpClient.get<WeaponType[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new WeaponType(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getBooks\r\n\r\n\t//public getBooks = (, callback: (data: Book[])=>void) : void => {\r\n\t//\tthis.getBooksObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getBooksAsync = () : Promise<Book[]> => {\r\n\r\n        return new Promise<Book[]>((resolve, reject) => {\r\n            this.getBooks()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getBooks = () : Observable<Book[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getBooks`;\r\n\r\n            return this._httpClient.get<Book[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new Book(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Reference/getPsychicRefractoryPeriodEntries\r\n\r\n\t//public getPsychicRefractoryPeriodEntries = (, callback: (data: PsychicRefractoryPeriodEntry[])=>void) : void => {\r\n\t//\tthis.getPsychicRefractoryPeriodEntriesObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getPsychicRefractoryPeriodEntriesAsync = () : Promise<PsychicRefractoryPeriodEntry[]> => {\r\n\r\n        return new Promise<PsychicRefractoryPeriodEntry[]>((resolve, reject) => {\r\n            this.getPsychicRefractoryPeriodEntries()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getPsychicRefractoryPeriodEntries = () : Observable<PsychicRefractoryPeriodEntry[]> => {\r\n        \r\n            var _Url = `api/v${version}/Reference/getPsychicRefractoryPeriodEntries`;\r\n\r\n            return this._httpClient.get<PsychicRefractoryPeriodEntry[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new PsychicRefractoryPeriodEntry(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    \r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingsRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { AlertService } from '@/services/Alert.service';\r\n\r\n    import * as Enums from '@/entities/EnumDefinitions'\r\n    import { ApplicationUser } from '@/entities';\nimport { AuthenticateModel } from '@/entities';\nimport { RegisterModel } from '@/entities';\nimport { UpdateModel } from '@/entities';\r\n\r\nvar version = \"1\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsersRepository {\r\n\r\n    constructor(private _httpClient: HttpClient, private _alertService: AlertService) { }\r\n    \r\n    // get: api/v${version}/Users/CurrentUser\r\n\r\n\t//public currentUser = (, callback: (data: ApplicationUser)=>void) : void => {\r\n\t//\tthis.currentUserObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic currentUserAsync = () : Promise<ApplicationUser> => {\r\n\r\n        return new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.currentUser()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic currentUser = () : Observable<ApplicationUser> => {\r\n        \r\n            var _Url = `api/v${version}/Users/CurrentUser`;\r\n\r\n            return this._httpClient.get<ApplicationUser>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new ApplicationUser(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Users/logout\r\n\r\n\t//public logout = (, callback: (data: boolean)=>void) : void => {\r\n\t//\tthis.logoutObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic logoutAsync = () : Promise<boolean> => {\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.logout()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic logout = () : Observable<boolean> => {\r\n        \r\n            var _Url = `api/v${version}/Users/logout`;\r\n\r\n            return this._httpClient.post<boolean>(_Url, null)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Users/authenticate\r\n\r\n\t//public authenticate = (model: AuthenticateModel, callback: (data: ApplicationUser)=>void) : void => {\r\n\t//\tthis.authenticateObserve(model).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic authenticateAsync = (model: AuthenticateModel) : Promise<ApplicationUser> => {\r\n\r\n        return new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.authenticate(model)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic authenticate = (model: AuthenticateModel) : Observable<ApplicationUser> => {\r\n        model = (model == null ? <AuthenticateModel><any>\"\" : model);\r\n        \r\n            var _Url = `api/v${version}/Users/authenticate`;\r\n\r\n            return this._httpClient.post<ApplicationUser>(_Url, model)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new ApplicationUser(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Users/register\r\n\r\n\t//public register = (model: RegisterModel, callback: (data: ApplicationUser)=>void) : void => {\r\n\t//\tthis.registerObserve(model).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic registerAsync = (model: RegisterModel) : Promise<ApplicationUser> => {\r\n\r\n        return new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.register(model)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic register = (model: RegisterModel) : Observable<ApplicationUser> => {\r\n        model = (model == null ? <RegisterModel><any>\"\" : model);\r\n        \r\n            var _Url = `api/v${version}/Users/register`;\r\n\r\n            return this._httpClient.post<ApplicationUser>(_Url, model)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new ApplicationUser(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Users/GetAll\r\n\r\n\t//public getAll = (, callback: (data: ApplicationUser[])=>void) : void => {\r\n\t//\tthis.getAllObserve().subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getAllAsync = () : Promise<ApplicationUser[]> => {\r\n\r\n        return new Promise<ApplicationUser[]>((resolve, reject) => {\r\n            this.getAll()\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getAll = () : Observable<ApplicationUser[]> => {\r\n        \r\n            var _Url = `api/v${version}/Users/GetAll`;\r\n\r\n            return this._httpClient.get<ApplicationUser[]>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = data.map((dt) => Object.assign(new ApplicationUser(), dt));\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // get: api/v${version}/Users/GetById/${encodeURIComponent(id)}\r\n\r\n\t//public getById = (id: string, callback: (data: ApplicationUser)=>void) : void => {\r\n\t//\tthis.getByIdObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic getByIdAsync = (id: string) : Promise<ApplicationUser> => {\r\n\r\n        return new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.getById(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic getById = (id: string) : Observable<ApplicationUser> => {\r\n        id = (id == null ? <string><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Users/GetById/${encodeURIComponent(id)}`;\r\n\r\n            return this._httpClient.get<ApplicationUser>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new ApplicationUser(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // put: api/v${version}/Users/Update/${encodeURIComponent(id)}\r\n\r\n\t//public update = (id: string, model: UpdateModel, callback: (data: ApplicationUser)=>void) : void => {\r\n\t//\tthis.updateObserve(id, model).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic updateAsync = (id: string, model: UpdateModel) : Promise<ApplicationUser> => {\r\n\r\n        return new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.update(id, model)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic update = (id: string, model: UpdateModel) : Observable<ApplicationUser> => {\r\n        id = (id == null ? <string><any>\"\" : id);\r\n        model = (model == null ? <UpdateModel><any>\"\" : model);\r\n        \r\n            var _Url = `api/v${version}/Users/Update/${encodeURIComponent(id)}`;\r\n\r\n            return this._httpClient.put<ApplicationUser>(_Url, id)\r\n                .pipe(\r\n                        map((data) => {\r\n                            if (data != null) data = Object.assign(new ApplicationUser(), data);\r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // delete: api/v${version}/Users/Delete/${encodeURIComponent(id)}\r\n\r\n\t//public delete = (id: string, callback: (data: void)=>void) : void => {\r\n\t//\tthis.deleteObserve(id).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic deleteAsync = (id: string) : Promise<void> => {\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.delete(id)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic delete = (id: string) : Observable<void> => {\r\n        id = (id == null ? <string><any>\"\" : id);\r\n        \r\n            var _Url = `api/v${version}/Users/Delete/${encodeURIComponent(id)}`;\r\n\r\n            return this._httpClient.delete<void>(_Url)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // post: api/v${version}/Users/ForgotPassword?email=${encodeURIComponent(email)}\r\n\r\n\t//public forgotPassword = (email: string, callback: (data: boolean)=>void) : void => {\r\n\t//\tthis.forgotPasswordObserve(email).subscribe(response => callback(response));\r\n\t//}\r\n\r\n\tpublic forgotPasswordAsync = (email: string) : Promise<boolean> => {\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.forgotPassword(email)\r\n            .subscribe((res) => {\r\n                    resolve(res);\r\n                }, (error: string) => {\r\n                    this._alertService.error(error);\r\n                    resolve(null);\r\n                });\r\n\r\n        });\r\n\t}\r\n\r\n\tpublic forgotPassword = (email: string) : Observable<boolean> => {\r\n        email = (email == null ? <string><any>\"\" : email);\r\n        \r\n            var _Url = `api/v${version}/Users/ForgotPassword?email=${encodeURIComponent(email)}`;\r\n\r\n            return this._httpClient.post<boolean>(_Url, email)\r\n                .pipe(\r\n                        map((data) => {\r\n                            \r\n                            return data;\r\n                        }), \r\n                        catchError(this.handleError)\r\n                );\r\n\t};\r\n\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        \r\n        //debugger;\r\n        console.debug(\"handleError:\" + error);\r\n        //console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.message) {\r\n            customError = error.message; // error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return throwError(customError || 'Server error');\r\n        //return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\nexport * from \"./Actions.repository\";\r\nexport * from \"./Actors.repository\";\r\nexport * from \"./Characters.repository\";\r\nexport * from \"./Combat.repository\";\r\nexport * from \"./Creatures.repository\";\r\nexport * from \"./CriticalEffects.repository\";\r\nexport * from \"./Encounter.repository\";\r\nexport * from \"./Games.repository\";\r\nexport * from \"./Reference.repository\";\r\nexport * from \"./Settings.repository\";\r\nexport * from \"./Users.repository\";\r\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport '@/_helpers/DateEx';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        message = (new Date()).formatDate() + \" \" + (new Date()).formatTime() + \" - \" + message;\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        message = (new Date()).formatDate() + \" \" + (new Date()).formatTime() + \" - \" + message;\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, concat, from, Observable, Subscriber, TeardownLogic } from 'rxjs';\r\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\r\n//import { User, UserManager, WebStorageStateStore } from 'oidc-client';\r\n\r\nimport { UsersRepository } from '@/repositories';\r\nimport { AuthenticateModel, RegisterModel } from '@/entities';\r\nimport { ApplicationUser } from '@/entities';\r\nimport { delay } from 'rxjs/operators';\r\n//import { AuthorizeService, AuthenticationResultStatus } from '../api-authorization/authorize.service';\r\n\r\n\r\nexport interface IUser {\r\n  name: string;\r\n}\r\n\r\nexport const ApplicationName = 'CEATSiiApp';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n\r\n    //private userManager: UserManager;\r\n    private currentUserSubject: BehaviorSubject<ApplicationUser>;\r\n    public currentUser: Observable<ApplicationUser>;\r\n\r\n\r\n    constructor(private http: HttpClient,\r\n        private userRepository: UsersRepository) {\r\n        this.currentUserSubject = new BehaviorSubject<ApplicationUser>(null);\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n\r\n        ////debugger;\r\n        this.refreshUserAsync();\r\n    }\r\n    public isAuthenticated(): Observable<boolean> {\r\n        return this.currentUser.pipe(map(u => !!u));\r\n    }\r\n    public getAccessToken(): string {\r\n        //var obs = new Observable<string>();\r\n        //obs.\r\n        //obs.next()\r\n        return \"\";\r\n      }\r\n\r\n    public async currentUserAsync():Promise<ApplicationUser> {\r\n        var p = new Promise<ApplicationUser>((resolve, reject) => {\r\n            this.currentUser.subscribe((user) => {\r\n                resolve(user);\r\n            });\r\n        });\r\n        return p;\r\n    }\r\n\r\n    public async refreshUserAsync(): Promise<void> {\r\n        await delay(10);\r\n\r\n        var user = await this.userRepository.currentUserAsync();\r\n        //localStorage.setItem('currentUser', JSON.stringify(user));\r\n        //if (user) {\r\n        //    await this.loginAuthAsync();\r\n        //} else {\r\n        //    //await this.logoutAuthAsync();\r\n        //}\r\n\r\n        this.currentUserSubject.next(user);\r\n    }\r\n\r\n\r\n    public get currentUserValue(): ApplicationUser {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    async registerAsync(data: RegisterModel): Promise<ApplicationUser> {\r\n\r\n        var user = await this.userRepository.registerAsync(data);\r\n        this.currentUserSubject.next(user);\r\n\r\n        return user;\r\n\r\n    }\r\n\r\n    async loginAsync(username: string, password: string): Promise<ApplicationUser> {\r\n        var auth = new AuthenticateModel();\r\n        auth.username = username;\r\n        auth.password = password;\r\n        var user = await this.userRepository.authenticateAsync(auth);\r\n        //localStorage.setItem('currentUser', JSON.stringify(user));\r\n        //if (user) {\r\n        //    await this.loginAuthAsync();\r\n        //} else {\r\n        //    //await this.logoutAuthAsync();\r\n        //}\r\n\r\n\r\n        this.currentUserSubject.next(user);\r\n\r\n        return user;\r\n        //return null;\r\n    }\r\n\r\n    //private async loginAuthAsync(): Promise<void> {\r\n\r\n    //    const state = {};\r\n    //    //const result = await this.authorizeService.signIn(state);\r\n    //    const url = window.location.href;\r\n    //    const result = await this.authorizeService.completeSignIn(url);\r\n\r\n    //    switch (result.status) {\r\n    //        case AuthenticationResultStatus.Redirect:\r\n    //            //debugger;\r\n    //            break;\r\n    //        case AuthenticationResultStatus.Success:\r\n    //            //await this.navigateToReturnUrl(returnUrl);\r\n    //            break;\r\n    //        case AuthenticationResultStatus.Fail:\r\n    //            //await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\r\n    //            //  queryParams: { [QueryParameterNames.Message]: result.message }\r\n    //            //});\r\n    //            //debugger;\r\n    //            break;\r\n    //        default:\r\n    //            //debugger;\r\n    //            throw new Error(`Invalid status result ${(result as any).status}.`);\r\n    //    }\r\n    //}\r\n    //private async logoutAuthAsync(): Promise<void> {\r\n\r\n    //    const state = {};\r\n    //    const result = await this.authorizeService.signOut(state);\r\n    //    switch (result.status) {\r\n    //        case AuthenticationResultStatus.Redirect:\r\n    //            //debugger;\r\n    //            break;\r\n    //        case AuthenticationResultStatus.Success:\r\n    //            //await this.navigateToReturnUrl(returnUrl);\r\n    //            break;\r\n    //        case AuthenticationResultStatus.Fail:\r\n    //            //debugger;\r\n    //            //this.message.next(result.message);\r\n    //            break;\r\n    //        default:\r\n    //            //debugger;\r\n    //            throw new Error('Invalid authentication result status.');\r\n    //    }\r\n    //}\r\n\r\n    async logoutAsync(): Promise<void> {\r\n        this.userRepository.logout();\r\n        // remove user from local storage and set current user to null\r\n        //localStorage.removeItem('currentUser');\r\n\r\n        //await this.logoutAuthAsync();\r\n\r\n\r\n\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions'\r\nimport { ActionDefinition, Attack, Game, Message } from '@/entities';\r\nimport { Actor } from '@/entities';\r\nimport { BaseAction } from '@/entities';\r\nimport { GamesRepository } from '@/repositories';\r\nimport { ActorsRepository } from '@/repositories';\r\nimport { ActionsRepository } from '@/repositories';\r\nimport { MySettings } from '@/entities';\r\nimport { Character } from '@/entities';\r\nimport { Creature } from '@/entities';\r\nimport { EncounterRepository } from '@/repositories';\r\nimport { AuthenticationService } from './Authentication.service';\r\nimport { EncounterHubService } from './EncounterHub.service';\r\n\r\nimport ResponseEnum = EnumDefinitions.ResponseEnum;\r\nimport GameType = EnumDefinitions.GameType;\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport ActorActionType = EnumDefinitions.ActorActionType;\r\nimport CharacterType = EnumDefinitions.CharacterType;\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\nimport { MutexLock } from '@/_helpers/Lock';\r\nimport { RecurringTask, whenTrue } from '@/_helpers/Tasks';\r\nimport { pipe } from 'rxjs';\r\nimport { ReferencesService, treeEntry } from './References.service';\r\nimport { AlertService } from './Alert.service';\r\nimport \"@/_helpers/LinqToJs\";\r\n\r\n@Injectable()\r\nexport class EncounterService {\r\n\r\n    private _currentGame: Game;\r\n    public allActors: Array<Actor> = new Array<Actor>();\r\n    public allActions: Array<BaseAction> = new Array<BaseAction>();\r\n\r\n    public allMessages: Array<Message> = new Array<Message>();\r\n\r\n    private refreshLock = new MutexLock(30000);\r\n\r\n    private _currentActionTree: treeEntry = null;\r\n\r\n    //public selectedAction: BaseAction;\r\n\r\n    //private _selectedActor: Actor;\r\n    //private _selectedAction: BaseAction;\r\n\r\n    private _timedService: RecurringTask = new RecurringTask(async () => {\r\n        this._alertService.success(\"Refreshing List\");\r\n        await this.refreshAsync();\r\n        this._alertService.success(\"List Refreshed\");\r\n    }, 60000, 120000);\r\n\r\n\r\n\r\n    constructor(private authService: AuthenticationService,\r\n        private gameRepo: GamesRepository,\r\n        private actorRepo: ActorsRepository,\r\n        private actionRepo: ActionsRepository,\r\n        private encounterRepo: EncounterRepository,\r\n        private encounterHubService: EncounterHubService,\r\n        private referenceService: ReferencesService,\r\n        private _alertService: AlertService    ) {\r\n\r\n        //authService.currentUser.subscribe((user) => {\r\n        //    ////debugger;\r\n        //    if (user != null) {\r\n        //        this.refresh();\r\n        //    } else {\r\n        //        this._currentGame = null;\r\n        //        this.actors = new Array<Actor>();\r\n        //        this.actions = new Array<BaseAction>();\r\n        //        this._selectedActor = null;\r\n        //        this._selectedAction = null;\r\n        //    }\r\n        //});\r\n\r\n\r\n\r\n        this.init();\r\n\r\n    }\r\n\r\n    async init(): Promise<void> {\r\n        await this.refreshAsync();\r\n\r\n        await this.setupEventsAsync();\r\n\r\n        //await this.refreshAsync();\r\n\r\n        //debugger;\r\n        this._timedService.start();\r\n\r\n        var cat = await this.currentActionTreeAsync();\r\n    }\r\n\r\n    get isGM(): boolean {\r\n        if (this.authService.currentUserValue != null && this.currentGame != null) {\r\n            return this.authService.currentUserValue.id == this.currentGame.gM_ID;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get isPlayer(): boolean {\r\n        if (this.authService.currentUserValue != null && this.currentGame != null) {\r\n            return this.authService.currentUserValue.id != this.currentGame.gM_ID;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get isViewOnly(): boolean {\r\n        return this.authService.currentUserValue == null;\r\n    }\r\n\r\n    get viewType(): ViewTypeEnum {\r\n        if (this.isViewOnly) {\r\n            return ViewTypeEnum.Overview;\r\n        }\r\n        if (this.isPlayer) {\r\n            return ViewTypeEnum.Player;\r\n        }\r\n        if (this.isGM) {\r\n            return ViewTypeEnum.GM;\r\n        }\r\n        return ViewTypeEnum.Overview;\r\n    }\r\n\r\n    get actors(): Array<Actor> {\r\n        var acts = this.allActors;\r\n\r\n\r\n        acts.sortBy((obj) => (obj.currentAction !=null ? obj.currentAction.endTime : 0));\r\n\r\n        //acts.sort((a, b) => {\r\n        //    var CAa = a.currentAction;\r\n        //    var CAb = b.currentAction;\r\n\r\n\r\n\r\n        //    if (CAa == null || CAb == null) {\r\n        //        return 0;\r\n        //    }\r\n        //    if (CAa.endTime < CAb.endTime) {\r\n        //        return -1;\r\n        //    }\r\n        //    if (CAa.endTime > CAb.endTime) {\r\n        //        return 1;\r\n        //    }\r\n        //    return 0;\r\n        //});\r\n\r\n\r\n        return acts;\r\n    }\r\n\r\n    get actions(): Array<BaseAction> {\r\n        var acts = this.allActions;\r\n        //debugger;\r\n        if (this.isViewOnly && acts.length>0) {\r\n\r\n            acts = acts.filter((element, index, array) => {\r\n                //element.actionType == ActionTypeEnum.Next && \r\n                var isCurrent = element.actionType == ActionTypeEnum.Current || element.actionType == ActionTypeEnum.Next || (element.actionType == ActionTypeEnum.Proposed && element.whoIsActing.type == CharacterType.PC);\r\n                var isForPC = element.whoIsActing.type == CharacterType.PC;\r\n                var isEffect = element.actionType == ActionTypeEnum.Effect && element.type != ActorActionType.SpellEffect;\r\n                var isSpellOnNPC = element.actionType == ActionTypeEnum.Effect && element.type == ActorActionType.SpellEffect && element.whoIsActing.type == CharacterType.NPC;\r\n\r\n\r\n                return isCurrent || (isForPC && !isEffect) || (isSpellOnNPC);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        acts.sortBy((obj) => obj.endTime);\r\n\r\n\r\n        if (acts.length > 0) {\r\n            var min = acts[0].endTime;\r\n            var max = acts[acts.length - 1].endTime;\r\n            var range = max - min;\r\n\r\n            acts.forEach((act) => {\r\n                act.leftPercent = (act.endTime - min) / range;\r\n\r\n            });\r\n        }\r\n\r\n\r\n        return acts;\r\n    }\r\n\r\n    //get systemSettings(): MySettings {\r\n    //    return this.settings.settings;\r\n    //}\r\n    //public setGameType(value: GameType) {\r\n    //    this.settings.setGameType(value);\r\n    //}\r\n\r\n    get selectedActions(): Array<BaseAction> {\r\n        this._currentActionTree = null;\r\n        var acts = this.actions.filter(item => item.isSelected);\r\n        return acts || new Array<BaseAction>();\r\n    }\r\n    \r\n    set selectedAction(action: BaseAction) {\r\n        if (action != null) {\r\n            action = this.allActions.find(item => item.id == action.id);\r\n        }\r\n\r\n\r\n        var acts = this.allActions.filter(item => item.isSelected);\r\n        if (acts != null) {\r\n            acts.forEach((act) => {\r\n                act.isSelected = false;\r\n            });\r\n        }\r\n        var ac = this.allActors.find(item => item.isSelected);\r\n        if (ac != null) {\r\n            ac.isSelected = false;\r\n        }\r\n        if (action != null) {\r\n            action.isSelected = true;\r\n            if (action.whoIsActing != null) {\r\n                action.whoIsActing.isSelected = true;\r\n                if (action.actionType == ActionTypeEnum.Current) {\r\n                    this.checkAction(action.whoIsActing);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.currentActionTreeAsync();\r\n\r\n        //this._currentActionTree = await this.referenceService.getActionTreeAsync(ac);\r\n\r\n\r\n        //this.updateActionTreeAsync();\r\n\r\n    }\r\n    get selectedActor(): Actor {\r\n        var ac = this.actors.find(item => item.isSelected);\r\n        return ac || null;\r\n    }\r\n    set selectedActor(actor: Actor) {\r\n        if (actor != null) {\r\n            actor = this.allActors.find(item => item.id == actor.id);\r\n        }\r\n        this._currentActionTree = null;\r\n\r\n        var acts = this.allActions.filter(item => item.isSelected);\r\n        if (acts != null) {\r\n            acts.forEach((act) => {\r\n                act.isSelected = false;\r\n            });\r\n        }\r\n        var ac = this.allActors.find(item => item.isSelected);\r\n        if (ac != null && (actor==null || ac.id != actor.id)) {\r\n\r\n            if (ac.proposedAction != null) {\r\n                this.encounterRepo.removeActionAsync(ac.proposedAction.id);\r\n            }\r\n\r\n            ac.isSelected = false;\r\n        }\r\n        if (actor != null) {\r\n            actor.isSelected = true;\r\n            actor.actions.forEach((action) => {\r\n                if (action.actionType == ActionTypeEnum.Current || action.actionType == ActionTypeEnum.Next || action.actionType == ActionTypeEnum.Proposed) {\r\n                    action.isSelected = true;\r\n                }\r\n            });\r\n            this.checkAction(actor);\r\n        }\r\n\r\n        this.currentActionTreeAsync();\r\n\r\n        //this._currentActionTree = await this.referenceService.getActionTreeAsync(actor);\r\n        //this.updateActionTreeAsync();\r\n    }\r\n\r\n\r\n    async checkAction(actor: Actor): Promise<void> {\r\n        try {\r\n            if (actor != null && actor.proposedAction == null) {\r\n                var action = actor.nextAction || actor.currentAction;\r\n                var act = action;\r\n                if (action.base != null) {\r\n                    act = await this.encounterRepo.proposeActionAsync(action.base.id, actor.id, action.currentModifier, action.currentAttack_ID);\r\n                    this.refreshAction(act);\r\n                } else {\r\n                    act = await this.encounterRepo.proposeActionAsync(this.referenceService.ActionGroups[0].actions[0].id, actor.id, action.currentModifier, action.currentAttack_ID);\r\n                    this.refreshAction(act);\r\n                }\r\n                act = this.allActions.find((a) => a.id == act.id);\r\n\r\n                act.isSelected = true;\r\n            }\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public selectActor(actorId: number) {\r\n        this.selectedActor = this.actors.find((a) => a.id == actorId);\r\n    }\r\n\r\n\r\n\r\n    async currentActionTreeAsync(): Promise<treeEntry> {\r\n        try {\r\n            var actor = this.selectedActor;\r\n            this._currentActionTree = await this.referenceService.getActionTreeAsync(actor);\r\n        }\r\n        catch {\r\n\r\n        }\r\n        return this._currentActionTree;\r\n    }\r\n\r\n    get currentGame(): Game {\r\n        return this._currentGame;\r\n    }\r\n    set currentGame(game: Game) {\r\n        this.selectGameAsync(game.id);\r\n    }\r\n\r\n    public async selectGameAsync(gameId: number): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.setCurrentGameAsync(gameId);\r\n            await this.refreshAsync();\r\n        }\r\n        catch {\r\n\r\n        }\r\n    }\r\n\r\n    private async setupEventsAsync(): Promise<void> {\r\n\r\n        await whenTrue(() => {\r\n            return this.currentGame != null;\r\n        });\r\n\r\n        await this.encounterHubService.registerForGame(this.currentGame.id);\r\n        //\r\n        //this.allActors = this.allActors.filter(item => actors.find((a) => a.id == item.id));\r\n        this.encounterHubService.gameUpdated.subscribe((game: Game) => {\r\n            game = Object.assign(new Game(), game);\r\n            this._currentGame = Object.assign(this._currentGame || {}, game);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actionRemoved.subscribe((action: BaseAction) => {\r\n            action = Object.assign(new BaseAction(), action);\r\n            this.removeAction(action);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actionUpdated.subscribe((action: BaseAction) => {\r\n            action = Object.assign(new BaseAction(), action);\r\n            this.refreshAction(action);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actionsUpdated.subscribe((actions: Array<BaseAction>) => {\r\n            actions = actions.map((act) => Object.assign(new BaseAction(), act));\r\n            this.refreshActions(actions);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actorRemoved.subscribe((actor: Actor) => {\r\n            actor = Object.assign(new Actor(), actor);\r\n            this.removeActor(actor);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actorUpdated.subscribe((actor: Actor) => {\r\n            actor = Object.assign(new Actor(), actor);\r\n            this.refreshActor(actor);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.actorsUpdated.subscribe((actors: Array<Actor>) => {\r\n            actors = actors.map((act) => Object.assign(new Actor(), act));\r\n            this.refreshActors(actors);\r\n            this.setActive();\r\n        });\r\n        this.encounterHubService.messageAdded.subscribe((msg: Message) => {\r\n            msg = Object.assign(new Message(), msg);\r\n            //msg.dateTimeStamp = new Date(msg.dateTimeStamp);\r\n            this.allMessages.insert(msg);\r\n            //this.allMessages.push(msg);\r\n        });\r\n    }\r\n\r\n    private setActive() {\r\n\r\n        this.allActions.forEach((act) => {\r\n            act.isActive = false;\r\n        });\r\n        this.allActors.forEach((act) => {\r\n            act.isActive = false;\r\n        });\r\n\r\n        this.actions[0].whoIsActing.isActive = true;\r\n        this.actions[0].isActive = true;\r\n    }\r\n\r\n    private removeActor(actor: Actor) {\r\n        var baseAct = this.allActors.find((act) => act.id == actor.id);\r\n        baseAct.actions.forEach((action) => {\r\n            this.allActions = this.allActions.filter(item => action.id != item.id);\r\n        });\r\n        this.allActors = this.allActors.filter(item => actor.id != item.id);\r\n    }\r\n\r\n    private refreshActors(actors: Array<Actor>) {\r\n        actors.forEach((act) => {\r\n            this.refreshActor(act);\r\n        });\r\n    }\r\n    private refreshActor(actor: Actor) {\r\n        var origAct = this.allActors.find((a) => a.id == actor.id);\r\n        if (origAct == undefined) {\r\n            origAct = actor;\r\n            //origAct.isActive = false;\r\n            origAct.actions = new Array<BaseAction>();\r\n            origAct.isActive = false;\r\n            origAct.isSelected = false;\r\n            this.allActors.push(origAct);\r\n        }\r\n        Object.assign(origAct, actor);\r\n        //origAct.actions = this.allActions.filter((a) => a.whoIsActing_ID == actor.id);\r\n\r\n    }\r\n    private removeAction(action: BaseAction) {\r\n        this.allActions = this.allActions.filter(item => action.id != item.id);\r\n\r\n        this.actors.forEach((actor) => {\r\n            actor.actions = actor.actions.filter(item => action.id != item.id);\r\n        });\r\n\r\n    }\r\n\r\n    private refreshActions(actions: Array<BaseAction>) {\r\n        actions.forEach((act) => {\r\n            this.refreshAction(act);\r\n        });\r\n    }\r\n    private refreshAction(action: BaseAction) {\r\n        var origAct = this.allActions.find((a) => a.id == action.id);\r\n        if (origAct == undefined) {\r\n            origAct = action;\r\n            origAct.isActive = false;\r\n            origAct.isSelected = false;\r\n            origAct.whoIsActing = this.allActors.find((actor) => actor.id == origAct.whoIsActing_ID);\r\n            origAct.whoIsActing.actions.push(origAct);\r\n            this.allActions.push(origAct);\r\n        }\r\n        Object.assign(origAct, action);\r\n\r\n        //origAct.whoIsActing = this.allActors.find((actor) => actor.id == origAct.whoIsActing_ID);\r\n\r\n        //origAct.whoIsActing.actions = this.allActions.filter((a) => a.whoIsActing_ID == action.whoIsActing_ID);\r\n    }\r\n\r\n\r\n    public async refreshAsync():Promise<void> {\r\n        await this.refreshLock.BeginLock();\r\n        try {\r\n            var game = await this.encounterRepo.getCurrentGameAsync();\r\n            if (game == null) {\r\n                this._alertService.error(\"List Refresh Error: Game returned null\");\r\n                return;\r\n            }\r\n            //debugger;\r\n            if (this._currentGame == null) {\r\n                this._currentGame = game;\r\n            } else {\r\n                this._currentGame = Object.assign(this._currentGame, game);\r\n            }\r\n            if (this._currentGame != null && this._currentGame.id == 0) {\r\n                this._currentGame = null;\r\n            }\r\n            if (this.currentGame != null) {\r\n                //this._currentGame = await this.gameRepo.getGameAsync(this._currentGame.id);\r\n                var tempActors: Array<Actor> = null;\r\n                var tempActions: Array<BaseAction> = null;\r\n\r\n                this.actorRepo.getActorsInGame(this.currentGame.id).subscribe((acts) => {\r\n                    tempActors = acts;\r\n                });\r\n\r\n                this.actionRepo.getActionsInGame(this.currentGame.id).subscribe((acts) => {\r\n                    tempActions = acts;\r\n                });\r\n\r\n\r\n                this.encounterRepo.getMessages().subscribe((msgs) => {\r\n                    //debugger;\r\n                    //msgs.forEach((msg) => {\r\n                    //    msg.dateTimeStamp = new Date(msg.dateTimeStamp);\r\n                    //});\r\n                    this.allMessages = msgs;\r\n                });\r\n                //allMessages\r\n\r\n                await whenTrue(() => {\r\n                    return tempActors != null && tempActions != null;\r\n                });\r\n\r\n                var selectedActor = this.selectedActor;\r\n\r\n                this.refreshActors(tempActors);\r\n                this.refreshActions(tempActions);\r\n\r\n                var removedActions = this.allActions.filter(item => (tempActions.find((a) => a.id == item.id) == undefined));\r\n                removedActions.forEach((a) => this.removeAction(a));\r\n\r\n\r\n                var removedActors = this.allActors.filter(item => (tempActors.find((a) => a.id == item.id) == undefined));\r\n                removedActors.forEach((a) => this.removeActor(a));\r\n\r\n                this.setActive();\r\n\r\n                if (this.isGM) {\r\n                    //debugger;\r\n                    if (selectedActor != null && (this.selectedActor == null || selectedActor.id != this.selectedActor.id)) {\r\n                        this.selectActor(selectedActor.id);\r\n                    }\r\n\r\n                    if (this.selectedActions.length == 0) {\r\n                        this.selectedAction = this.actions[0];\r\n                    }\r\n\r\n                    if (this.selectedActions.length > 0 && this.selectedActor == null) {\r\n\r\n                        this.selectedActor = this.selectedActions[0].whoIsActing;\r\n                    }\r\n                }\r\n            }\r\n        } catch(e) {\r\n            setTimeout(() => {\r\n                this._alertService.error(\"List Refresh Error\");\r\n            }, 1000);\r\n        }\r\n\r\n\r\n        await this.refreshLock.EndLock();\r\n    }\r\n\r\n    public async addCreatureToEncounterAsync(creature: Creature): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.createActorFromCreatureAsync(creature.id);\r\n            await this.refreshAsync();\r\n            this.selectedActor = this.actors[0];\r\n        } catch {\r\n\r\n        }\r\n\r\n        //await this.refresh();\r\n\r\n    }\r\n    public async addCharacterToEncounterAsync(character: Character, rolledInit?: number): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.createActorFromCharacterAsync(character.id, rolledInit);\r\n            await this.refreshAsync();\r\n            this.selectedActor = this.actors[0];\r\n        } catch {\r\n\r\n        }\r\n\r\n        //await this.refresh();\r\n\r\n    }\r\n\r\n    public async moveToNextAsync(): Promise<void> {\r\n        try {\r\n            var result = await this.encounterRepo.moveToNextAsync(false);\r\n            if (result.response == ResponseEnum.DisplayMessage) {\r\n                this._alertService.success(result.message);\r\n            }\r\n            if (result.response == ResponseEnum.AutoAdvance) {\r\n                await this.moveToNextAsync();\r\n                return;\r\n            }\r\n            await this.refreshAsync();\r\n            this.selectedAction = this.actions[0];\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    public async deleteActionAsync(action: BaseAction): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.removeActionAsync(action.id);\r\n            await this.refreshAsync();\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    public async deleteActorAsync(actor: Actor): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.removeActorAsync(actor.id);\r\n            await this.refreshAsync();\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    public async proposeActionAsync(actor: Actor, action: ActionDefinition, attack: Attack = null, modifier: number = 0): Promise<BaseAction> {\r\n        var act: BaseAction = null;\r\n        try {\r\n            act = await this.encounterRepo.proposeActionAsync(action.id, actor.id, modifier, (attack != null ? attack.id : null));\r\n            await this.refreshAsync();\r\n\r\n            act = this.allActions.find((a) => a.id == act.id);\r\n            act.isSelected = true;\r\n        } catch {\r\n\r\n        }\r\n        return act;\r\n    }\r\n\r\n    public async doProposedActionAsync(actor: Actor): Promise<void> {\r\n        try {\r\n            await this.encounterRepo.doProposedActionAsync(actor.id);\r\n            await this.refreshAsync();\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { Actor, BaseAction, Game, Message } from '@/entities';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { whenTrue } from '@/_helpers/Tasks';\r\n\r\n\r\nclass retryPolicy implements signalR.IRetryPolicy {\r\n\r\n    nextRetryDelayInMilliseconds(retryContext: signalR.RetryContext): number {\r\n        return 15000;\r\n    }\r\n\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class EncounterHubService {\r\n    actorRemoved = new EventEmitter<Actor>();\r\n    actorUpdated = new EventEmitter<Actor>();\r\n    actorsUpdated = new EventEmitter<Actor[]>();\r\n    actionRemoved = new EventEmitter<BaseAction>();\r\n    actionUpdated = new EventEmitter<BaseAction>();\r\n    actionsUpdated = new EventEmitter<BaseAction[]>();\r\n    gameUpdated = new EventEmitter<Game>();\r\n    messageAdded = new EventEmitter<Message>();\r\n\r\n    connectionEstablished = new EventEmitter<Boolean>();\r\n\r\n    private connectionIsEstablished = false;\r\n    private _hubConnection: HubConnection;\r\n\r\n    private gId: number = 0;\r\n\r\n    constructor() {\r\n        this.createConnection();\r\n        this.registerOnServerEvents();\r\n        this.startConnection();\r\n    }\r\n\r\n    public async registerForGame(gameId: number): Promise<void> {\r\n        await whenTrue(() => this.connectionIsEstablished);\r\n\r\n        await this._hubConnection.invoke('registerForGame', gameId);\r\n        this.gId = gameId;\r\n    }\r\n\r\n    private createConnection() {\r\n        this._hubConnection = new HubConnectionBuilder()\r\n            .configureLogging(signalR.LogLevel.Information)\r\n            .withUrl('/hubs/EncounterHub')\r\n            .withAutomaticReconnect(new retryPolicy())\r\n            .build();\r\n    }\r\n\r\n    private startConnection(): void {\r\n        this._hubConnection\r\n            .start()\r\n            .then(() => {\r\n                this.connectionIsEstablished = true;\r\n                console.log('Hub connection started');\r\n                this.connectionEstablished.emit(true);\r\n            })\r\n            .catch(err => {\r\n                console.log('Error while establishing connection, retrying...');\r\n                setTimeout(()=> { this.startConnection(); }, 5000);\r\n            });\r\n    }\r\n\r\n    private registerOnServerEvents(): void {\r\n        //this._hubConnection.\r\n\r\n        this._hubConnection.onreconnected((id) => {\r\n            if (this.gId > 0) {\r\n                this.registerForGame(this.gId);\r\n            }\r\n        });\r\n        //MessageAdded\r\n        this._hubConnection.on('MessageAdded', (data: any) => {\r\n            this.messageAdded.emit(data);\r\n        });\r\n        this._hubConnection.on('RemovedAction', (data: any) => {\r\n            this.actionRemoved.emit(data);\r\n        });\r\n        this._hubConnection.on('UpdatedAction', (data: any) => {\r\n            this.actionUpdated.emit(data);\r\n        });\r\n        this._hubConnection.on('UpdatedActions', (data: any) => {\r\n            this.actionsUpdated.emit(data);\r\n        });\r\n        this._hubConnection.on('RemovedActor', (data: any) => {\r\n            this.actorRemoved.emit(data);\r\n        });\r\n        this._hubConnection.on('UpdatedActor', (data: any) => {\r\n            this.actorUpdated.emit(data);\r\n        });\r\n        this._hubConnection.on('UpdatedActors', (data: any) => {\r\n            this.actorsUpdated.emit(data);\r\n        });\r\n        //UpdateGame\r\n        this._hubConnection.on('UpdateGame', (data: any) => {\r\n            this.gameUpdated.emit(data);\r\n        });\r\n    }\r\n}    ","import { Injectable } from '@angular/core';\r\nimport * as Enums from '@/entities/EnumDefinitions'\r\nimport { ReferenceRepository } from '@/repositories';\r\nimport { ActionGroup, Actor, Attack } from '@/entities';\r\nimport { ActionDefinition } from '@/entities';\r\nimport { ConstitutionBonusChart } from '@/entities';\r\nimport { CriticalCode } from '@/entities';\r\nimport { CriticalIgnore } from '@/entities';\r\nimport { IQ } from '@/entities';\r\nimport { LevelChart } from '@/entities';\r\nimport { Outlook } from '@/entities';\r\nimport { Pace } from '@/entities';\r\nimport { SizeRating } from '@/entities';\r\nimport { SpeedChart } from '@/entities';\r\nimport { AttackType } from '@/entities';\r\nimport { CriticalType } from '@/entities';\r\nimport { WeaponType } from '@/entities';\r\nimport { Book } from '@/entities';\r\nimport { PsychicRefractoryPeriodEntry } from '@/entities';\r\nimport { iTreeNode } from '@/elements/treeview/itreenode';\r\nimport { MutexLock } from '@/_helpers/Lock';\r\nimport { whenTrue } from '@/_helpers/Tasks';\r\n\r\nexport class treeEntry implements iTreeNode {\r\n\r\n    public action: ActionDefinition = null;\r\n    public attack: Attack = null;\r\n\r\n    public children: Array<treeEntry> = new Array<treeEntry>();\r\n\r\n    public parent: treeEntry;\r\n\r\n    //private _isSelected: boolean = false;\r\n    //public isOpen: boolean = false;\r\n\r\n    public constructor(public code:string, public text:string) {\r\n\r\n    }\r\n\r\n    //public get isSelected():boolean {\r\n    //    return this._isSelected;\r\n    //}\r\n    //public set isSelected(value: boolean) {\r\n    //    this.treeTop.clearSelected();\r\n\r\n    //    this._isSelected = true;\r\n    //    this.openNode();\r\n\r\n    //}\r\n\r\n    //public openNode() {\r\n    //    this.isOpen = true;\r\n    //    if (this.parent != null) {\r\n    //        this.parent.openNode();\r\n    //    }\r\n    //}\r\n\r\n    //private clearSelected() {\r\n    //    this._isSelected = false;\r\n    //    this.children.forEach((child) => {\r\n    //        child.clearSelected();\r\n    //    });\r\n    //}\r\n\r\n    //public get treeTop(): treeEntry {\r\n    //    if (this.parent == null) {\r\n    //        return this;\r\n    //    }\r\n    //    return this.parent.treeTop;\r\n    //}\r\n\r\n    public addChild(node: treeEntry) {\r\n        this.children.push(node);\r\n        node.parent = this;\r\n    }\r\n\r\n    public findNode(action: ActionDefinition, attack: Attack = null):treeEntry {\r\n        if (this.action != null && this.action.id == action.id &&\r\n            (attack == null ||\r\n                (this.attack != null && attack.id == this.attack.id))) {\r\n            return this;\r\n        }\r\n        var node: treeEntry = null;\r\n        this.children.forEach((n) => {\r\n            node = node || n.findNode(action, attack);\r\n        });\r\n        return node;\r\n    }\r\n\r\n    //public getSelected(): treeEntry {\r\n    //    if (this.isSelected) {\r\n    //        return this;\r\n    //    }\r\n    //    var node: treeEntry = null;\r\n    //    this.children.forEach((n) => {\r\n    //        node = node || n.getSelected();\r\n    //    });\r\n    //    return node;\r\n    //}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n@Injectable({ providedIn: 'root' } )\r\nexport class ReferencesService {\r\n\r\n    public ActionGroups: Array<ActionGroup> = null;\r\n    public ConstitutionBonusCharts: Array<ConstitutionBonusChart> = null;\r\n    public CriticalCodes: Array<CriticalCode> = null;\r\n    public CriticalIgnores: Array<CriticalIgnore> = null;\r\n    public IQs: Array<IQ> = null;\r\n    public LevelCharts: Array<LevelChart> = null;\r\n    public Outlooks: Array<Outlook> = null;\r\n    public Paces: Array<Pace> = null;\r\n    public SizeRatings: Array<SizeRating> = null;\r\n    public SpeedCharts: Array<SpeedChart> = null;\r\n    public AttackTypes: Array<AttackType> = null;\r\n    public CriticalTypes: Array<CriticalType> = null;\r\n    public WeaponTypes: Array<WeaponType> = null;\r\n    public Books: Array<Book> = null;\r\n    public PsychicRefractoryPeriodEntrys: Array<PsychicRefractoryPeriodEntry> = null;\r\n\r\n\r\n    private _actionTree: treeEntry = null;\r\n    private _attackNodes: Array<treeEntry> = new Array<treeEntry>();\r\n    private treeLock = new MutexLock();\r\n\r\n    constructor(private referenceRepo: ReferenceRepository) {\r\n        this.refreshAsync();\r\n\r\n    }\r\n\r\n    private async buildActionTreeAsync(): Promise<void> {\r\n\r\n        await whenTrue(() => this.ActionGroups != null);\r\n\r\n        this._actionTree = new treeEntry(\"Top\", \"Top\");\r\n\r\n        this.ActionGroups.forEach((group) => {\r\n            var agNode = new treeEntry(\"group_\" + group.id, group.name);\r\n            this._actionTree.children.push(agNode);\r\n\r\n            group.actions.forEach((act) => {\r\n                var actNode = new treeEntry(\"action_\" + act.id, act.name);\r\n                actNode.action = act;\r\n                agNode.addChild(actNode);\r\n                if (act.isAttack) {\r\n                    this._attackNodes.push(actNode);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public async getActionTreeAsync(actor: Actor): Promise<treeEntry> {\r\n        if (this._actionTree == null) {\r\n            await this.treeLock.LockAreaAsync(async ():Promise<void> => {\r\n                if (this._actionTree == null) {\r\n                    await this.buildActionTreeAsync();\r\n                }\r\n            });\r\n        }\r\n       // debugger;\r\n        //var sel = this._actionTree.getSelected();\r\n        if (actor != null) {\r\n            this._attackNodes.forEach((node) => {\r\n                node.children = new Array<treeEntry>();\r\n\r\n\r\n                actor.attacks.forEach((att) => {\r\n                    var n = new treeEntry(\"attack_\" + att.id, att.name);\r\n                    n.action = node.action;\r\n                    n.attack = att;\r\n                    node.addChild(n);\r\n                });\r\n            });\r\n        }\r\n        //if (sel != null) {\r\n        //    var nd = this._actionTree.findNode(sel.action, sel.attack);\r\n        //    if (nd != null) {\r\n        //        nd.isSelected = true;\r\n        //    }\r\n        //}\r\n\r\n        return this._actionTree;\r\n    }\r\n\r\n\r\n    public async refreshAsync():Promise<void> {\r\n        this.referenceRepo.getActionGroups()\r\n            .subscribe((items) => {\r\n                this.ActionGroups = items;\r\n            });\r\n\r\n        this.referenceRepo.getConstitutionBonusCharts()\r\n            .subscribe((items) => {\r\n                this.ConstitutionBonusCharts = items;\r\n            });\r\n\r\n        this.referenceRepo.getCriticalCodes()\r\n            .subscribe((items) => {\r\n                this.CriticalCodes = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getCriticalIgnores()\r\n            .subscribe((items) => {\r\n                this.CriticalIgnores = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getIQs()\r\n            .subscribe((items) => {\r\n                this.IQs = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getLevelCharts()\r\n            .subscribe((items) => {\r\n                this.LevelCharts = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getOutlooks()\r\n            .subscribe((items) => {\r\n                this.Outlooks = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getPaces()\r\n            .subscribe((items) => {\r\n                this.Paces = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getSizeRatings()\r\n            .subscribe((items) => {\r\n                this.SizeRatings = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getSpeedCharts()\r\n            .subscribe((items) => {\r\n                this.SpeedCharts = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getAttackTypes()\r\n            .subscribe((items) => {\r\n                this.AttackTypes = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getCriticalTypes()\r\n            .subscribe((items) => {\r\n                this.CriticalTypes = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getWeaponTypes()\r\n            .subscribe((items) => {\r\n                this.WeaponTypes = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getBooks()\r\n            .subscribe((items) => {\r\n                this.Books = items;\r\n            });\r\n\r\n\r\n        this.referenceRepo.getPsychicRefractoryPeriodEntries()\r\n            .subscribe((items) => {\r\n                this.PsychicRefractoryPeriodEntrys = items;\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","\r\n\r\nexport * from \"./Alert.service\";\r\nexport * from \"./Authentication.service\";\r\nexport * from \"./Encounter.service\";\r\nexport * from \"./EncounterHub.service\";\r\nexport * from \"./References.service\";\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'character',\r\n    templateUrl: './character.component.html',\r\n    styleUrls: ['./character.component.css']\r\n})\r\n/** character component*/\r\nexport class CharacterComponent {\r\n    /** character ctor */\r\n    constructor() {\r\n\r\n    }\r\n}","<div style=\"border: 1px solid red\">character Component</div>","\nexport * from './character.component';\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'creature',\r\n    templateUrl: './creature.component.html',\r\n    styleUrls: ['./creature.component.css']\r\n})\r\n/** creature component*/\r\nexport class CreatureComponent {\r\n    /** creature ctor */\r\n    constructor() {\r\n\r\n    }\r\n}","<div style=\"border: 1px solid red\">creature Component</div>","\nexport * from './creature.component';\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Actor, Attack, BaseAction, Message } from '@/entities';\r\nimport { AuthenticationService, EncounterService, treeEntry } from '@/services';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EnumDefinitions } from '@/entities/EnumDefinitions';\r\nimport ViewTypeEnum = EnumDefinitions.ViewTypeEnum;\r\nimport ActionTypeEnum = EnumDefinitions.ActionTypeEnum;\r\nimport { ProposeAction } from '@/components/encounter';\r\nimport { delay } from '../../_helpers';\r\n\r\n\r\n@Component({\r\n    selector: 'app-encounter',\r\n    templateUrl: './encounter.component.html',\r\n    styleUrls: ['./encounter.component.css']\r\n})\r\n/** encounter component*/\r\nexport class EncounterComponent implements OnInit, OnChanges {\r\n\r\n\r\n    //public actions: Array<BaseAction> = null;\r\n\r\n    private _currentActionTree: treeEntry = null;\r\n\r\n\r\n    /** encounter ctor */\r\n    constructor(public gameView: EncounterService,\r\n        private _route: ActivatedRoute,\r\n        private _userService: AuthenticationService    ) {\r\n        this._route.paramMap.subscribe(params => {\r\n            let id = params.get('id');\r\n            //debugger;\r\n            this.gameView.selectGameAsync(parseInt(id));\r\n        })\r\n        this.ngInit();\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        //throw new Error('Method not implemented.');\r\n    }\r\n    ngOnInit(): void {\r\n\r\n\r\n    }\r\n\r\n    public get currentActionTree(): treeEntry {\r\n        return this._currentActionTree;\r\n    }\r\n\r\n    private async ngInit(): Promise<void> {\r\n        this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n    }\r\n\r\n\r\n    get currentTime(): string {\r\n        if (this.gameView != null && this.gameView.currentGame != null) {\r\n            return '' + Math.floor(this.gameView.currentGame.currentTime * 100) / 100;\r\n        }\r\n        return \"\";\r\n    }\r\n    get viewType(): ViewTypeEnum {\r\n        return this.gameView.viewType;\r\n    }\r\n    get messages(): Array<Message> {\r\n        return this.gameView.allMessages;\r\n    }\r\n    get actions(): Array<BaseAction> {\r\n        var acts = this.gameView.actions;\r\n\r\n        return acts;\r\n    }\r\n    get actors(): Array<Actor> {\r\n        var acts = this.gameView.actors;\r\n\r\n        return acts;\r\n    }\r\n\r\n    get selectedAction(): BaseAction {\r\n        var actor = this.gameView.selectedActor;\r\n        if (actor != null) {\r\n            var actions = this.gameView.selectedActions;\r\n            var action: BaseAction = null;\r\n\r\n            if (actions.length == 1) {\r\n                action = actions[0];\r\n            }\r\n\r\n            if (action != null && action.actionType == ActionTypeEnum.Effect) {\r\n                return null;\r\n            }\r\n\r\n            if (action == null  || action.actionType == ActionTypeEnum.Current) {\r\n                if (actor.currentAction == null || actor.currentAction.isActive) {\r\n                    action = actor.proposedAction || actor.nextAction;\r\n                } else {\r\n                    action = actor.proposedAction || actor.currentAction;\r\n                }\r\n            }\r\n\r\n\r\n            //debugger;\r\n            return action;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async addDamage() {\r\n\r\n    }\r\n\r\n    async addSpell() {\r\n\r\n    }\r\n\r\n    async addStunned() {\r\n\r\n    }\r\n\r\n    async rollD100Open() {\r\n\r\n    }\r\n\r\n    async rollD100() {\r\n\r\n    }\r\n    async resetEncounter() {\r\n\r\n    }\r\n\r\n\r\n    async onDoAction(action: BaseAction): Promise<void> {\r\n        if (this.isGM) {\r\n            var cur = action.whoIsActing.isActive;\r\n            await this.gameView.doProposedActionAsync(action.whoIsActing);\r\n            if (cur) {\r\n                await this.gameView.moveToNextAsync();\r\n            }\r\n            \r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n    async onProposeAction(action:ProposeAction): Promise<void> {\r\n        if (this.isGM) {\r\n            var act = await this.gameView.proposeActionAsync(action.actor, action.action, action.attack, action.modifier);\r\n\r\n            //await delay(100);\r\n\r\n            this.gameView.selectedAction = act;\r\n\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n\r\n    async deleteAction(action: BaseAction): Promise<void> {\r\n        if (this.isGM) {\r\n            await this.gameView.deleteActionAsync(action);\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n    async deleteActor(actor: Actor): Promise<void> {\r\n        if (this.isGM) {\r\n            await this.gameView.deleteActorAsync(actor);\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n    async selectActor(actor: Actor):Promise<void> {\r\n        if (this.isGM) {\r\n            this.gameView.selectedActor = actor;\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n    async selectAction(action: BaseAction): Promise<void> {\r\n        if (this.isGM) {\r\n            this.gameView.selectedAction = action;\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n    get isGM(): boolean {\r\n        return this.viewType == ViewTypeEnum.GM;\r\n    }\r\n\r\n    get isPlayer(): boolean {\r\n        return this.viewType == ViewTypeEnum.Player;\r\n    }\r\n\r\n    get isViewOnly(): boolean {\r\n        return this.viewType == ViewTypeEnum.Overview;\r\n    }\r\n\r\n\r\n    async moveToNext():Promise<void> {\r\n        if (this.isGM) {\r\n            await this.gameView.moveToNextAsync();\r\n            this._currentActionTree = await this.gameView.currentActionTreeAsync();\r\n        }\r\n    }\r\n\r\n}","<div class=\"h-100\"  [ngClass]=\"{'fullView': isGM}\">\r\n    <div class=\"row h-100\">\r\n        <div class=\"col-3 h-100 columnLeft\" *ngIf=\"isGM\">\r\n            <div class=\"encounter-box\">\r\n                <h2>Library</h2>\r\n                encounter Component\r\n            </div>\r\n        </div>\r\n        <div class=\"h-100 columnCenter\" [ngClass]=\"{'col-6': isGM,\r\n                                       'col-7': !isGM}\">\r\n            <div class=\" actorListArea h-50\">\r\n                <h2 class=\"actorListHeader\">\r\n                    <span *ngIf=\"isGM\" style=\"float:right; display:block;\">\r\n                        <button class=\"btn btn-warning btn-sm\" (click)=\"addDamage()\">\r\n                            <i class='material-icons'>stars</i> Add Damage\r\n                        </button>\r\n                        <button class=\"btn btn-success btn-sm\" (click)=\"addSpell()\">\r\n                            <i class='material-icons'>supervised_user_circle</i> Cast Spell/Psychic\r\n                        </button>\r\n                        <button class=\"btn btn-success btn-sm\" (click)=\"addStunned()\">\r\n                            <i class='material-icons'>run_circle</i> Add Stunned Maneuvering\r\n                        </button>\r\n                        <button class=\"btn btn-info btn-sm\" (click)=\"rollD100Open()\">\r\n                            <i class='material-icons'>auto_awesome</i> Roll D100 Open\r\n                        </button>\r\n                        <button class=\"btn btn-info btn-sm\" (click)=\"rollD100()\">\r\n                            <i class='material-icons'>auto_awesome</i> Roll D100\r\n                        </button>\r\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"resetEncounter()\">\r\n                            <i class='material-icons'>settings_backup_restore</i> Reset Encounter\r\n                        </button>\r\n                    </span>\r\n                    Actors\r\n                </h2>\r\n                <div class=\"h-90\">\r\n                    <actor-list [actors]=\"actors\" [viewType]=\"viewType\" [isSelectable]=\"isGM\" (onSelect)=\"selectActor($event)\" (onDeleteClick)=\"deleteActor($event)\"></actor-list>\r\n                </div>\r\n            </div>\r\n            <div class=\"h-50 row\">\r\n                <div class=\"col-5 h-100\">\r\n                    <div class=\"encounter-box messageListArea\">\r\n                        <message-list [messages]=\"messages\"></message-list>\r\n                    </div>\r\n                </div>\r\n                <div class=\" col-7 h-100\" *ngIf=\"isGM\">\r\n                    <div class=\"encounter-box actionEditArea\" *ngIf=\"selectedAction!=null\">\r\n                        <h2>\r\n                            Action\r\n                        </h2>\r\n                        <div class=\"actionEditControl\">\r\n                            <action-edit [selectedAction]=\"selectedAction\" [actionTree]=\"currentActionTree\" (onProposeAction)=\"onProposeAction($event)\" (onDoAction)=\"onDoAction($event)\"></action-edit>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"h-100 columnRight\" [ngClass]=\"{'col-3': isGM,\r\n                                       'col-5': !isGM}\">\r\n            <div class=\"encounter-box actionsList\">\r\n                <h2>\r\n                    <span *ngIf=\"isGM\" style=\"float:right; display:block;\">\r\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"moveToNext()\">\r\n                            <i class='material-icons'>navigate_next</i> Move Next\r\n                        </button>\r\n                    </span>\r\n                    Actions <span class=\"subText\">Current Time: {{currentTime}}</span>\r\n                </h2>\r\n                <actions-list [actions]=\"actions\" [viewType]=\"viewType\" [isSelectable]=\"isGM\" (onSelect)=\"selectAction($event)\" (onDeleteClick)=\"deleteAction($event)\" ></actions-list>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\nexport * from './encounter.component';\n","import { Component, VERSION } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent {\r\n    public name: string;\r\n\r\n\r\n    constructor() {\r\n        this.name = `Angular! v${VERSION.full}`\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <h1>Combat Environment Activity Tracking System</h1>\r\n    <h2>Hello {{name}}</h2>\r\n    <p>CEATSii second by second, threaded combat system</p>\r\n</div>\r\n","\nexport * from './home.component';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n//export function getBaseUrl() {\n//  return document.getElementsByTagName('base')[0].href;\n//}\n\n//const providers = [\n//  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: <Array<any>>[] }\n//];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n//platformBrowserDynamic(providers).bootstrapModule(AppModule)\n//  .catch(err => console.log(err));\n\n"],"names":["WhenTrueAsync","func","maxLockTime","p","Promise","resolve","reject","startTime","Date","check","t","seconds","getTime","setTimeout","MutexLock","constructor","isLocked","lastCalled","locked","WaitTillUnlocked","LockAreaAsync","BeginLock","EndLock","Locking","Task","onFulfilled","promise","then","val","resolveFunc","rFunc","length","bfunc","RecurringTask","callback","timeout","time","isRunning","_isRunning","timedCall","refreshLock","runAfterWait","waitTimeMilliSeconds","cback","timer","throttle","clearTimeout","window","start","trigger","call","debounced","delay","msec","whenReady","$","whenTrue","trueFunc","WhenAll","list","progressCB","tot","fin","forEach","all","map","i0","LoginMenuComponent","authorizeService","ngOnInit","isAuthenticated","userName","currentUser","pipe","u","selectors","decls","vars","consts","template","Validators","LoginComponent","formBuilder","authenticationService","route","router","currentUserValue","navigate","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","f","controls","onSubmit","submitted","invalid","loading","user","loginAsync","value","ctx","LogoutComponent","activatedRoute","logoutAsync","navigateByUrl","styles","RegisterModel","RegisterComponent","accountService","form","firstName","lastName","email","minLength","model","registerAsync","EventEmitter","EnumDefinitions","CriticalEffect","ParryType","ViewTypeEnum","CharacterType","ActorListComponent","gameView","Array","Overview","actor","isSelectable","onSelect","next","act","currentAction","currentArmor","type","ac","curAction","currentAttack","attackType","name","weaponUsed","sizeRating","currentModifier","currentCrits","parry","Must_Parry","No_Parry","ob","i","parryNegative","db","color","isGM","viewType","GM","isPlayer","Player","isViewOnly","isPC","PC","isCurrentUser","isControlledVisible","currentTime","Math","floor","endTime","isNaN","num","inputs","actors","outputs","Enums","GameType","ctx_r17","ctx_r0","CharacterEditComponent","encounterService","charRepo","modalService","g","saveCharacterAsync","character","id","onSave","emit","isRolemaster","currentGame","gameType","RMSS","hasCurrentGame","onWeaponDeleted","weapon","index","weapons","indexOf","splice","onArmorDeleted","armor","armors","addToEncounter","open","addCharacterToEncounterAsync","closeEdit","openModal","closeModal","close","rolledInit","onDelete","Character","CharacterListComponent","characterRepo","charId","selectedCharacter","getCharacterAsync","refresh","ngOnChanges","characters","selectCharacter","newCharacter","features","CreatureEditComponent","creatureRepo","referencesService","saveCreatureAsync","creature","onAttackDeleted","attack","attacks","addCreatureToEncounterAsync","Creature","CreatureListComponent","creatures","getCreaturesAsync","selectedCreature","getCreatureAsync","selectCreature","newCreature","Actor","BaseAction","ActionTypeEnum","ActionComponent","action","deleteAction","onDeleteClick","isEffect","actionType","Effect","cssClasses","cStr","actionTypeString","typeString","stateString","whoIsActing","isConcentrating","isMoving","suprised","usingAdrenalDB","isHasted","isSlowed","reoccuring","characterAction","isCurrent","Current","Proposed","cc","currentWeapon","isMustParry","isNoParry","currentOB","currentDB","currentBorderColor","currentBackColor","Router","EnumEx","GameEditComponent","gamesRepo","saveGameAsync","game","refreshAsync","gameTypes","gtype","dta","getNamesAndValues","selectEncounter","GameListComponent","gameRepo","gameId","selectedGame","getGameAsync","games","selectGame","newGame","ElementRef","QueryList","SimpleChanges","ctx_r10","item_r11","i_r12","TreeviewComponent","el","ngAfterViewInit","viewInitted","changes","OnChanges","sel","treeModel","getSelected","options","some","eleRef","optionsarray","code","nativeElement","getAttribute","scrollIntoViewSmoothly","items","treeTop","children","toggleSelection","$event","item","isOpen","isSelected","scrollIntoView","behavior","block","inline","getExpandCollapseClass","iconNeutral","iconCollapse","iconExpand","isChildrenExists","getTreeItemId","treeId","TREEVIEW_SUFFIX","getIconId","itemId","ICON_SUFFIX","getChildCount","isArray","collapsedState","viewQuery","Game","MainNavMenuComponent","gameRepository","init","createEncounter","gM_ID","subscribe","gms","getGamesAsync","filter","gm","onOpen","onClosed","BehaviorSubject","Observable","AuthenticateModel","ApplicationName","AuthenticationService","http","userRepository","currentUserSubject","asObservable","refreshUserAsync","getAccessToken","currentUserAsync","data","auth","authenticateAsync","logout","factory","providedIn","Message","ResponseEnum","ActorActionType","EncounterService","authService","actorRepo","actionRepo","encounterRepo","encounterHubService","referenceService","_alertService","success","setupEventsAsync","_timedService","cat","currentActionTreeAsync","acts","allActors","sortBy","obj","actions","allActions","element","array","Next","isForPC","SpellEffect","isSpellOnNPC","NPC","min","max","range","leftPercent","selectedActions","_currentActionTree","selectedAction","find","checkAction","selectedActor","proposedAction","removeActionAsync","nextAction","base","proposeActionAsync","currentAttack_ID","refreshAction","ActionGroups","a","selectActor","actorId","getActionTreeAsync","_currentGame","selectGameAsync","setCurrentGameAsync","registerForGame","gameUpdated","Object","assign","setActive","actionRemoved","removeAction","actionUpdated","actionsUpdated","refreshActions","actorRemoved","removeActor","actorUpdated","refreshActor","actorsUpdated","refreshActors","messageAdded","msg","allMessages","insert","isActive","baseAct","origAct","undefined","push","whoIsActing_ID","getCurrentGameAsync","error","tempActors","tempActions","getActorsInGame","getActionsInGame","getMessages","msgs","removedActions","removedActors","e","createActorFromCreatureAsync","createActorFromCharacterAsync","moveToNextAsync","result","response","DisplayMessage","message","AutoAdvance","deleteActionAsync","deleteActorAsync","removeActorAsync","modifier","doProposedActionAsync","HubConnectionBuilder","signalR","retryPolicy","nextRetryDelayInMilliseconds","retryContext","EncounterHubService","createConnection","registerOnServerEvents","startConnection","connectionIsEstablished","_hubConnection","invoke","gId","configureLogging","LogLevel","Information","withUrl","withAutomaticReconnect","build","console","log","connectionEstablished","catch","err","onreconnected","on","treeEntry","text","addChild","node","parent","findNode","n","ReferencesService","referenceRepo","buildActionTreeAsync","_actionTree","agNode","actNode","isAttack","_attackNodes","treeLock","att","getActionGroups","getConstitutionBonusCharts","ConstitutionBonusCharts","getCriticalCodes","CriticalCodes","getCriticalIgnores","CriticalIgnores","getIQs","IQs","getLevelCharts","LevelCharts","getOutlooks","Outlooks","getPaces","Paces","getSizeRatings","SizeRatings","getSpeedCharts","SpeedCharts","getAttackTypes","AttackTypes","getCriticalTypes","CriticalTypes","getWeaponTypes","WeaponTypes","getBooks","Books","getPsychicRefractoryPeriodEntries","PsychicRefractoryPeriodEntrys","ctx_r11","EncounterComponent","_route","_userService","paramMap","params","get","parseInt","ngInit","currentActionTree","messages","addDamage","addSpell","addStunned","rollD100Open","rollD100","resetEncounter","onDoAction","cur","onProposeAction","deleteActor","selectAction","moveToNext"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}